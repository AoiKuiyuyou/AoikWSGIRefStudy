
         _____ ___             ___            _                                   _ _         _                                           
   _    |_   _/ _ \     _     / _ \     _    | |_ _ __ __ _  ___ ___     ___ __ _| | |___    (_)_ __      ___ _ __   ___  ___ ___     _   
 _| |_    | || | | |  _| |_  | | | |  _| |_  | __| '__/ _` |/ __/ _ \   / __/ _` | | / __|   | | '_ \    / __| '_ \ / _ \/ __/ __|  _| |_ 
|_   _|   | || |_| | |_   _| | |_| | |_   _| | |_| | | (_| | (_|  __/  | (_| (_| | | \__ \   | | | | |   \__ \ |_) |  __/ (__\__ \ |_   _|
  |_|     |_| \___/    |_|    \___/    |_|    \__|_|  \__,_|\___\___|___\___\__,_|_|_|___/___|_|_| |_|___|___/ .__/ \___|\___|___/   |_|  
                                                                   |_____|              |_____|     |_____|  |_|                          


# Parsed specs:
('socket.IntEnum', {'regex': False, 'spec_arg': False, 'spec_uri': 'socket.IntEnum'})
('socket._intenum_converter', {'regex': False, 'spec_arg': False, 'spec_uri': 'socket._intenum_converter'})
('socket._realsocket', {'regex': False, 'spec_arg': False, 'spec_uri': 'socket._realsocket'})
('selectors.ABCMeta', {'regex': False, 'spec_arg': False, 'spec_uri': 'selectors.ABCMeta'})
('selectors.Mapping', {'regex': False, 'spec_arg': False, 'spec_uri': 'selectors.Mapping'})
('selectors.SelectSelector', {'regex': False, 'spec_arg': False, 'spec_uri': 'selectors.SelectSelector'})
('selectors.DefaultSelector.__init__', {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'selectors.DefaultSelector.__init__'})
('selectors.DefaultSelector.select', {'regex': False, 'spec_arg': 'hide_tree', 'spec_uri': 'selectors.DefaultSelector.select'})
('selectors.DefaultSelector.register', {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'selectors.DefaultSelector.register'})
('wsgiref.simple_server.WSGIRequestHandler.parse_request', {'regex': False, 'spec_arg': {'hide_below', 'highlight'}, 'spec_uri': 'wsgiref.simple_server.WSGIRequestHandler.parse_request'})
('wsgiref.simple_server.ServerHandler.setup_environ', {'regex': False, 'spec_arg': {'hide_below', 'highlight'}, 'spec_uri': 'wsgiref.simple_server.ServerHandler.setup_environ'})
('wsgiref.simple_server.WSGIRequestHandler.get_environ', {'regex': False, 'spec_arg': {'hide_below', 'highlight'}, 'spec_uri': 'wsgiref.simple_server.WSGIRequestHandler.get_environ'})
('aoiktracecall([.].+)?', {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'})
('.+[.]copy', {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]copy'})
('.+[.]__setattr__', {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'})
('.+[.]service_actions', {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]service_actions'})
('.+[.]log_request', {'regex': True, 'spec_arg': {'hide_below'}, 'spec_uri': '.+[.]log_request'})
('socket[.].+[.]getsockname', {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]getsockname'})
('socket[.].+[.]getpeername', {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]getpeername'})
('(socket|SocketServer)[.].+[.]fileno', {'regex': True, 'spec_arg': False, 'spec_uri': '(socket|SocketServer)[.].+[.]fileno'})
('socket[.]SocketIO[.]readinto', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.]SocketIO[.]readinto'})
('socket[.]SocketIO[.]write', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.]SocketIO[.]write'})
('socket[.]SocketIO[.]flush', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.]SocketIO[.]flush'})
('socket[.]SocketIO[.]close', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.]SocketIO[.]close'})
('socket[.]SocketIO[.]__(?!init)[^.]+__', {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'})
('socket[.]SocketIO[.].+', {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'})
('socket[.].+[.]__init__', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.].+[.]__init__'})
('socket[.].+[.]__[^.]+__', {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'})
('socket([.].+)?', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'})
('selectors[.].+[.]__[^.]+__', {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'})
('selectors([.].+)?', {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'})
('(socketserver|SocketServer)._eintr_retry', {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)._eintr_retry'})
('(socketserver|SocketServer)._ServerSelector', {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)._ServerSelector'})
('(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__', {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'})
('(socketserver|SocketServer)([.].+)?', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'})
('http[.].+[.]__(?!init)[^.]+__', {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'})
('http([.].+)?', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'})
('BaseHTTPServer[.].+[.]__(?!init)[^.]+__', {'regex': True, 'spec_arg': False, 'spec_uri': 'BaseHTTPServer[.].+[.]__(?!init)[^.]+__'})
('BaseHTTPServer([.].+)?', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'BaseHTTPServer([.].+)?'})
('wsgiref[.].+[.]__(?!init)[^.]+__', {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'})
('wsgiref([.].+)?', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'})
('email[.].+[.]__(?!init)[^.]+__', {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'})
('email([.].+)?', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'})
('mimetools[.].+[.]__(?!init)[^.]+__', {'regex': True, 'spec_arg': False, 'spec_uri': 'mimetools[.].+[.]__(?!init)[^.]+__'})
('mimetools([.].+)?', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'mimetools([.].+)?'})
('__main__[.].+[.]__(?!init)[^.]+__', {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__(?!init)[^.]+__'})
('__main__([.].+)?', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '__main__([.].+)?'})

# ----- Process module `heapq` -----
# Match: heapq: None
!: heapq

# ----- Process module `importlib.machinery` -----
# Match: importlib.machinery: None
!: importlib.machinery

# ----- Process module `io` -----
# Match: io: None
!: io

# ----- Process module `distutils` -----
# Match: distutils: None
!: distutils

# ----- Process module `email.header` -----
# Match: email.header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header

# ----- Process class `email.header._Accumulator` -----
# Match: email.header._Accumulator: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator

# ---- Search base class `builtins.object` ----
# Match: email.header._Accumulator.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__delattr__ == builtins.object.__delattr__
# Match: email.header._Accumulator.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__dir__ == builtins.object.__dir__
# Match: email.header._Accumulator.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__eq__ == builtins.object.__eq__
# Match: email.header._Accumulator.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__format__ == builtins.object.__format__
# Match: email.header._Accumulator.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__ge__ == builtins.object.__ge__
# Match: email.header._Accumulator.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__getattribute__ == builtins.object.__getattribute__
# Match: email.header._Accumulator.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__gt__ == builtins.object.__gt__
# Match: email.header._Accumulator.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__hash__ == builtins.object.__hash__
# Match: email.header._Accumulator.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.__init__ == builtins.object.__init__
# Match: email.header._Accumulator.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__le__ == builtins.object.__le__
# Match: email.header._Accumulator.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__lt__ == builtins.object.__lt__
# Match: email.header._Accumulator.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__ne__ == builtins.object.__ne__
# Match: email.header._Accumulator.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__new__ == builtins.object.__new__
# Match: email.header._Accumulator.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__reduce__ == builtins.object.__reduce__
# Match: email.header._Accumulator.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email.header._Accumulator.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__repr__ == builtins.object.__repr__
# Match: email.header._Accumulator.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.header._Accumulator.__setattr__ == builtins.object.__setattr__
# Match: email.header._Accumulator.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__sizeof__ == builtins.object.__sizeof__
# Match: email.header._Accumulator.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__str__ == builtins.object.__str__
# Match: email.header._Accumulator.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `builtins.list` ----
# Match: email.header._Accumulator.__add__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__add__ == builtins.list.__add__
# Match: email.header._Accumulator.__contains__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__contains__ == builtins.list.__contains__
# Match: email.header._Accumulator.__delitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__delitem__ == builtins.list.__delitem__
# Match: email.header._Accumulator.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__eq__ == builtins.list.__eq__
# Match: email.header._Accumulator.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__ge__ == builtins.list.__ge__
# Match: email.header._Accumulator.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__getattribute__ == builtins.list.__getattribute__
# Match: email.header._Accumulator.__getitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__getitem__ == builtins.list.__getitem__
# Match: email.header._Accumulator.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__gt__ == builtins.list.__gt__
# Match: email.header._Accumulator.__iadd__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__iadd__ == builtins.list.__iadd__
# Match: email.header._Accumulator.__imul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__imul__ == builtins.list.__imul__
# Match: email.header._Accumulator.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.__init__ == builtins.list.__init__
# Match: email.header._Accumulator.__iter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__iter__ == builtins.list.__iter__
# Match: email.header._Accumulator.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__le__ == builtins.list.__le__
# Match: email.header._Accumulator.__len__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__len__ == builtins.list.__len__
# Match: email.header._Accumulator.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__lt__ == builtins.list.__lt__
# Match: email.header._Accumulator.__mul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__mul__ == builtins.list.__mul__
# Match: email.header._Accumulator.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__ne__ == builtins.list.__ne__
# Match: email.header._Accumulator.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__new__ == builtins.list.__new__
# Match: email.header._Accumulator.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__repr__ == builtins.list.__repr__
# Match: email.header._Accumulator.__reversed__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__reversed__ == builtins.list.__reversed__
# Match: email.header._Accumulator.__rmul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__rmul__ == builtins.list.__rmul__
# Match: email.header._Accumulator.__setitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__setitem__ == builtins.list.__setitem__
# Match: email.header._Accumulator.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__sizeof__ == builtins.list.__sizeof__
# Match: email.header._Accumulator.append: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.append == builtins.list.append
# Match: email.header._Accumulator.clear: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.clear == builtins.list.clear
# Match: email.header._Accumulator.copy: {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]copy'}
!: email.header._Accumulator.copy == builtins.list.copy
# Match: email.header._Accumulator.count: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.count == builtins.list.count
# Match: email.header._Accumulator.extend: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.extend == builtins.list.extend
# Match: email.header._Accumulator.index: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.index == builtins.list.index
# Match: email.header._Accumulator.insert: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.insert == builtins.list.insert
# Match: email.header._Accumulator.pop: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.pop == builtins.list.pop
# Match: email.header._Accumulator.remove: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.remove == builtins.list.remove
# Match: email.header._Accumulator.reverse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.reverse == builtins.list.reverse
# Match: email.header._Accumulator.sort: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.sort == builtins.list.sort

# ---- Search class `email.header._Accumulator` ----
# Match: email.header._Accumulator.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.__init__
# Match: email.header._Accumulator.__len__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__len__
# Match: email.header._Accumulator.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._Accumulator.__str__
# Match: email.header._Accumulator.is_onlyws: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.is_onlyws
# Match: email.header._Accumulator.part_count: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.part_count
# Match: email.header._Accumulator.pop: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.pop
# Match: email.header._Accumulator.pop_from: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.pop_from
# Match: email.header._Accumulator.push: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.push
# Match: email.header._Accumulator.reset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._Accumulator.reset

# ---- Wrap class `email.header._Accumulator`'s attributes ----
@: email.header._Accumulator.__init__
@: email.header._Accumulator.__setattr__ == builtins.object.__setattr__
@: email.header._Accumulator.append == builtins.list.append
@: email.header._Accumulator.clear == builtins.list.clear
@: email.header._Accumulator.count == builtins.list.count
@: email.header._Accumulator.extend == builtins.list.extend
@: email.header._Accumulator.index == builtins.list.index
@: email.header._Accumulator.insert == builtins.list.insert
@: email.header._Accumulator.is_onlyws
@: email.header._Accumulator.part_count
@: email.header._Accumulator.pop
@: email.header._Accumulator.pop_from
@: email.header._Accumulator.push
@: email.header._Accumulator.remove == builtins.list.remove
@: email.header._Accumulator.reset
@: email.header._Accumulator.reverse == builtins.list.reverse
@: email.header._Accumulator.sort == builtins.list.sort
# ===== Process class `email.header._Accumulator` =====


# ----- Process class `email.header._ValueFormatter` -----
# Match: email.header._ValueFormatter: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._ValueFormatter

# ---- Search base class `builtins.object` ----
# Match: email.header._ValueFormatter.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__delattr__ == builtins.object.__delattr__
# Match: email.header._ValueFormatter.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__dir__ == builtins.object.__dir__
# Match: email.header._ValueFormatter.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__eq__ == builtins.object.__eq__
# Match: email.header._ValueFormatter.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__format__ == builtins.object.__format__
# Match: email.header._ValueFormatter.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__ge__ == builtins.object.__ge__
# Match: email.header._ValueFormatter.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__getattribute__ == builtins.object.__getattribute__
# Match: email.header._ValueFormatter.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__gt__ == builtins.object.__gt__
# Match: email.header._ValueFormatter.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__hash__ == builtins.object.__hash__
# Match: email.header._ValueFormatter.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._ValueFormatter.__init__ == builtins.object.__init__
# Match: email.header._ValueFormatter.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__le__ == builtins.object.__le__
# Match: email.header._ValueFormatter.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__lt__ == builtins.object.__lt__
# Match: email.header._ValueFormatter.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__ne__ == builtins.object.__ne__
# Match: email.header._ValueFormatter.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__new__ == builtins.object.__new__
# Match: email.header._ValueFormatter.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__reduce__ == builtins.object.__reduce__
# Match: email.header._ValueFormatter.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email.header._ValueFormatter.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__repr__ == builtins.object.__repr__
# Match: email.header._ValueFormatter.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.header._ValueFormatter.__setattr__ == builtins.object.__setattr__
# Match: email.header._ValueFormatter.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__sizeof__ == builtins.object.__sizeof__
# Match: email.header._ValueFormatter.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__str__ == builtins.object.__str__
# Match: email.header._ValueFormatter.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `email.header._ValueFormatter` ----
# Match: email.header._ValueFormatter.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._ValueFormatter.__init__
# Match: email.header._ValueFormatter.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header._ValueFormatter.__str__
# Match: email.header._ValueFormatter._append_chunk: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._ValueFormatter._append_chunk
# Match: email.header._ValueFormatter._ascii_split: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._ValueFormatter._ascii_split
# Match: email.header._ValueFormatter._maxlengths: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._ValueFormatter._maxlengths
# Match: email.header._ValueFormatter._str: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._ValueFormatter._str
# Match: email.header._ValueFormatter.add_transition: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._ValueFormatter.add_transition
# Match: email.header._ValueFormatter.feed: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._ValueFormatter.feed
# Match: email.header._ValueFormatter.newline: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header._ValueFormatter.newline

# ---- Wrap class `email.header._ValueFormatter`'s attributes ----
@: email.header._ValueFormatter.__init__
@: email.header._ValueFormatter.__setattr__ == builtins.object.__setattr__
@: email.header._ValueFormatter._append_chunk
@: email.header._ValueFormatter._ascii_split
@: email.header._ValueFormatter._maxlengths
@: email.header._ValueFormatter._str
@: email.header._ValueFormatter.add_transition
@: email.header._ValueFormatter.feed
@: email.header._ValueFormatter.newline
# ===== Process class `email.header._ValueFormatter` =====


# ----- Process callable `email.header._max_append` -----
!: email.header._max_append == email.quoprimime._max_append

# ----- Process class `email.header.Header` -----
# Match: email.header.Header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header.Header

# ---- Search base class `builtins.object` ----
# Match: email.header.Header.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__delattr__ == builtins.object.__delattr__
# Match: email.header.Header.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__dir__ == builtins.object.__dir__
# Match: email.header.Header.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__eq__ == builtins.object.__eq__
# Match: email.header.Header.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__format__ == builtins.object.__format__
# Match: email.header.Header.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__ge__ == builtins.object.__ge__
# Match: email.header.Header.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__getattribute__ == builtins.object.__getattribute__
# Match: email.header.Header.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__gt__ == builtins.object.__gt__
# Match: email.header.Header.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__hash__ == builtins.object.__hash__
# Match: email.header.Header.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header.Header.__init__ == builtins.object.__init__
# Match: email.header.Header.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__le__ == builtins.object.__le__
# Match: email.header.Header.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__lt__ == builtins.object.__lt__
# Match: email.header.Header.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__ne__ == builtins.object.__ne__
# Match: email.header.Header.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__new__ == builtins.object.__new__
# Match: email.header.Header.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__reduce__ == builtins.object.__reduce__
# Match: email.header.Header.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email.header.Header.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__repr__ == builtins.object.__repr__
# Match: email.header.Header.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.header.Header.__setattr__ == builtins.object.__setattr__
# Match: email.header.Header.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__sizeof__ == builtins.object.__sizeof__
# Match: email.header.Header.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__str__ == builtins.object.__str__
# Match: email.header.Header.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `email.header.Header` ----
# Match: email.header.Header.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__eq__
# Match: email.header.Header.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header.Header.__init__
# Match: email.header.Header.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.header.Header.__str__
# Match: email.header.Header._nonctext: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header.Header._nonctext
# Match: email.header.Header._normalize: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header.Header._normalize
# Match: email.header.Header.append: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header.Header.append
# Match: email.header.Header.encode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header.Header.encode

# ---- Wrap class `email.header.Header`'s attributes ----
@: email.header.Header.__init__
@: email.header.Header.__setattr__ == builtins.object.__setattr__
@: email.header.Header._nonctext
@: email.header.Header._normalize
@: email.header.Header.append
@: email.header.Header.encode
# ===== Process class `email.header.Header` =====


# ----- Process callable `email.header.make_header` -----
# Match: email.header.make_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header.make_header

# ----- Process class `email.header.Charset` -----
!: email.header.Charset == email.charset.Charset

# ----- Process class `email.header.HeaderParseError` -----

# ----- Process callable `email.header.decode_header` -----
# Match: email.header.decode_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.header.decode_header
# ===== Process module `email.header` =====


# ----- Process module `_locale` -----
# Match: _locale: None
!: _locale

# ----- Process module `aoiktracecall.logging` -----
# Match: aoiktracecall.logging: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.logging

# ----- Process module `win32com.gen_py` -----
# Match: win32com.gen_py: None
!: win32com.gen_py

# ----- Process module `_weakref` -----
# Match: _weakref: None
!: _weakref

# ----- Process module `textwrap` -----
# Match: textwrap: None
!: textwrap

# ----- Process module `glob` -----
# Match: glob: None
!: glob

# ----- Process module `importlib._bootstrap` -----
# Match: importlib._bootstrap: None
!: importlib._bootstrap

# ----- Process module `struct` -----
# Match: struct: None
!: struct

# ----- Process module `winreg` -----
# Match: winreg: None
!: winreg

# ----- Process module `bz2` -----
# Match: bz2: None
!: bz2

# ----- Process module `ntpath` -----
# Match: ntpath: None
!: ntpath

# ----- Process module `sysconfig` -----
# Match: sysconfig: None
!: sysconfig

# ----- Process module `functools` -----
# Match: functools: None
!: functools

# ----- Process module `aoiktracecall.util` -----
# Match: aoiktracecall.util: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.util

# ----- Process module `_operator` -----
# Match: _operator: None
!: _operator

# ----- Process module `_compression` -----
# Match: _compression: None
!: _compression

# ----- Process module `pkg_resources.extern` -----
# Match: pkg_resources.extern: None
!: pkg_resources.extern

# ----- Process module `win32api` -----
# Match: win32api: None
!: win32api

# ----- Process module `pyfiglet` -----
# Match: pyfiglet: None
!: pyfiglet

# ----- Process module `shutil` -----
# Match: shutil: None
!: shutil

# ----- Process module `vext.helpers` -----
# Match: vext.helpers: None
!: vext.helpers

# ----- Process module `win32com` -----
# Match: win32com: None
!: win32com

# ----- Process module `email.errors` -----
# Match: email.errors: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.errors

# ----- Process class `email.errors.ObsoleteHeaderDefect` -----

# ----- Process class `email.errors.StartBoundaryNotFoundDefect` -----

# ----- Process class `email.errors.MessageDefect` -----

# ----- Process class `email.errors.InvalidHeaderDefect` -----

# ----- Process class `email.errors.NonASCIILocalPartDefect` -----

# ----- Process class `email.errors.MessageParseError` -----

# ----- Process class `email.errors.CharsetError` -----

# ----- Process class `email.errors.MessageError` -----

# ----- Process class `email.errors.InvalidMultipartContentTransferEncodingDefect` -----

# ----- Process class `email.errors.NonPrintableDefect` -----

# ----- Process class `email.errors.CloseBoundaryNotFoundDefect` -----

# ----- Process class `email.errors.MissingHeaderBodySeparatorDefect` -----

# ----- Process class `email.errors.HeaderDefect` -----

# ----- Process class `email.errors.FirstHeaderLineIsContinuationDefect` -----

# ----- Process class `email.errors.MisplacedEnvelopeHeaderDefect` -----

# ----- Process class `email.errors.UndecodableBytesDefect` -----

# ----- Process class `email.errors.HeaderMissingRequiredValue` -----

# ----- Process class `email.errors.MultipartInvariantViolationDefect` -----

# ----- Process class `email.errors.BoundaryError` -----

# ----- Process class `email.errors.MalformedHeaderDefect` -----

# ----- Process class `email.errors.HeaderParseError` -----

# ----- Process class `email.errors.MultipartConversionError` -----

# ----- Process class `email.errors.InvalidBase64PaddingDefect` -----

# ----- Process class `email.errors.InvalidBase64CharactersDefect` -----

# ----- Process class `email.errors.NoBoundaryInMultipartDefect` -----
# ===== Process module `email.errors` =====


# ----- Process module `pythoncom` -----
# Match: pythoncom: None
!: pythoncom

# ----- Process module `xml.parsers` -----
# Match: xml.parsers: None
!: xml.parsers

# ----- Process module `pkg_resources._vendor.packaging` -----
# Match: pkg_resources._vendor.packaging: None
!: pkg_resources._vendor.packaging

# ----- Process module `distutils.sysconfig` -----
# Match: distutils.sysconfig: None
!: distutils.sysconfig

# ----- Process module `aoiktracecall` -----
# Match: aoiktracecall: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall

# ----- Process module `encodings.aliases` -----
# Match: encodings.aliases: None
!: encodings.aliases

# ----- Process module `email.parser` -----
# Match: email.parser: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser

# ----- Process class `email.parser.BytesParser` -----
# Match: email.parser.BytesParser: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.BytesParser

# ---- Search base class `builtins.object` ----
# Match: email.parser.BytesParser.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__delattr__ == builtins.object.__delattr__
# Match: email.parser.BytesParser.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__dir__ == builtins.object.__dir__
# Match: email.parser.BytesParser.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__eq__ == builtins.object.__eq__
# Match: email.parser.BytesParser.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__format__ == builtins.object.__format__
# Match: email.parser.BytesParser.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__ge__ == builtins.object.__ge__
# Match: email.parser.BytesParser.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__getattribute__ == builtins.object.__getattribute__
# Match: email.parser.BytesParser.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__gt__ == builtins.object.__gt__
# Match: email.parser.BytesParser.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__hash__ == builtins.object.__hash__
# Match: email.parser.BytesParser.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.BytesParser.__init__ == builtins.object.__init__
# Match: email.parser.BytesParser.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__le__ == builtins.object.__le__
# Match: email.parser.BytesParser.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__lt__ == builtins.object.__lt__
# Match: email.parser.BytesParser.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__ne__ == builtins.object.__ne__
# Match: email.parser.BytesParser.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__new__ == builtins.object.__new__
# Match: email.parser.BytesParser.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__reduce__ == builtins.object.__reduce__
# Match: email.parser.BytesParser.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email.parser.BytesParser.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__repr__ == builtins.object.__repr__
# Match: email.parser.BytesParser.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.parser.BytesParser.__setattr__ == builtins.object.__setattr__
# Match: email.parser.BytesParser.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__sizeof__ == builtins.object.__sizeof__
# Match: email.parser.BytesParser.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__str__ == builtins.object.__str__
# Match: email.parser.BytesParser.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesParser.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `email.parser.BytesParser` ----
# Match: email.parser.BytesParser.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.BytesParser.__init__
# Match: email.parser.BytesParser.parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.BytesParser.parse
# Match: email.parser.BytesParser.parsebytes: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.BytesParser.parsebytes

# ---- Wrap class `email.parser.BytesParser`'s attributes ----
@: email.parser.BytesParser.__init__
@: email.parser.BytesParser.__setattr__ == builtins.object.__setattr__
@: email.parser.BytesParser.parse
@: email.parser.BytesParser.parsebytes
# ===== Process class `email.parser.BytesParser` =====


# ----- Process class `email.parser.BytesFeedParser` -----
!: email.parser.BytesFeedParser == email.feedparser.BytesFeedParser

# ----- Process class `email.parser.Parser` -----
# Match: email.parser.Parser: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.Parser

# ---- Search base class `builtins.object` ----
# Match: email.parser.Parser.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__delattr__ == builtins.object.__delattr__
# Match: email.parser.Parser.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__dir__ == builtins.object.__dir__
# Match: email.parser.Parser.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__eq__ == builtins.object.__eq__
# Match: email.parser.Parser.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__format__ == builtins.object.__format__
# Match: email.parser.Parser.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__ge__ == builtins.object.__ge__
# Match: email.parser.Parser.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__getattribute__ == builtins.object.__getattribute__
# Match: email.parser.Parser.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__gt__ == builtins.object.__gt__
# Match: email.parser.Parser.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__hash__ == builtins.object.__hash__
# Match: email.parser.Parser.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.Parser.__init__ == builtins.object.__init__
# Match: email.parser.Parser.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__le__ == builtins.object.__le__
# Match: email.parser.Parser.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__lt__ == builtins.object.__lt__
# Match: email.parser.Parser.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__ne__ == builtins.object.__ne__
# Match: email.parser.Parser.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__new__ == builtins.object.__new__
# Match: email.parser.Parser.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__reduce__ == builtins.object.__reduce__
# Match: email.parser.Parser.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email.parser.Parser.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__repr__ == builtins.object.__repr__
# Match: email.parser.Parser.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.parser.Parser.__setattr__ == builtins.object.__setattr__
# Match: email.parser.Parser.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__sizeof__ == builtins.object.__sizeof__
# Match: email.parser.Parser.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__str__ == builtins.object.__str__
# Match: email.parser.Parser.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.Parser.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `email.parser.Parser` ----
# Match: email.parser.Parser.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.Parser.__init__
# Match: email.parser.Parser.parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.Parser.parse
# Match: email.parser.Parser.parsestr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.Parser.parsestr

# ---- Wrap class `email.parser.Parser`'s attributes ----
@: email.parser.Parser.__init__
@: email.parser.Parser.__setattr__ == builtins.object.__setattr__
@: email.parser.Parser.parse
@: email.parser.Parser.parsestr
# ===== Process class `email.parser.Parser` =====


# ----- Process class `email.parser.BytesHeaderParser` -----
# Match: email.parser.BytesHeaderParser: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.BytesHeaderParser

# ---- Search base class `builtins.object` ----
# Match: email.parser.BytesHeaderParser.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__delattr__ == builtins.object.__delattr__
# Match: email.parser.BytesHeaderParser.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__dir__ == builtins.object.__dir__
# Match: email.parser.BytesHeaderParser.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__eq__ == builtins.object.__eq__
# Match: email.parser.BytesHeaderParser.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__format__ == builtins.object.__format__
# Match: email.parser.BytesHeaderParser.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__ge__ == builtins.object.__ge__
# Match: email.parser.BytesHeaderParser.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__getattribute__ == builtins.object.__getattribute__
# Match: email.parser.BytesHeaderParser.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__gt__ == builtins.object.__gt__
# Match: email.parser.BytesHeaderParser.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__hash__ == builtins.object.__hash__
# Match: email.parser.BytesHeaderParser.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.BytesHeaderParser.__init__ == builtins.object.__init__
# Match: email.parser.BytesHeaderParser.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__le__ == builtins.object.__le__
# Match: email.parser.BytesHeaderParser.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__lt__ == builtins.object.__lt__
# Match: email.parser.BytesHeaderParser.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__ne__ == builtins.object.__ne__
# Match: email.parser.BytesHeaderParser.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__new__ == builtins.object.__new__
# Match: email.parser.BytesHeaderParser.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__reduce__ == builtins.object.__reduce__
# Match: email.parser.BytesHeaderParser.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email.parser.BytesHeaderParser.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__repr__ == builtins.object.__repr__
# Match: email.parser.BytesHeaderParser.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.parser.BytesHeaderParser.__setattr__ == builtins.object.__setattr__
# Match: email.parser.BytesHeaderParser.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__sizeof__ == builtins.object.__sizeof__
# Match: email.parser.BytesHeaderParser.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__str__ == builtins.object.__str__
# Match: email.parser.BytesHeaderParser.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.BytesHeaderParser.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `email.parser.BytesParser` ----
# Match: email.parser.BytesHeaderParser.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.BytesHeaderParser.__init__ == email.parser.BytesParser.__init__
# Match: email.parser.BytesHeaderParser.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.parser.BytesHeaderParser.__setattr__ == builtins.object.__setattr__
# Match: email.parser.BytesHeaderParser.parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.BytesHeaderParser.parse == email.parser.BytesParser.parse
# Match: email.parser.BytesHeaderParser.parsebytes: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.BytesHeaderParser.parsebytes == email.parser.BytesParser.parsebytes

# ---- Search class `email.parser.BytesHeaderParser` ----
# Match: email.parser.BytesHeaderParser.parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.BytesHeaderParser.parse
# Match: email.parser.BytesHeaderParser.parsebytes: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.BytesHeaderParser.parsebytes

# ---- Wrap class `email.parser.BytesHeaderParser`'s attributes ----
@: email.parser.BytesHeaderParser.__init__ == email.parser.BytesParser.__init__
@: email.parser.BytesHeaderParser.__setattr__ == builtins.object.__setattr__
@: email.parser.BytesHeaderParser.parse
@: email.parser.BytesHeaderParser.parsebytes
# ===== Process class `email.parser.BytesHeaderParser` =====


# ----- Process class `email.parser.FeedParser` -----
!: email.parser.FeedParser == email.feedparser.FeedParser

# ----- Process class `email.parser.TextIOWrapper` -----
!: email.parser.TextIOWrapper == _io.TextIOWrapper

# ----- Process class `email.parser.StringIO` -----
!: email.parser.StringIO == _io.StringIO

# ----- Process class `email.parser.HeaderParser` -----
# Match: email.parser.HeaderParser: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.HeaderParser

# ---- Search base class `builtins.object` ----
# Match: email.parser.HeaderParser.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__delattr__ == builtins.object.__delattr__
# Match: email.parser.HeaderParser.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__dir__ == builtins.object.__dir__
# Match: email.parser.HeaderParser.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__eq__ == builtins.object.__eq__
# Match: email.parser.HeaderParser.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__format__ == builtins.object.__format__
# Match: email.parser.HeaderParser.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__ge__ == builtins.object.__ge__
# Match: email.parser.HeaderParser.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__getattribute__ == builtins.object.__getattribute__
# Match: email.parser.HeaderParser.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__gt__ == builtins.object.__gt__
# Match: email.parser.HeaderParser.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__hash__ == builtins.object.__hash__
# Match: email.parser.HeaderParser.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.HeaderParser.__init__ == builtins.object.__init__
# Match: email.parser.HeaderParser.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__le__ == builtins.object.__le__
# Match: email.parser.HeaderParser.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__lt__ == builtins.object.__lt__
# Match: email.parser.HeaderParser.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__ne__ == builtins.object.__ne__
# Match: email.parser.HeaderParser.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__new__ == builtins.object.__new__
# Match: email.parser.HeaderParser.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__reduce__ == builtins.object.__reduce__
# Match: email.parser.HeaderParser.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email.parser.HeaderParser.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__repr__ == builtins.object.__repr__
# Match: email.parser.HeaderParser.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.parser.HeaderParser.__setattr__ == builtins.object.__setattr__
# Match: email.parser.HeaderParser.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__sizeof__ == builtins.object.__sizeof__
# Match: email.parser.HeaderParser.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__str__ == builtins.object.__str__
# Match: email.parser.HeaderParser.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.parser.HeaderParser.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `email.parser.Parser` ----
# Match: email.parser.HeaderParser.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.HeaderParser.__init__ == email.parser.Parser.__init__
# Match: email.parser.HeaderParser.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.parser.HeaderParser.__setattr__ == builtins.object.__setattr__
# Match: email.parser.HeaderParser.parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.HeaderParser.parse == email.parser.Parser.parse
# Match: email.parser.HeaderParser.parsestr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.HeaderParser.parsestr == email.parser.Parser.parsestr

# ---- Search class `email.parser.HeaderParser` ----
# Match: email.parser.HeaderParser.parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.HeaderParser.parse
# Match: email.parser.HeaderParser.parsestr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.parser.HeaderParser.parsestr

# ---- Wrap class `email.parser.HeaderParser`'s attributes ----
@: email.parser.HeaderParser.__init__ == email.parser.Parser.__init__
@: email.parser.HeaderParser.__setattr__ == builtins.object.__setattr__
@: email.parser.HeaderParser.parse
@: email.parser.HeaderParser.parsestr
# ===== Process class `email.parser.HeaderParser` =====

# ===== Process module `email.parser` =====


# ----- Process module `_sitebuiltins` -----
# Match: _sitebuiltins: None
!: _sitebuiltins

# ----- Process module `itertools` -----
# Match: itertools: None
!: itertools

# ----- Process module `email.utils` -----
# Match: email.utils: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils

# ----- Process callable `email.utils._parsedate_tz` -----
!: email.utils._parsedate_tz == email._parseaddr._parsedate_tz

# ----- Process callable `email.utils._has_surrogates` -----
# Match: email.utils._has_surrogates: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils._has_surrogates

# ----- Process callable `email.utils.getaddresses` -----
# Match: email.utils.getaddresses: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils.getaddresses

# ----- Process callable `email.utils.parsedate_to_datetime` -----
# Match: email.utils.parsedate_to_datetime: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils.parsedate_to_datetime

# ----- Process callable `email.utils.encode_rfc2231` -----
# Match: email.utils.encode_rfc2231: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils.encode_rfc2231

# ----- Process callable `email.utils.collapse_rfc2231_value` -----
# Match: email.utils.collapse_rfc2231_value: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils.collapse_rfc2231_value

# ----- Process callable `email.utils.parsedate` -----
!: email.utils.parsedate == email._parseaddr.parsedate

# ----- Process class `email.utils.Charset` -----
!: email.utils.Charset == email.charset.Charset

# ----- Process callable `email.utils.parseaddr` -----
# Match: email.utils.parseaddr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils.parseaddr

# ----- Process callable `email.utils.make_msgid` -----
# Match: email.utils.make_msgid: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils.make_msgid

# ----- Process callable `email.utils.unquote` -----
# Match: email.utils.unquote: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils.unquote

# ----- Process class `email.utils._AddressList` -----
!: email.utils._AddressList == email._parseaddr._AddressList

# ----- Process callable `email.utils.quote` -----
!: email.utils.quote == email._parseaddr.quote

# ----- Process callable `email.utils.parsedate_tz` -----
!: email.utils.parsedate_tz == email._parseaddr.parsedate_tz

# ----- Process callable `email.utils._sanitize` -----
# Match: email.utils._sanitize: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils._sanitize

# ----- Process callable `email.utils.format_datetime` -----
# Match: email.utils.format_datetime: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils.format_datetime

# ----- Process callable `email.utils.formataddr` -----
# Match: email.utils.formataddr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils.formataddr

# ----- Process callable `email.utils.decode_params` -----
# Match: email.utils.decode_params: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils.decode_params

# ----- Process callable `email.utils.mktime_tz` -----
!: email.utils.mktime_tz == email._parseaddr.mktime_tz

# ----- Process callable `email.utils._format_timetuple_and_zone` -----
# Match: email.utils._format_timetuple_and_zone: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils._format_timetuple_and_zone

# ----- Process callable `email.utils.decode_rfc2231` -----
# Match: email.utils.decode_rfc2231: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils.decode_rfc2231

# ----- Process callable `email.utils.localtime` -----
# Match: email.utils.localtime: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils.localtime

# ----- Process callable `email.utils.formatdate` -----
# Match: email.utils.formatdate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.utils.formatdate
# ===== Process module `email.utils` =====


# ----- Process module `nt` -----
# Match: nt: None
!: nt

# ----- Process module `_random` -----
# Match: _random: None
!: _random

# ----- Process module `pyexpat.errors` -----
# Match: pyexpat.errors: None
!: pyexpat.errors

# ----- Process module `dis` -----
# Match: dis: None
!: dis

# ----- Process module `vext` -----
# Match: vext: None
!: vext

# ----- Process module `email.quoprimime` -----
# Match: email.quoprimime: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.quoprimime

# ----- Process callable `email.quoprimime.body_check` -----
# Match: email.quoprimime.body_check: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.quoprimime.body_check

# ----- Process callable `email.quoprimime.quote` -----
# Match: email.quoprimime.quote: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.quoprimime.quote

# ----- Process callable `email.quoprimime.decode` -----
# Match: email.quoprimime.decode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.quoprimime.decode

# ----- Process callable `email.quoprimime.body_encode` -----
# Match: email.quoprimime.body_encode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.quoprimime.body_encode

# ----- Process callable `email.quoprimime.header_check` -----
# Match: email.quoprimime.header_check: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.quoprimime.header_check

# ----- Process callable `email.quoprimime._max_append` -----
# Match: email.quoprimime._max_append: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.quoprimime._max_append

# ----- Process callable `email.quoprimime.body_length` -----
# Match: email.quoprimime.body_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.quoprimime.body_length

# ----- Process callable `email.quoprimime.unquote` -----
# Match: email.quoprimime.unquote: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.quoprimime.unquote

# ----- Process callable `email.quoprimime.header_length` -----
# Match: email.quoprimime.header_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.quoprimime.header_length

# ----- Process callable `email.quoprimime.decodestring` -----
# Match: email.quoprimime.decodestring: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.quoprimime.decodestring

# ----- Process callable `email.quoprimime.header_decode` -----
# Match: email.quoprimime.header_decode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.quoprimime.header_decode

# ----- Process callable `email.quoprimime.body_decode` -----
# Match: email.quoprimime.body_decode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.quoprimime.body_decode

# ----- Process callable `email.quoprimime.header_encode` -----
# Match: email.quoprimime.header_encode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.quoprimime.header_encode

# ----- Process callable `email.quoprimime._unquote_match` -----
# Match: email.quoprimime._unquote_match: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.quoprimime._unquote_match
# ===== Process module `email.quoprimime` =====


# ----- Process module `reprlib` -----
# Match: reprlib: None
!: reprlib

# ----- Process module `_heapq` -----
# Match: _heapq: None
!: _heapq

# ----- Process module `email.iterators` -----
# Match: email.iterators: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.iterators

# ----- Process callable `email.iterators.body_line_iterator` -----
# Match: email.iterators.body_line_iterator: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.iterators.body_line_iterator

# ----- Process callable `email.iterators.walk` -----
# Match: email.iterators.walk: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.iterators.walk

# ----- Process callable `email.iterators._structure` -----
# Match: email.iterators._structure: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.iterators._structure

# ----- Process callable `email.iterators.typed_subpart_iterator` -----
# Match: email.iterators.typed_subpart_iterator: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.iterators.typed_subpart_iterator

# ----- Process class `email.iterators.StringIO` -----
!: email.iterators.StringIO == _io.StringIO
# ===== Process module `email.iterators` =====


# ----- Process module `tokenize` -----
# Match: tokenize: None
!: tokenize

# ----- Process module `contextlib` -----
# Match: contextlib: None
!: contextlib

# ----- Process module `pkg_resources._vendor.six.moves` -----
# Match: pkg_resources._vendor.six.moves: None
!: pkg_resources._vendor.six.moves

# ----- Process module `_socket` -----
# Match: _socket: None
!: _socket

# ----- Process module `copyreg` -----
# Match: copyreg: None
!: copyreg

# ----- Process module `aoiktracecall.plugin.printing_plugin` -----
# Match: aoiktracecall.plugin.printing_plugin: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.plugin.printing_plugin

# ----- Process module `pkg_resources._vendor.six` -----
# Match: pkg_resources._vendor.six: None
!: pkg_resources._vendor.six

# ----- Process module `zipimport` -----
# Match: zipimport: None
!: zipimport

# ----- Process module `pyexpat` -----
# Match: pyexpat: None
!: pyexpat

# ----- Process module `mpl_toolkits` -----
# Match: mpl_toolkits: None
!: mpl_toolkits

# ----- Process module `types` -----
# Match: types: None
!: types

# ----- Process module `errno` -----
# Match: errno: None
!: errno

# ----- Process module `fnmatch` -----
# Match: fnmatch: None
!: fnmatch

# ----- Process module `_winapi` -----
# Match: _winapi: None
!: _winapi

# ----- Process module `importlib.abc` -----
# Match: importlib.abc: None
!: importlib.abc

# ----- Process module `site` -----
# Match: site: None
!: site

# ----- Process module `urllib` -----
# Match: urllib: None
!: urllib

# ----- Process module `importlib` -----
# Match: importlib: None
!: importlib

# ----- Process module `pkg_resources.extern.packaging.version` -----
# Match: pkg_resources.extern.packaging.version: None
!: pkg_resources.extern.packaging.version

# ----- Process module `enum` -----
# Match: enum: None
!: enum

# ----- Process module `pyexpat.model` -----
# Match: pyexpat.model: None
!: pyexpat.model

# ----- Process module `warnings` -----
# Match: warnings: None
!: warnings

# ----- Process module `socket` -----
# Match: socket: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket

# ----- Process callable `socket.fromfd` -----
# Match: socket.fromfd: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.fromfd

# ----- Process callable `socket.getaddrinfo` -----
# Match: socket.getaddrinfo: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.getaddrinfo

# ----- Process callable `socket.fromshare` -----
# Match: socket.fromshare: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.fromshare

# ----- Process callable `socket.inet_ntoa` -----
!: socket.inet_ntoa == _socket.inet_ntoa

# ----- Process callable `socket._intenum_converter` -----
# Match: socket._intenum_converter: {'regex': False, 'spec_arg': False, 'spec_uri': 'socket._intenum_converter'}
!: socket._intenum_converter

# ----- Process callable `socket.inet_pton` -----
!: socket.inet_pton == _socket.inet_pton

# ----- Process class `socket.gaierror` -----

# ----- Process class `socket.socket` -----
# Match: socket.socket: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket

# ---- Search base class `builtins.object` ----
# Match: socket.socket.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__delattr__ == builtins.object.__delattr__
# Match: socket.socket.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__dir__ == builtins.object.__dir__
# Match: socket.socket.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__eq__ == builtins.object.__eq__
# Match: socket.socket.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__format__ == builtins.object.__format__
# Match: socket.socket.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__ge__ == builtins.object.__ge__
# Match: socket.socket.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__getattribute__ == builtins.object.__getattribute__
# Match: socket.socket.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__gt__ == builtins.object.__gt__
# Match: socket.socket.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__hash__ == builtins.object.__hash__
# Match: socket.socket.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.].+[.]__init__'}
@: socket.socket.__init__ == builtins.object.__init__
# Match: socket.socket.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__le__ == builtins.object.__le__
# Match: socket.socket.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__lt__ == builtins.object.__lt__
# Match: socket.socket.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__ne__ == builtins.object.__ne__
# Match: socket.socket.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__new__ == builtins.object.__new__
# Match: socket.socket.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__reduce__ == builtins.object.__reduce__
# Match: socket.socket.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socket.socket.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__repr__ == builtins.object.__repr__
# Match: socket.socket.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socket.socket.__setattr__ == builtins.object.__setattr__
# Match: socket.socket.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__sizeof__ == builtins.object.__sizeof__
# Match: socket.socket.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__str__ == builtins.object.__str__
# Match: socket.socket.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `_socket.socket` ----
# Match: socket.socket.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__getattribute__ == _socket.socket.__getattribute__
# Match: socket.socket.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.].+[.]__init__'}
@: socket.socket.__init__ == _socket.socket.__init__
# Match: socket.socket.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__new__ == _socket.socket.__new__
# Match: socket.socket.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__repr__ == _socket.socket.__repr__
# Match: socket.socket._accept: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket._accept == _socket.socket._accept
# Match: socket.socket.bind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.bind == _socket.socket.bind
# Match: socket.socket.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.close == _socket.socket.close
# Match: socket.socket.connect: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.connect == _socket.socket.connect
# Match: socket.socket.connect_ex: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.connect_ex == _socket.socket.connect_ex
# Match: socket.socket.detach: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.detach == _socket.socket.detach
# Match: socket.socket.fileno: {'regex': True, 'spec_arg': False, 'spec_uri': '(socket|SocketServer)[.].+[.]fileno'}
!: socket.socket.fileno == _socket.socket.fileno
# Match: socket.socket.getpeername: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]getpeername'}
!: socket.socket.getpeername == _socket.socket.getpeername
# Match: socket.socket.getsockname: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]getsockname'}
!: socket.socket.getsockname == _socket.socket.getsockname
# Match: socket.socket.getsockopt: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.getsockopt == _socket.socket.getsockopt
# Match: socket.socket.gettimeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.gettimeout == _socket.socket.gettimeout
# Match: socket.socket.ioctl: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.ioctl == _socket.socket.ioctl
# Match: socket.socket.listen: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.listen == _socket.socket.listen
# Match: socket.socket.recv: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.recv == _socket.socket.recv
# Match: socket.socket.recv_into: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.recv_into == _socket.socket.recv_into
# Match: socket.socket.recvfrom: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.recvfrom == _socket.socket.recvfrom
# Match: socket.socket.recvfrom_into: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.recvfrom_into == _socket.socket.recvfrom_into
# Match: socket.socket.send: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.send == _socket.socket.send
# Match: socket.socket.sendall: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.sendall == _socket.socket.sendall
# Match: socket.socket.sendto: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.sendto == _socket.socket.sendto
# Match: socket.socket.setblocking: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.setblocking == _socket.socket.setblocking
# Match: socket.socket.setsockopt: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.setsockopt == _socket.socket.setsockopt
# Match: socket.socket.settimeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.settimeout == _socket.socket.settimeout
# Match: socket.socket.share: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.share == _socket.socket.share
# Match: socket.socket.shutdown: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.shutdown == _socket.socket.shutdown

# ---- Search class `socket.socket` ----
# Match: socket.socket.__enter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__enter__
# Match: socket.socket.__exit__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__exit__
# Match: socket.socket.__getstate__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__getstate__
# Match: socket.socket.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.].+[.]__init__'}
@: socket.socket.__init__
# Match: socket.socket.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__repr__
# Match: socket.socket._check_sendfile_params: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket._check_sendfile_params
# Match: socket.socket._decref_socketios: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket._decref_socketios
# Match: socket.socket._real_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket._real_close
# Match: socket.socket._sendfile_use_send: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket._sendfile_use_send
# Match: socket.socket._sendfile_use_sendfile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket._sendfile_use_sendfile
# Match: socket.socket.accept: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.accept
# Match: socket.socket.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.close
# Match: socket.socket.detach: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.detach
# Match: socket.socket.dup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.dup
# Match: socket.socket.get_inheritable: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.get_inheritable
# Match: socket.socket.makefile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.makefile
# Match: socket.socket.sendfile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.sendfile
# Match: socket.socket.set_inheritable: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.set_inheritable

# ---- Wrap class `socket.socket`'s attributes ----
@: socket.socket.__init__
@: socket.socket.__setattr__ == builtins.object.__setattr__
@: socket.socket._accept == _socket.socket._accept
@: socket.socket._check_sendfile_params
@: socket.socket._decref_socketios
@: socket.socket._real_close
@: socket.socket._sendfile_use_send
@: socket.socket._sendfile_use_sendfile
@: socket.socket.accept
@: socket.socket.bind == _socket.socket.bind
@: socket.socket.close
@: socket.socket.connect == _socket.socket.connect
@: socket.socket.connect_ex == _socket.socket.connect_ex
@: socket.socket.detach
@: socket.socket.dup
@: socket.socket.get_inheritable
@: socket.socket.getsockopt == _socket.socket.getsockopt
@: socket.socket.gettimeout == _socket.socket.gettimeout
@: socket.socket.ioctl == _socket.socket.ioctl
@: socket.socket.listen == _socket.socket.listen
@: socket.socket.makefile
@: socket.socket.recv == _socket.socket.recv
@: socket.socket.recv_into == _socket.socket.recv_into
@: socket.socket.recvfrom == _socket.socket.recvfrom
@: socket.socket.recvfrom_into == _socket.socket.recvfrom_into
@: socket.socket.send == _socket.socket.send
@: socket.socket.sendall == _socket.socket.sendall
@: socket.socket.sendfile
@: socket.socket.sendto == _socket.socket.sendto
@: socket.socket.set_inheritable
@: socket.socket.setblocking == _socket.socket.setblocking
@: socket.socket.setsockopt == _socket.socket.setsockopt
@: socket.socket.settimeout == _socket.socket.settimeout
@: socket.socket.share == _socket.socket.share
@: socket.socket.shutdown == _socket.socket.shutdown
# ===== Process class `socket.socket` =====


# ----- Process callable `socket.dup` -----
!: socket.dup == _socket.dup

# ----- Process callable `socket.getservbyport` -----
!: socket.getservbyport == _socket.getservbyport

# ----- Process callable `socket.create_connection` -----
# Match: socket.create_connection: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.create_connection

# ----- Process callable `socket.htons` -----
!: socket.htons == _socket.htons

# ----- Process callable `socket.getfqdn` -----
# Match: socket.getfqdn: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.getfqdn

# ----- Process class `socket.error` -----

# ----- Process callable `socket.ntohs` -----
!: socket.ntohs == _socket.ntohs

# ----- Process callable `socket.inet_ntop` -----
!: socket.inet_ntop == _socket.inet_ntop

# ----- Process callable `socket.setdefaulttimeout` -----
!: socket.setdefaulttimeout == _socket.setdefaulttimeout

# ----- Process class `socket.herror` -----

# ----- Process callable `socket.ntohl` -----
!: socket.ntohl == _socket.ntohl

# ----- Process class `socket._GiveupOnSendfile` -----

# ----- Process class `socket.SocketKind` -----
# Match: socket.SocketKind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketKind

# ---- Search base class `builtins.object` ----
# Match: socket.SocketKind.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__delattr__ == builtins.object.__delattr__
# Match: socket.SocketKind.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__dir__ == builtins.object.__dir__
# Match: socket.SocketKind.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__eq__ == builtins.object.__eq__
# Match: socket.SocketKind.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__format__ == builtins.object.__format__
# Match: socket.SocketKind.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__ge__ == builtins.object.__ge__
# Match: socket.SocketKind.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__getattribute__ == builtins.object.__getattribute__
# Match: socket.SocketKind.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__gt__ == builtins.object.__gt__
# Match: socket.SocketKind.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__hash__ == builtins.object.__hash__
# Match: socket.SocketKind.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.].+[.]__init__'}
@: socket.SocketKind.__init__ == builtins.object.__init__
# Match: socket.SocketKind.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__le__ == builtins.object.__le__
# Match: socket.SocketKind.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__lt__ == builtins.object.__lt__
# Match: socket.SocketKind.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__ne__ == builtins.object.__ne__
# Match: socket.SocketKind.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__new__ == builtins.object.__new__
# Match: socket.SocketKind.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__reduce__ == builtins.object.__reduce__
# Match: socket.SocketKind.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socket.SocketKind.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__repr__ == builtins.object.__repr__
# Match: socket.SocketKind.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socket.SocketKind.__setattr__ == builtins.object.__setattr__
# Match: socket.SocketKind.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__sizeof__ == builtins.object.__sizeof__
# Match: socket.SocketKind.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__str__ == builtins.object.__str__
# Match: socket.SocketKind.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `enum.Enum` ----
# Match: socket.SocketKind.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__dir__ == enum.Enum.__dir__
# Match: socket.SocketKind.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__format__ == enum.Enum.__format__
# Match: socket.SocketKind.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__hash__ == enum.Enum.__hash__
# Match: socket.SocketKind.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__reduce_ex__ == enum.Enum.__reduce_ex__
# Match: socket.SocketKind.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__repr__ == enum.Enum.__repr__
# Match: socket.SocketKind.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__str__ == enum.Enum.__str__
# Match: socket.SocketKind._member_type_: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketKind._member_type_ == enum.Enum._member_type_

# ---- Search base class `builtins.int` ----
# Match: socket.SocketKind.__abs__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__abs__ == builtins.int.__abs__
# Match: socket.SocketKind.__add__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__add__ == builtins.int.__add__
# Match: socket.SocketKind.__and__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__and__ == builtins.int.__and__
# Match: socket.SocketKind.__bool__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__bool__ == builtins.int.__bool__
# Match: socket.SocketKind.__ceil__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__ceil__ == builtins.int.__ceil__
# Match: socket.SocketKind.__divmod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__divmod__ == builtins.int.__divmod__
# Match: socket.SocketKind.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__eq__ == builtins.int.__eq__
# Match: socket.SocketKind.__float__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__float__ == builtins.int.__float__
# Match: socket.SocketKind.__floor__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__floor__ == builtins.int.__floor__
# Match: socket.SocketKind.__floordiv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__floordiv__ == builtins.int.__floordiv__
# Match: socket.SocketKind.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__format__ == builtins.int.__format__
# Match: socket.SocketKind.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__ge__ == builtins.int.__ge__
# Match: socket.SocketKind.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__getattribute__ == builtins.int.__getattribute__
# Match: socket.SocketKind.__getnewargs__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__getnewargs__ == builtins.int.__getnewargs__
# Match: socket.SocketKind.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__gt__ == builtins.int.__gt__
# Match: socket.SocketKind.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__hash__ == builtins.int.__hash__
# Match: socket.SocketKind.__index__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__index__ == builtins.int.__index__
# Match: socket.SocketKind.__int__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__int__ == builtins.int.__int__
# Match: socket.SocketKind.__invert__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__invert__ == builtins.int.__invert__
# Match: socket.SocketKind.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__le__ == builtins.int.__le__
# Match: socket.SocketKind.__lshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__lshift__ == builtins.int.__lshift__
# Match: socket.SocketKind.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__lt__ == builtins.int.__lt__
# Match: socket.SocketKind.__mod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__mod__ == builtins.int.__mod__
# Match: socket.SocketKind.__mul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__mul__ == builtins.int.__mul__
# Match: socket.SocketKind.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__ne__ == builtins.int.__ne__
# Match: socket.SocketKind.__neg__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__neg__ == builtins.int.__neg__
# Match: socket.SocketKind.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__new__ == builtins.int.__new__
# Match: socket.SocketKind.__or__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__or__ == builtins.int.__or__
# Match: socket.SocketKind.__pos__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__pos__ == builtins.int.__pos__
# Match: socket.SocketKind.__pow__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__pow__ == builtins.int.__pow__
# Match: socket.SocketKind.__radd__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__radd__ == builtins.int.__radd__
# Match: socket.SocketKind.__rand__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rand__ == builtins.int.__rand__
# Match: socket.SocketKind.__rdivmod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rdivmod__ == builtins.int.__rdivmod__
# Match: socket.SocketKind.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__repr__ == builtins.int.__repr__
# Match: socket.SocketKind.__rfloordiv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rfloordiv__ == builtins.int.__rfloordiv__
# Match: socket.SocketKind.__rlshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rlshift__ == builtins.int.__rlshift__
# Match: socket.SocketKind.__rmod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rmod__ == builtins.int.__rmod__
# Match: socket.SocketKind.__rmul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rmul__ == builtins.int.__rmul__
# Match: socket.SocketKind.__ror__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__ror__ == builtins.int.__ror__
# Match: socket.SocketKind.__round__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__round__ == builtins.int.__round__
# Match: socket.SocketKind.__rpow__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rpow__ == builtins.int.__rpow__
# Match: socket.SocketKind.__rrshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rrshift__ == builtins.int.__rrshift__
# Match: socket.SocketKind.__rshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rshift__ == builtins.int.__rshift__
# Match: socket.SocketKind.__rsub__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rsub__ == builtins.int.__rsub__
# Match: socket.SocketKind.__rtruediv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rtruediv__ == builtins.int.__rtruediv__
# Match: socket.SocketKind.__rxor__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rxor__ == builtins.int.__rxor__
# Match: socket.SocketKind.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__sizeof__ == builtins.int.__sizeof__
# Match: socket.SocketKind.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__str__ == builtins.int.__str__
# Match: socket.SocketKind.__sub__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__sub__ == builtins.int.__sub__
# Match: socket.SocketKind.__truediv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__truediv__ == builtins.int.__truediv__
# Match: socket.SocketKind.__trunc__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__trunc__ == builtins.int.__trunc__
# Match: socket.SocketKind.__xor__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__xor__ == builtins.int.__xor__
# Match: socket.SocketKind.bit_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketKind.bit_length == builtins.int.bit_length
# Match: socket.SocketKind.conjugate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketKind.conjugate == builtins.int.conjugate
# Match: socket.SocketKind.from_bytes: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketKind.from_bytes == builtins.int.from_bytes
# Match: socket.SocketKind.to_bytes: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketKind.to_bytes == builtins.int.to_bytes

# ---- Search base class `enum.IntEnum` ----
# Match: socket.SocketKind.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__format__ == enum.IntEnum.__format__
# Match: socket.SocketKind.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__new__ == enum.IntEnum.__new__
# Match: socket.SocketKind.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__repr__ == enum.IntEnum.__repr__
# Match: socket.SocketKind.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__str__ == enum.IntEnum.__str__
# Match: socket.SocketKind._member_type_: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketKind._member_type_ == enum.IntEnum._member_type_

# ---- Search class `socket.SocketKind` ----
# Match: socket.SocketKind.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__new__
# Match: socket.SocketKind.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__reduce_ex__
# Match: socket.SocketKind._member_type_: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketKind._member_type_ == enum.IntEnum._member_type_

# ---- Wrap class `socket.SocketKind`'s attributes ----
@: socket.SocketKind.__init__ == builtins.object.__init__
@: socket.SocketKind.__setattr__ == builtins.object.__setattr__
@: socket.SocketKind._member_type_ == enum.IntEnum._member_type_
@: socket.SocketKind.bit_length == builtins.int.bit_length
@: socket.SocketKind.conjugate == builtins.int.conjugate
@: socket.SocketKind.from_bytes == builtins.int.from_bytes
@: socket.SocketKind.to_bytes == builtins.int.to_bytes
# ===== Process class `socket.SocketKind` =====


# ----- Process class `socket.SocketType` -----
!: socket.SocketType == _socket.SocketType

# ----- Process class `socket.IntEnum` -----
!: socket.IntEnum == enum.IntEnum

# ----- Process callable `socket.socketpair` -----
# Match: socket.socketpair: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.socketpair

# ----- Process callable `socket.inet_aton` -----
!: socket.inet_aton == _socket.inet_aton

# ----- Process class `socket.SocketIO` -----
# Match: socket.SocketIO: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO

# ---- Search base class `builtins.object` ----
# Match: socket.SocketIO.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__delattr__ == builtins.object.__delattr__
# Match: socket.SocketIO.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__dir__ == builtins.object.__dir__
# Match: socket.SocketIO.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__eq__ == builtins.object.__eq__
# Match: socket.SocketIO.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__format__ == builtins.object.__format__
# Match: socket.SocketIO.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__ge__ == builtins.object.__ge__
# Match: socket.SocketIO.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__getattribute__ == builtins.object.__getattribute__
# Match: socket.SocketIO.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__gt__ == builtins.object.__gt__
# Match: socket.SocketIO.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__hash__ == builtins.object.__hash__
# Match: socket.SocketIO.__init__: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.__init__ == builtins.object.__init__
# Match: socket.SocketIO.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__le__ == builtins.object.__le__
# Match: socket.SocketIO.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__lt__ == builtins.object.__lt__
# Match: socket.SocketIO.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__ne__ == builtins.object.__ne__
# Match: socket.SocketIO.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__new__ == builtins.object.__new__
# Match: socket.SocketIO.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__reduce__ == builtins.object.__reduce__
# Match: socket.SocketIO.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socket.SocketIO.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__repr__ == builtins.object.__repr__
# Match: socket.SocketIO.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socket.SocketIO.__setattr__ == builtins.object.__setattr__
# Match: socket.SocketIO.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__sizeof__ == builtins.object.__sizeof__
# Match: socket.SocketIO.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__str__ == builtins.object.__str__
# Match: socket.SocketIO.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `_io._IOBase` ----
# Match: socket.SocketIO.__del__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__del__ == _io._IOBase.__del__
# Match: socket.SocketIO.__enter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__enter__ == _io._IOBase.__enter__
# Match: socket.SocketIO.__exit__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__exit__ == _io._IOBase.__exit__
# Match: socket.SocketIO.__iter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__iter__ == _io._IOBase.__iter__
# Match: socket.SocketIO.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__new__ == _io._IOBase.__new__
# Match: socket.SocketIO.__next__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.]SocketIO[.]__(?!init)[^.]+__'}
!: socket.SocketIO.__next__ == _io._IOBase.__next__
# Match: socket.SocketIO._checkClosed: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO._checkClosed == _io._IOBase._checkClosed
# Match: socket.SocketIO._checkReadable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO._checkReadable == _io._IOBase._checkReadable
# Match: socket.SocketIO._checkSeekable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO._checkSeekable == _io._IOBase._checkSeekable
# Match: socket.SocketIO._checkWritable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO._checkWritable == _io._IOBase._checkWritable
# Match: socket.SocketIO.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.]SocketIO[.]close'}
@: socket.SocketIO.close == _io._IOBase.close
# Match: socket.SocketIO.fileno: {'regex': True, 'spec_arg': False, 'spec_uri': '(socket|SocketServer)[.].+[.]fileno'}
!: socket.SocketIO.fileno == _io._IOBase.fileno
# Match: socket.SocketIO.flush: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.]SocketIO[.]flush'}
@: socket.SocketIO.flush == _io._IOBase.flush
# Match: socket.SocketIO.isatty: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.isatty == _io._IOBase.isatty
# Match: socket.SocketIO.readable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.readable == _io._IOBase.readable
# Match: socket.SocketIO.readline: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.readline == _io._IOBase.readline
# Match: socket.SocketIO.readlines: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.readlines == _io._IOBase.readlines
# Match: socket.SocketIO.seek: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.seek == _io._IOBase.seek
# Match: socket.SocketIO.seekable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.seekable == _io._IOBase.seekable
# Match: socket.SocketIO.tell: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.tell == _io._IOBase.tell
# Match: socket.SocketIO.truncate: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.truncate == _io._IOBase.truncate
# Match: socket.SocketIO.writable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.writable == _io._IOBase.writable
# Match: socket.SocketIO.writelines: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.writelines == _io._IOBase.writelines

# ---- Search base class `io.IOBase` ----

# ---- Search base class `_io._RawIOBase` ----
# Match: socket.SocketIO.read: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.read == _io._RawIOBase.read
# Match: socket.SocketIO.readall: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.readall == _io._RawIOBase.readall
# Match: socket.SocketIO.readinto: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.]SocketIO[.]readinto'}
@: socket.SocketIO.readinto == _io._RawIOBase.readinto
# Match: socket.SocketIO.write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.]SocketIO[.]write'}
@: socket.SocketIO.write == _io._RawIOBase.write

# ---- Search base class `io.RawIOBase` ----

# ---- Search class `socket.SocketIO` ----
# Match: socket.SocketIO.__init__: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.__init__
# Match: socket.SocketIO.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.]SocketIO[.]close'}
@: socket.SocketIO.close
# Match: socket.SocketIO.fileno: {'regex': True, 'spec_arg': False, 'spec_uri': '(socket|SocketServer)[.].+[.]fileno'}
!: socket.SocketIO.fileno
# Match: socket.SocketIO.readable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.readable
# Match: socket.SocketIO.readinto: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.]SocketIO[.]readinto'}
@: socket.SocketIO.readinto
# Match: socket.SocketIO.seekable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.seekable
# Match: socket.SocketIO.writable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket[.]SocketIO[.].+'}
@: socket.SocketIO.writable
# Match: socket.SocketIO.write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.]SocketIO[.]write'}
@: socket.SocketIO.write

# ---- Wrap class `socket.SocketIO`'s attributes ----
@: socket.SocketIO.__init__
@: socket.SocketIO.__setattr__ == builtins.object.__setattr__
@: socket.SocketIO._checkClosed == _io._IOBase._checkClosed
@: socket.SocketIO._checkReadable == _io._IOBase._checkReadable
@: socket.SocketIO._checkSeekable == _io._IOBase._checkSeekable
@: socket.SocketIO._checkWritable == _io._IOBase._checkWritable
@: socket.SocketIO.close
@: socket.SocketIO.flush == _io._IOBase.flush
@: socket.SocketIO.isatty == _io._IOBase.isatty
@: socket.SocketIO.read == _io._RawIOBase.read
@: socket.SocketIO.readable
@: socket.SocketIO.readall == _io._RawIOBase.readall
@: socket.SocketIO.readinto
@: socket.SocketIO.readline == _io._IOBase.readline
@: socket.SocketIO.readlines == _io._IOBase.readlines
@: socket.SocketIO.seek == _io._IOBase.seek
@: socket.SocketIO.seekable
@: socket.SocketIO.tell == _io._IOBase.tell
@: socket.SocketIO.truncate == _io._IOBase.truncate
@: socket.SocketIO.writable
@: socket.SocketIO.write
@: socket.SocketIO.writelines == _io._IOBase.writelines
# ===== Process class `socket.SocketIO` =====


# ----- Process callable `socket.htonl` -----
!: socket.htonl == _socket.htonl

# ----- Process callable `socket.getnameinfo` -----
!: socket.getnameinfo == _socket.getnameinfo

# ----- Process callable `socket.getprotobyname` -----
!: socket.getprotobyname == _socket.getprotobyname

# ----- Process class `socket._realsocket` -----
!: socket._realsocket == _socket._realsocket

# ----- Process callable `socket.gethostbyname_ex` -----
!: socket.gethostbyname_ex == _socket.gethostbyname_ex

# ----- Process callable `socket.getdefaulttimeout` -----
!: socket.getdefaulttimeout == _socket.getdefaulttimeout

# ----- Process callable `socket.gethostbyname` -----
!: socket.gethostbyname == _socket.gethostbyname

# ----- Process callable `socket.gethostname` -----
!: socket.gethostname == _socket.gethostname

# ----- Process class `socket.timeout` -----

# ----- Process callable `socket.gethostbyaddr` -----
!: socket.gethostbyaddr == _socket.gethostbyaddr

# ----- Process callable `socket.getservbyname` -----
!: socket.getservbyname == _socket.getservbyname

# ----- Process class `socket.AddressFamily` -----
# Match: socket.AddressFamily: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.AddressFamily

# ---- Search base class `builtins.object` ----
# Match: socket.AddressFamily.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__delattr__ == builtins.object.__delattr__
# Match: socket.AddressFamily.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__dir__ == builtins.object.__dir__
# Match: socket.AddressFamily.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__eq__ == builtins.object.__eq__
# Match: socket.AddressFamily.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__format__ == builtins.object.__format__
# Match: socket.AddressFamily.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__ge__ == builtins.object.__ge__
# Match: socket.AddressFamily.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__getattribute__ == builtins.object.__getattribute__
# Match: socket.AddressFamily.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__gt__ == builtins.object.__gt__
# Match: socket.AddressFamily.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__hash__ == builtins.object.__hash__
# Match: socket.AddressFamily.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.].+[.]__init__'}
@: socket.AddressFamily.__init__ == builtins.object.__init__
# Match: socket.AddressFamily.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__le__ == builtins.object.__le__
# Match: socket.AddressFamily.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__lt__ == builtins.object.__lt__
# Match: socket.AddressFamily.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__ne__ == builtins.object.__ne__
# Match: socket.AddressFamily.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__new__ == builtins.object.__new__
# Match: socket.AddressFamily.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__reduce__ == builtins.object.__reduce__
# Match: socket.AddressFamily.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socket.AddressFamily.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__repr__ == builtins.object.__repr__
# Match: socket.AddressFamily.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socket.AddressFamily.__setattr__ == builtins.object.__setattr__
# Match: socket.AddressFamily.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__sizeof__ == builtins.object.__sizeof__
# Match: socket.AddressFamily.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__str__ == builtins.object.__str__
# Match: socket.AddressFamily.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `enum.Enum` ----
# Match: socket.AddressFamily.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__dir__ == enum.Enum.__dir__
# Match: socket.AddressFamily.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__format__ == enum.Enum.__format__
# Match: socket.AddressFamily.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__hash__ == enum.Enum.__hash__
# Match: socket.AddressFamily.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__reduce_ex__ == enum.Enum.__reduce_ex__
# Match: socket.AddressFamily.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__repr__ == enum.Enum.__repr__
# Match: socket.AddressFamily.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__str__ == enum.Enum.__str__
# Match: socket.AddressFamily._member_type_: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.AddressFamily._member_type_ == enum.Enum._member_type_

# ---- Search base class `builtins.int` ----
# Match: socket.AddressFamily.__abs__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__abs__ == builtins.int.__abs__
# Match: socket.AddressFamily.__add__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__add__ == builtins.int.__add__
# Match: socket.AddressFamily.__and__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__and__ == builtins.int.__and__
# Match: socket.AddressFamily.__bool__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__bool__ == builtins.int.__bool__
# Match: socket.AddressFamily.__ceil__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__ceil__ == builtins.int.__ceil__
# Match: socket.AddressFamily.__divmod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__divmod__ == builtins.int.__divmod__
# Match: socket.AddressFamily.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__eq__ == builtins.int.__eq__
# Match: socket.AddressFamily.__float__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__float__ == builtins.int.__float__
# Match: socket.AddressFamily.__floor__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__floor__ == builtins.int.__floor__
# Match: socket.AddressFamily.__floordiv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__floordiv__ == builtins.int.__floordiv__
# Match: socket.AddressFamily.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__format__ == builtins.int.__format__
# Match: socket.AddressFamily.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__ge__ == builtins.int.__ge__
# Match: socket.AddressFamily.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__getattribute__ == builtins.int.__getattribute__
# Match: socket.AddressFamily.__getnewargs__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__getnewargs__ == builtins.int.__getnewargs__
# Match: socket.AddressFamily.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__gt__ == builtins.int.__gt__
# Match: socket.AddressFamily.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__hash__ == builtins.int.__hash__
# Match: socket.AddressFamily.__index__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__index__ == builtins.int.__index__
# Match: socket.AddressFamily.__int__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__int__ == builtins.int.__int__
# Match: socket.AddressFamily.__invert__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__invert__ == builtins.int.__invert__
# Match: socket.AddressFamily.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__le__ == builtins.int.__le__
# Match: socket.AddressFamily.__lshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__lshift__ == builtins.int.__lshift__
# Match: socket.AddressFamily.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__lt__ == builtins.int.__lt__
# Match: socket.AddressFamily.__mod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__mod__ == builtins.int.__mod__
# Match: socket.AddressFamily.__mul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__mul__ == builtins.int.__mul__
# Match: socket.AddressFamily.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__ne__ == builtins.int.__ne__
# Match: socket.AddressFamily.__neg__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__neg__ == builtins.int.__neg__
# Match: socket.AddressFamily.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__new__ == builtins.int.__new__
# Match: socket.AddressFamily.__or__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__or__ == builtins.int.__or__
# Match: socket.AddressFamily.__pos__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__pos__ == builtins.int.__pos__
# Match: socket.AddressFamily.__pow__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__pow__ == builtins.int.__pow__
# Match: socket.AddressFamily.__radd__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__radd__ == builtins.int.__radd__
# Match: socket.AddressFamily.__rand__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rand__ == builtins.int.__rand__
# Match: socket.AddressFamily.__rdivmod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rdivmod__ == builtins.int.__rdivmod__
# Match: socket.AddressFamily.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__repr__ == builtins.int.__repr__
# Match: socket.AddressFamily.__rfloordiv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rfloordiv__ == builtins.int.__rfloordiv__
# Match: socket.AddressFamily.__rlshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rlshift__ == builtins.int.__rlshift__
# Match: socket.AddressFamily.__rmod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rmod__ == builtins.int.__rmod__
# Match: socket.AddressFamily.__rmul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rmul__ == builtins.int.__rmul__
# Match: socket.AddressFamily.__ror__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__ror__ == builtins.int.__ror__
# Match: socket.AddressFamily.__round__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__round__ == builtins.int.__round__
# Match: socket.AddressFamily.__rpow__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rpow__ == builtins.int.__rpow__
# Match: socket.AddressFamily.__rrshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rrshift__ == builtins.int.__rrshift__
# Match: socket.AddressFamily.__rshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rshift__ == builtins.int.__rshift__
# Match: socket.AddressFamily.__rsub__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rsub__ == builtins.int.__rsub__
# Match: socket.AddressFamily.__rtruediv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rtruediv__ == builtins.int.__rtruediv__
# Match: socket.AddressFamily.__rxor__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rxor__ == builtins.int.__rxor__
# Match: socket.AddressFamily.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__sizeof__ == builtins.int.__sizeof__
# Match: socket.AddressFamily.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__str__ == builtins.int.__str__
# Match: socket.AddressFamily.__sub__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__sub__ == builtins.int.__sub__
# Match: socket.AddressFamily.__truediv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__truediv__ == builtins.int.__truediv__
# Match: socket.AddressFamily.__trunc__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__trunc__ == builtins.int.__trunc__
# Match: socket.AddressFamily.__xor__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__xor__ == builtins.int.__xor__
# Match: socket.AddressFamily.bit_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.AddressFamily.bit_length == builtins.int.bit_length
# Match: socket.AddressFamily.conjugate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.AddressFamily.conjugate == builtins.int.conjugate
# Match: socket.AddressFamily.from_bytes: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.AddressFamily.from_bytes == builtins.int.from_bytes
# Match: socket.AddressFamily.to_bytes: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.AddressFamily.to_bytes == builtins.int.to_bytes

# ---- Search base class `enum.IntEnum` ----
# Match: socket.AddressFamily.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__format__ == enum.IntEnum.__format__
# Match: socket.AddressFamily.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__new__ == enum.IntEnum.__new__
# Match: socket.AddressFamily.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__repr__ == enum.IntEnum.__repr__
# Match: socket.AddressFamily.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__str__ == enum.IntEnum.__str__
# Match: socket.AddressFamily._member_type_: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.AddressFamily._member_type_ == enum.IntEnum._member_type_

# ---- Search class `socket.AddressFamily` ----
# Match: socket.AddressFamily.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__new__
# Match: socket.AddressFamily.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__reduce_ex__
# Match: socket.AddressFamily._member_type_: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket([.].+)?'}
@: socket.AddressFamily._member_type_ == enum.IntEnum._member_type_

# ---- Wrap class `socket.AddressFamily`'s attributes ----
@: socket.AddressFamily.__init__ == builtins.object.__init__
@: socket.AddressFamily.__setattr__ == builtins.object.__setattr__
@: socket.AddressFamily._member_type_ == enum.IntEnum._member_type_
@: socket.AddressFamily.bit_length == builtins.int.bit_length
@: socket.AddressFamily.conjugate == builtins.int.conjugate
@: socket.AddressFamily.from_bytes == builtins.int.from_bytes
@: socket.AddressFamily.to_bytes == builtins.int.to_bytes
# ===== Process class `socket.AddressFamily` =====

# ===== Process module `socket` =====


# ----- Process module `hashlib` -----
# Match: hashlib: None
!: hashlib

# ----- Process module `vext.registry` -----
# Match: vext.registry: None
!: vext.registry

# ----- Process module `_struct` -----
# Match: _struct: None
!: _struct

# ----- Process module `vext.gatekeeper` -----
# Match: vext.gatekeeper: None
!: vext.gatekeeper

# ----- Process module `traceback` -----
# Match: traceback: None
!: traceback

# ----- Process module `email.charset` -----
# Match: email.charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.charset

# ----- Process callable `email.charset.add_charset` -----
# Match: email.charset.add_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.charset.add_charset

# ----- Process callable `email.charset.add_alias` -----
# Match: email.charset.add_alias: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.charset.add_alias

# ----- Process callable `email.charset._encode` -----
# Match: email.charset._encode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.charset._encode

# ----- Process callable `email.charset.encode_7or8bit` -----
!: email.charset.encode_7or8bit == email.encoders.encode_7or8bit

# ----- Process callable `email.charset.add_codec` -----
# Match: email.charset.add_codec: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.charset.add_codec

# ----- Process class `email.charset.Charset` -----
# Match: email.charset.Charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.charset.Charset

# ---- Search base class `builtins.object` ----
# Match: email.charset.Charset.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__delattr__ == builtins.object.__delattr__
# Match: email.charset.Charset.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__dir__ == builtins.object.__dir__
# Match: email.charset.Charset.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__eq__ == builtins.object.__eq__
# Match: email.charset.Charset.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__format__ == builtins.object.__format__
# Match: email.charset.Charset.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__ge__ == builtins.object.__ge__
# Match: email.charset.Charset.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__getattribute__ == builtins.object.__getattribute__
# Match: email.charset.Charset.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__gt__ == builtins.object.__gt__
# Match: email.charset.Charset.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__hash__ == builtins.object.__hash__
# Match: email.charset.Charset.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.charset.Charset.__init__ == builtins.object.__init__
# Match: email.charset.Charset.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__le__ == builtins.object.__le__
# Match: email.charset.Charset.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__lt__ == builtins.object.__lt__
# Match: email.charset.Charset.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__ne__ == builtins.object.__ne__
# Match: email.charset.Charset.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__new__ == builtins.object.__new__
# Match: email.charset.Charset.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__reduce__ == builtins.object.__reduce__
# Match: email.charset.Charset.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email.charset.Charset.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__repr__ == builtins.object.__repr__
# Match: email.charset.Charset.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.charset.Charset.__setattr__ == builtins.object.__setattr__
# Match: email.charset.Charset.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__sizeof__ == builtins.object.__sizeof__
# Match: email.charset.Charset.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__str__ == builtins.object.__str__
# Match: email.charset.Charset.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `email.charset.Charset` ----
# Match: email.charset.Charset.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__eq__
# Match: email.charset.Charset.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.charset.Charset.__init__
# Match: email.charset.Charset.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__repr__
# Match: email.charset.Charset.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.charset.Charset.__str__
# Match: email.charset.Charset._get_encoder: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.charset.Charset._get_encoder
# Match: email.charset.Charset.body_encode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.charset.Charset.body_encode
# Match: email.charset.Charset.get_body_encoding: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.charset.Charset.get_body_encoding
# Match: email.charset.Charset.get_output_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.charset.Charset.get_output_charset
# Match: email.charset.Charset.header_encode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.charset.Charset.header_encode
# Match: email.charset.Charset.header_encode_lines: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.charset.Charset.header_encode_lines

# ---- Wrap class `email.charset.Charset`'s attributes ----
@: email.charset.Charset.__init__
@: email.charset.Charset.__setattr__ == builtins.object.__setattr__
@: email.charset.Charset._get_encoder
@: email.charset.Charset.body_encode
@: email.charset.Charset.get_body_encoding
@: email.charset.Charset.get_output_charset
@: email.charset.Charset.header_encode
@: email.charset.Charset.header_encode_lines
# ===== Process class `email.charset.Charset` =====


# ----- Process class `email.charset.partial` -----
!: email.charset.partial == functools.partial
# ===== Process module `email.charset` =====


# ----- Process module `pyfiglet.version` -----
# Match: pyfiglet.version: None
!: pyfiglet.version

# ----- Process module `pkg_resources._vendor.six.moves.urllib` -----
# Match: pkg_resources._vendor.six.moves.urllib: None
!: pkg_resources._vendor.six.moves.urllib

# ----- Process module `locale` -----
# Match: locale: None
!: locale

# ----- Process module `re` -----
# Match: re: None
!: re

# ----- Process module `pkg_resources.extern.packaging._structures` -----
# Match: pkg_resources.extern.packaging._structures: None
!: pkg_resources.extern.packaging._structures

# ----- Process module `aoiktracecall.state` -----
# Match: aoiktracecall.state: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.state

# ----- Process module `inspect` -----
# Match: inspect: None
!: inspect

# ----- Process module `ast` -----
# Match: ast: None
!: ast

# ----- Process module `os` -----
# Match: os: None
!: os

# ----- Process module `pkg_resources._vendor` -----
# Match: pkg_resources._vendor: None
!: pkg_resources._vendor

# ----- Process module `select` -----
# Match: select: None
!: select

# ----- Process module `opcode` -----
# Match: opcode: None
!: opcode

# ----- Process module `sre_parse` -----
# Match: sre_parse: None
!: sre_parse

# ----- Process module `distutils.errors` -----
# Match: distutils.errors: None
!: distutils.errors

# ----- Process module `_lzma` -----
# Match: _lzma: None
!: _lzma

# ----- Process module `aoiktracecall.plugin` -----
# Match: aoiktracecall.plugin: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.plugin

# ----- Process module `_imp` -----
# Match: _imp: None
!: _imp

# ----- Process module `_win32sysloader` -----
# Match: _win32sysloader: None
!: _win32sysloader

# ----- Process module `email` -----
# Match: email: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email

# ----- Process callable `email.message_from_file` -----
# Match: email.message_from_file: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message_from_file

# ----- Process callable `email.message_from_binary_file` -----
# Match: email.message_from_binary_file: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message_from_binary_file

# ----- Process callable `email.message_from_bytes` -----
# Match: email.message_from_bytes: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message_from_bytes

# ----- Process callable `email.message_from_string` -----
# Match: email.message_from_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message_from_string
# ===== Process module `email` =====


# ----- Process module `string` -----
# Match: string: None
!: string

# ----- Process module `aoiktracecall.wrap` -----
# Match: aoiktracecall.wrap: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.wrap

# ----- Process module `pkg_resources.extern.packaging.markers` -----
# Match: pkg_resources.extern.packaging.markers: None
!: pkg_resources.extern.packaging.markers

# ----- Process module `xml` -----
# Match: xml: None
!: xml

# ----- Process module `gettext` -----
# Match: gettext: None
!: gettext

# ----- Process module `plistlib` -----
# Match: plistlib: None
!: plistlib

# ----- Process module `_stat` -----
# Match: _stat: None
!: _stat

# ----- Process module `email.message` -----
# Match: email.message: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message

# ----- Process class `email.message.MIMEPart` -----
# Match: email.message.MIMEPart: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart

# ---- Search base class `builtins.object` ----
# Match: email.message.MIMEPart.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__delattr__ == builtins.object.__delattr__
# Match: email.message.MIMEPart.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__dir__ == builtins.object.__dir__
# Match: email.message.MIMEPart.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__eq__ == builtins.object.__eq__
# Match: email.message.MIMEPart.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__format__ == builtins.object.__format__
# Match: email.message.MIMEPart.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__ge__ == builtins.object.__ge__
# Match: email.message.MIMEPart.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__getattribute__ == builtins.object.__getattribute__
# Match: email.message.MIMEPart.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__gt__ == builtins.object.__gt__
# Match: email.message.MIMEPart.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__hash__ == builtins.object.__hash__
# Match: email.message.MIMEPart.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.__init__ == builtins.object.__init__
# Match: email.message.MIMEPart.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__le__ == builtins.object.__le__
# Match: email.message.MIMEPart.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__lt__ == builtins.object.__lt__
# Match: email.message.MIMEPart.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__ne__ == builtins.object.__ne__
# Match: email.message.MIMEPart.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__new__ == builtins.object.__new__
# Match: email.message.MIMEPart.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__reduce__ == builtins.object.__reduce__
# Match: email.message.MIMEPart.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email.message.MIMEPart.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__repr__ == builtins.object.__repr__
# Match: email.message.MIMEPart.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.message.MIMEPart.__setattr__ == builtins.object.__setattr__
# Match: email.message.MIMEPart.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__sizeof__ == builtins.object.__sizeof__
# Match: email.message.MIMEPart.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__str__ == builtins.object.__str__
# Match: email.message.MIMEPart.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `email.message.Message` ----
# Match: email.message.MIMEPart.__bytes__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__bytes__ == email.message.Message.__bytes__
# Match: email.message.MIMEPart.__contains__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__contains__ == email.message.Message.__contains__
# Match: email.message.MIMEPart.__delitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__delitem__ == email.message.Message.__delitem__
# Match: email.message.MIMEPart.__getitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__getitem__ == email.message.Message.__getitem__
# Match: email.message.MIMEPart.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.__init__ == email.message.Message.__init__
# Match: email.message.MIMEPart.__iter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__iter__ == email.message.Message.__iter__
# Match: email.message.MIMEPart.__len__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__len__ == email.message.Message.__len__
# Match: email.message.MIMEPart.__setitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__setitem__ == email.message.Message.__setitem__
# Match: email.message.MIMEPart.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.MIMEPart.__str__ == email.message.Message.__str__
# Match: email.message.MIMEPart._get_params_preserve: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart._get_params_preserve == email.message.Message._get_params_preserve
# Match: email.message.MIMEPart.add_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.add_header == email.message.Message.add_header
# Match: email.message.MIMEPart.as_bytes: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.as_bytes == email.message.Message.as_bytes
# Match: email.message.MIMEPart.as_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.as_string == email.message.Message.as_string
# Match: email.message.MIMEPart.attach: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.attach == email.message.Message.attach
# Match: email.message.MIMEPart.del_param: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.del_param == email.message.Message.del_param
# Match: email.message.MIMEPart.get: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get == email.message.Message.get
# Match: email.message.MIMEPart.get_all: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_all == email.message.Message.get_all
# Match: email.message.MIMEPart.get_boundary: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_boundary == email.message.Message.get_boundary
# Match: email.message.MIMEPart.get_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_charset == email.message.Message.get_charset
# Match: email.message.MIMEPart.get_charsets: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_charsets == email.message.Message.get_charsets
# Match: email.message.MIMEPart.get_content_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_content_charset == email.message.Message.get_content_charset
# Match: email.message.MIMEPart.get_content_disposition: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_content_disposition == email.message.Message.get_content_disposition
# Match: email.message.MIMEPart.get_content_maintype: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_content_maintype == email.message.Message.get_content_maintype
# Match: email.message.MIMEPart.get_content_subtype: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_content_subtype == email.message.Message.get_content_subtype
# Match: email.message.MIMEPart.get_content_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_content_type == email.message.Message.get_content_type
# Match: email.message.MIMEPart.get_default_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_default_type == email.message.Message.get_default_type
# Match: email.message.MIMEPart.get_filename: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_filename == email.message.Message.get_filename
# Match: email.message.MIMEPart.get_param: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_param == email.message.Message.get_param
# Match: email.message.MIMEPart.get_params: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_params == email.message.Message.get_params
# Match: email.message.MIMEPart.get_payload: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_payload == email.message.Message.get_payload
# Match: email.message.MIMEPart.get_unixfrom: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_unixfrom == email.message.Message.get_unixfrom
# Match: email.message.MIMEPart.is_multipart: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.is_multipart == email.message.Message.is_multipart
# Match: email.message.MIMEPart.items: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.items == email.message.Message.items
# Match: email.message.MIMEPart.keys: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.keys == email.message.Message.keys
# Match: email.message.MIMEPart.raw_items: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.raw_items == email.message.Message.raw_items
# Match: email.message.MIMEPart.replace_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.replace_header == email.message.Message.replace_header
# Match: email.message.MIMEPart.set_boundary: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.set_boundary == email.message.Message.set_boundary
# Match: email.message.MIMEPart.set_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.set_charset == email.message.Message.set_charset
# Match: email.message.MIMEPart.set_default_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.set_default_type == email.message.Message.set_default_type
# Match: email.message.MIMEPart.set_param: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.set_param == email.message.Message.set_param
# Match: email.message.MIMEPart.set_payload: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.set_payload == email.message.Message.set_payload
# Match: email.message.MIMEPart.set_raw: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.set_raw == email.message.Message.set_raw
# Match: email.message.MIMEPart.set_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.set_type == email.message.Message.set_type
# Match: email.message.MIMEPart.set_unixfrom: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.set_unixfrom == email.message.Message.set_unixfrom
# Match: email.message.MIMEPart.values: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.values == email.message.Message.values
# Match: email.message.MIMEPart.walk: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.walk == email.iterators.walk

# ---- Search class `email.message.MIMEPart` ----
# Match: email.message.MIMEPart.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.__init__
# Match: email.message.MIMEPart._add_multipart: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart._add_multipart
# Match: email.message.MIMEPart._find_body: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart._find_body
# Match: email.message.MIMEPart._make_multipart: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart._make_multipart
# Match: email.message.MIMEPart.add_alternative: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.add_alternative
# Match: email.message.MIMEPart.add_attachment: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.add_attachment
# Match: email.message.MIMEPart.add_related: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.add_related
# Match: email.message.MIMEPart.clear: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.clear
# Match: email.message.MIMEPart.clear_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.clear_content
# Match: email.message.MIMEPart.get_body: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_body
# Match: email.message.MIMEPart.get_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.get_content
# Match: email.message.MIMEPart.is_attachment: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.is_attachment
# Match: email.message.MIMEPart.iter_attachments: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.iter_attachments
# Match: email.message.MIMEPart.iter_parts: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.iter_parts
# Match: email.message.MIMEPart.make_alternative: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.make_alternative
# Match: email.message.MIMEPart.make_mixed: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.make_mixed
# Match: email.message.MIMEPart.make_related: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.make_related
# Match: email.message.MIMEPart.set_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.MIMEPart.set_content

# ---- Wrap class `email.message.MIMEPart`'s attributes ----
@: email.message.MIMEPart.__init__
@: email.message.MIMEPart.__setattr__ == builtins.object.__setattr__
@: email.message.MIMEPart._add_multipart
@: email.message.MIMEPart._find_body
@: email.message.MIMEPart._get_params_preserve == email.message.Message._get_params_preserve
@: email.message.MIMEPart._make_multipart
@: email.message.MIMEPart.add_alternative
@: email.message.MIMEPart.add_attachment
@: email.message.MIMEPart.add_header == email.message.Message.add_header
@: email.message.MIMEPart.add_related
@: email.message.MIMEPart.as_bytes == email.message.Message.as_bytes
@: email.message.MIMEPart.as_string == email.message.Message.as_string
@: email.message.MIMEPart.attach == email.message.Message.attach
@: email.message.MIMEPart.clear
@: email.message.MIMEPart.clear_content
@: email.message.MIMEPart.del_param == email.message.Message.del_param
@: email.message.MIMEPart.get == email.message.Message.get
@: email.message.MIMEPart.get_all == email.message.Message.get_all
@: email.message.MIMEPart.get_body
@: email.message.MIMEPart.get_boundary == email.message.Message.get_boundary
@: email.message.MIMEPart.get_charset == email.message.Message.get_charset
@: email.message.MIMEPart.get_charsets == email.message.Message.get_charsets
@: email.message.MIMEPart.get_content
@: email.message.MIMEPart.get_content_charset == email.message.Message.get_content_charset
@: email.message.MIMEPart.get_content_disposition == email.message.Message.get_content_disposition
@: email.message.MIMEPart.get_content_maintype == email.message.Message.get_content_maintype
@: email.message.MIMEPart.get_content_subtype == email.message.Message.get_content_subtype
@: email.message.MIMEPart.get_content_type == email.message.Message.get_content_type
@: email.message.MIMEPart.get_default_type == email.message.Message.get_default_type
@: email.message.MIMEPart.get_filename == email.message.Message.get_filename
@: email.message.MIMEPart.get_param == email.message.Message.get_param
@: email.message.MIMEPart.get_params == email.message.Message.get_params
@: email.message.MIMEPart.get_payload == email.message.Message.get_payload
@: email.message.MIMEPart.get_unixfrom == email.message.Message.get_unixfrom
@: email.message.MIMEPart.is_attachment
@: email.message.MIMEPart.is_multipart == email.message.Message.is_multipart
@: email.message.MIMEPart.items == email.message.Message.items
@: email.message.MIMEPart.iter_attachments
@: email.message.MIMEPart.iter_parts
@: email.message.MIMEPart.keys == email.message.Message.keys
@: email.message.MIMEPart.make_alternative
@: email.message.MIMEPart.make_mixed
@: email.message.MIMEPart.make_related
@: email.message.MIMEPart.raw_items == email.message.Message.raw_items
@: email.message.MIMEPart.replace_header == email.message.Message.replace_header
@: email.message.MIMEPart.set_boundary == email.message.Message.set_boundary
@: email.message.MIMEPart.set_charset == email.message.Message.set_charset
@: email.message.MIMEPart.set_content
@: email.message.MIMEPart.set_default_type == email.message.Message.set_default_type
@: email.message.MIMEPart.set_param == email.message.Message.set_param
@: email.message.MIMEPart.set_payload == email.message.Message.set_payload
@: email.message.MIMEPart.set_raw == email.message.Message.set_raw
@: email.message.MIMEPart.set_type == email.message.Message.set_type
@: email.message.MIMEPart.set_unixfrom == email.message.Message.set_unixfrom
@: email.message.MIMEPart.values == email.message.Message.values
@: email.message.MIMEPart.walk == email.iterators.walk
# ===== Process class `email.message.MIMEPart` =====


# ----- Process class `email.message.EmailMessage` -----
# Match: email.message.EmailMessage: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage

# ---- Search base class `builtins.object` ----
# Match: email.message.EmailMessage.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__delattr__ == builtins.object.__delattr__
# Match: email.message.EmailMessage.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__dir__ == builtins.object.__dir__
# Match: email.message.EmailMessage.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__eq__ == builtins.object.__eq__
# Match: email.message.EmailMessage.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__format__ == builtins.object.__format__
# Match: email.message.EmailMessage.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__ge__ == builtins.object.__ge__
# Match: email.message.EmailMessage.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__getattribute__ == builtins.object.__getattribute__
# Match: email.message.EmailMessage.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__gt__ == builtins.object.__gt__
# Match: email.message.EmailMessage.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__hash__ == builtins.object.__hash__
# Match: email.message.EmailMessage.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.__init__ == builtins.object.__init__
# Match: email.message.EmailMessage.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__le__ == builtins.object.__le__
# Match: email.message.EmailMessage.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__lt__ == builtins.object.__lt__
# Match: email.message.EmailMessage.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__ne__ == builtins.object.__ne__
# Match: email.message.EmailMessage.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__new__ == builtins.object.__new__
# Match: email.message.EmailMessage.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__reduce__ == builtins.object.__reduce__
# Match: email.message.EmailMessage.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email.message.EmailMessage.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__repr__ == builtins.object.__repr__
# Match: email.message.EmailMessage.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.message.EmailMessage.__setattr__ == builtins.object.__setattr__
# Match: email.message.EmailMessage.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__sizeof__ == builtins.object.__sizeof__
# Match: email.message.EmailMessage.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__str__ == builtins.object.__str__
# Match: email.message.EmailMessage.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `email.message.Message` ----
# Match: email.message.EmailMessage.__bytes__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__bytes__ == email.message.Message.__bytes__
# Match: email.message.EmailMessage.__contains__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__contains__ == email.message.Message.__contains__
# Match: email.message.EmailMessage.__delitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__delitem__ == email.message.Message.__delitem__
# Match: email.message.EmailMessage.__getitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__getitem__ == email.message.Message.__getitem__
# Match: email.message.EmailMessage.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.__init__ == email.message.Message.__init__
# Match: email.message.EmailMessage.__iter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__iter__ == email.message.Message.__iter__
# Match: email.message.EmailMessage.__len__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__len__ == email.message.Message.__len__
# Match: email.message.EmailMessage.__setitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__setitem__ == email.message.Message.__setitem__
# Match: email.message.EmailMessage.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.EmailMessage.__str__ == email.message.Message.__str__
# Match: email.message.EmailMessage._get_params_preserve: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage._get_params_preserve == email.message.Message._get_params_preserve
# Match: email.message.EmailMessage.add_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.add_header == email.message.Message.add_header
# Match: email.message.EmailMessage.as_bytes: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.as_bytes == email.message.Message.as_bytes
# Match: email.message.EmailMessage.as_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.as_string == email.message.Message.as_string
# Match: email.message.EmailMessage.attach: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.attach == email.message.Message.attach
# Match: email.message.EmailMessage.del_param: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.del_param == email.message.Message.del_param
# Match: email.message.EmailMessage.get: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get == email.message.Message.get
# Match: email.message.EmailMessage.get_all: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_all == email.message.Message.get_all
# Match: email.message.EmailMessage.get_boundary: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_boundary == email.message.Message.get_boundary
# Match: email.message.EmailMessage.get_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_charset == email.message.Message.get_charset
# Match: email.message.EmailMessage.get_charsets: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_charsets == email.message.Message.get_charsets
# Match: email.message.EmailMessage.get_content_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_content_charset == email.message.Message.get_content_charset
# Match: email.message.EmailMessage.get_content_disposition: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_content_disposition == email.message.Message.get_content_disposition
# Match: email.message.EmailMessage.get_content_maintype: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_content_maintype == email.message.Message.get_content_maintype
# Match: email.message.EmailMessage.get_content_subtype: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_content_subtype == email.message.Message.get_content_subtype
# Match: email.message.EmailMessage.get_content_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_content_type == email.message.Message.get_content_type
# Match: email.message.EmailMessage.get_default_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_default_type == email.message.Message.get_default_type
# Match: email.message.EmailMessage.get_filename: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_filename == email.message.Message.get_filename
# Match: email.message.EmailMessage.get_param: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_param == email.message.Message.get_param
# Match: email.message.EmailMessage.get_params: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_params == email.message.Message.get_params
# Match: email.message.EmailMessage.get_payload: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_payload == email.message.Message.get_payload
# Match: email.message.EmailMessage.get_unixfrom: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_unixfrom == email.message.Message.get_unixfrom
# Match: email.message.EmailMessage.is_multipart: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.is_multipart == email.message.Message.is_multipart
# Match: email.message.EmailMessage.items: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.items == email.message.Message.items
# Match: email.message.EmailMessage.keys: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.keys == email.message.Message.keys
# Match: email.message.EmailMessage.raw_items: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.raw_items == email.message.Message.raw_items
# Match: email.message.EmailMessage.replace_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.replace_header == email.message.Message.replace_header
# Match: email.message.EmailMessage.set_boundary: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_boundary == email.message.Message.set_boundary
# Match: email.message.EmailMessage.set_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_charset == email.message.Message.set_charset
# Match: email.message.EmailMessage.set_default_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_default_type == email.message.Message.set_default_type
# Match: email.message.EmailMessage.set_param: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_param == email.message.Message.set_param
# Match: email.message.EmailMessage.set_payload: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_payload == email.message.Message.set_payload
# Match: email.message.EmailMessage.set_raw: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_raw == email.message.Message.set_raw
# Match: email.message.EmailMessage.set_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_type == email.message.Message.set_type
# Match: email.message.EmailMessage.set_unixfrom: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_unixfrom == email.message.Message.set_unixfrom
# Match: email.message.EmailMessage.values: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.values == email.message.Message.values
# Match: email.message.EmailMessage.walk: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.walk == email.iterators.walk

# ---- Search base class `email.message.MIMEPart` ----
# Match: email.message.EmailMessage.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.__init__ == email.message.MIMEPart.__init__
# Match: email.message.EmailMessage.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.message.EmailMessage.__setattr__ == builtins.object.__setattr__
# Match: email.message.EmailMessage._add_multipart: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage._add_multipart == email.message.MIMEPart._add_multipart
# Match: email.message.EmailMessage._find_body: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage._find_body == email.message.MIMEPart._find_body
# Match: email.message.EmailMessage._get_params_preserve: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage._get_params_preserve == email.message.Message._get_params_preserve
# Match: email.message.EmailMessage._make_multipart: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage._make_multipart == email.message.MIMEPart._make_multipart
# Match: email.message.EmailMessage.add_alternative: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.add_alternative == email.message.MIMEPart.add_alternative
# Match: email.message.EmailMessage.add_attachment: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.add_attachment == email.message.MIMEPart.add_attachment
# Match: email.message.EmailMessage.add_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.add_header == email.message.Message.add_header
# Match: email.message.EmailMessage.add_related: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.add_related == email.message.MIMEPart.add_related
# Match: email.message.EmailMessage.as_bytes: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.as_bytes == email.message.Message.as_bytes
# Match: email.message.EmailMessage.as_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.as_string == email.message.Message.as_string
# Match: email.message.EmailMessage.attach: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.attach == email.message.Message.attach
# Match: email.message.EmailMessage.clear: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.clear == email.message.MIMEPart.clear
# Match: email.message.EmailMessage.clear_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.clear_content == email.message.MIMEPart.clear_content
# Match: email.message.EmailMessage.del_param: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.del_param == email.message.Message.del_param
# Match: email.message.EmailMessage.get: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get == email.message.Message.get
# Match: email.message.EmailMessage.get_all: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_all == email.message.Message.get_all
# Match: email.message.EmailMessage.get_body: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_body == email.message.MIMEPart.get_body
# Match: email.message.EmailMessage.get_boundary: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_boundary == email.message.Message.get_boundary
# Match: email.message.EmailMessage.get_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_charset == email.message.Message.get_charset
# Match: email.message.EmailMessage.get_charsets: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_charsets == email.message.Message.get_charsets
# Match: email.message.EmailMessage.get_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_content == email.message.MIMEPart.get_content
# Match: email.message.EmailMessage.get_content_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_content_charset == email.message.Message.get_content_charset
# Match: email.message.EmailMessage.get_content_disposition: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_content_disposition == email.message.Message.get_content_disposition
# Match: email.message.EmailMessage.get_content_maintype: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_content_maintype == email.message.Message.get_content_maintype
# Match: email.message.EmailMessage.get_content_subtype: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_content_subtype == email.message.Message.get_content_subtype
# Match: email.message.EmailMessage.get_content_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_content_type == email.message.Message.get_content_type
# Match: email.message.EmailMessage.get_default_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_default_type == email.message.Message.get_default_type
# Match: email.message.EmailMessage.get_filename: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_filename == email.message.Message.get_filename
# Match: email.message.EmailMessage.get_param: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_param == email.message.Message.get_param
# Match: email.message.EmailMessage.get_params: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_params == email.message.Message.get_params
# Match: email.message.EmailMessage.get_payload: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_payload == email.message.Message.get_payload
# Match: email.message.EmailMessage.get_unixfrom: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.get_unixfrom == email.message.Message.get_unixfrom
# Match: email.message.EmailMessage.is_attachment: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.is_attachment == email.message.MIMEPart.is_attachment
# Match: email.message.EmailMessage.is_multipart: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.is_multipart == email.message.Message.is_multipart
# Match: email.message.EmailMessage.items: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.items == email.message.Message.items
# Match: email.message.EmailMessage.iter_attachments: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.iter_attachments == email.message.MIMEPart.iter_attachments
# Match: email.message.EmailMessage.iter_parts: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.iter_parts == email.message.MIMEPart.iter_parts
# Match: email.message.EmailMessage.keys: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.keys == email.message.Message.keys
# Match: email.message.EmailMessage.make_alternative: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.make_alternative == email.message.MIMEPart.make_alternative
# Match: email.message.EmailMessage.make_mixed: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.make_mixed == email.message.MIMEPart.make_mixed
# Match: email.message.EmailMessage.make_related: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.make_related == email.message.MIMEPart.make_related
# Match: email.message.EmailMessage.raw_items: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.raw_items == email.message.Message.raw_items
# Match: email.message.EmailMessage.replace_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.replace_header == email.message.Message.replace_header
# Match: email.message.EmailMessage.set_boundary: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_boundary == email.message.Message.set_boundary
# Match: email.message.EmailMessage.set_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_charset == email.message.Message.set_charset
# Match: email.message.EmailMessage.set_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_content == email.message.MIMEPart.set_content
# Match: email.message.EmailMessage.set_default_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_default_type == email.message.Message.set_default_type
# Match: email.message.EmailMessage.set_param: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_param == email.message.Message.set_param
# Match: email.message.EmailMessage.set_payload: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_payload == email.message.Message.set_payload
# Match: email.message.EmailMessage.set_raw: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_raw == email.message.Message.set_raw
# Match: email.message.EmailMessage.set_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_type == email.message.Message.set_type
# Match: email.message.EmailMessage.set_unixfrom: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_unixfrom == email.message.Message.set_unixfrom
# Match: email.message.EmailMessage.values: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.values == email.message.Message.values
# Match: email.message.EmailMessage.walk: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.walk == email.iterators.walk

# ---- Search class `email.message.EmailMessage` ----
# Match: email.message.EmailMessage.set_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.EmailMessage.set_content

# ---- Wrap class `email.message.EmailMessage`'s attributes ----
@: email.message.EmailMessage.__init__ == email.message.MIMEPart.__init__
@: email.message.EmailMessage.__setattr__ == builtins.object.__setattr__
@: email.message.EmailMessage._add_multipart == email.message.MIMEPart._add_multipart
@: email.message.EmailMessage._find_body == email.message.MIMEPart._find_body
@: email.message.EmailMessage._get_params_preserve == email.message.Message._get_params_preserve
@: email.message.EmailMessage._make_multipart == email.message.MIMEPart._make_multipart
@: email.message.EmailMessage.add_alternative == email.message.MIMEPart.add_alternative
@: email.message.EmailMessage.add_attachment == email.message.MIMEPart.add_attachment
@: email.message.EmailMessage.add_header == email.message.Message.add_header
@: email.message.EmailMessage.add_related == email.message.MIMEPart.add_related
@: email.message.EmailMessage.as_bytes == email.message.Message.as_bytes
@: email.message.EmailMessage.as_string == email.message.Message.as_string
@: email.message.EmailMessage.attach == email.message.Message.attach
@: email.message.EmailMessage.clear == email.message.MIMEPart.clear
@: email.message.EmailMessage.clear_content == email.message.MIMEPart.clear_content
@: email.message.EmailMessage.del_param == email.message.Message.del_param
@: email.message.EmailMessage.get == email.message.Message.get
@: email.message.EmailMessage.get_all == email.message.Message.get_all
@: email.message.EmailMessage.get_body == email.message.MIMEPart.get_body
@: email.message.EmailMessage.get_boundary == email.message.Message.get_boundary
@: email.message.EmailMessage.get_charset == email.message.Message.get_charset
@: email.message.EmailMessage.get_charsets == email.message.Message.get_charsets
@: email.message.EmailMessage.get_content == email.message.MIMEPart.get_content
@: email.message.EmailMessage.get_content_charset == email.message.Message.get_content_charset
@: email.message.EmailMessage.get_content_disposition == email.message.Message.get_content_disposition
@: email.message.EmailMessage.get_content_maintype == email.message.Message.get_content_maintype
@: email.message.EmailMessage.get_content_subtype == email.message.Message.get_content_subtype
@: email.message.EmailMessage.get_content_type == email.message.Message.get_content_type
@: email.message.EmailMessage.get_default_type == email.message.Message.get_default_type
@: email.message.EmailMessage.get_filename == email.message.Message.get_filename
@: email.message.EmailMessage.get_param == email.message.Message.get_param
@: email.message.EmailMessage.get_params == email.message.Message.get_params
@: email.message.EmailMessage.get_payload == email.message.Message.get_payload
@: email.message.EmailMessage.get_unixfrom == email.message.Message.get_unixfrom
@: email.message.EmailMessage.is_attachment == email.message.MIMEPart.is_attachment
@: email.message.EmailMessage.is_multipart == email.message.Message.is_multipart
@: email.message.EmailMessage.items == email.message.Message.items
@: email.message.EmailMessage.iter_attachments == email.message.MIMEPart.iter_attachments
@: email.message.EmailMessage.iter_parts == email.message.MIMEPart.iter_parts
@: email.message.EmailMessage.keys == email.message.Message.keys
@: email.message.EmailMessage.make_alternative == email.message.MIMEPart.make_alternative
@: email.message.EmailMessage.make_mixed == email.message.MIMEPart.make_mixed
@: email.message.EmailMessage.make_related == email.message.MIMEPart.make_related
@: email.message.EmailMessage.raw_items == email.message.Message.raw_items
@: email.message.EmailMessage.replace_header == email.message.Message.replace_header
@: email.message.EmailMessage.set_boundary == email.message.Message.set_boundary
@: email.message.EmailMessage.set_charset == email.message.Message.set_charset
@: email.message.EmailMessage.set_content
@: email.message.EmailMessage.set_default_type == email.message.Message.set_default_type
@: email.message.EmailMessage.set_param == email.message.Message.set_param
@: email.message.EmailMessage.set_payload == email.message.Message.set_payload
@: email.message.EmailMessage.set_raw == email.message.Message.set_raw
@: email.message.EmailMessage.set_type == email.message.Message.set_type
@: email.message.EmailMessage.set_unixfrom == email.message.Message.set_unixfrom
@: email.message.EmailMessage.values == email.message.Message.values
@: email.message.EmailMessage.walk == email.iterators.walk
# ===== Process class `email.message.EmailMessage` =====


# ----- Process class `email.message.BytesIO` -----
!: email.message.BytesIO == _io.BytesIO

# ----- Process callable `email.message.decode_b` -----
!: email.message.decode_b == email._encoded_words.decode_b

# ----- Process class `email.message.StringIO` -----
!: email.message.StringIO == _io.StringIO

# ----- Process callable `email.message._formatparam` -----
# Match: email.message._formatparam: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message._formatparam

# ----- Process callable `email.message._parseparam` -----
# Match: email.message._parseparam: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message._parseparam

# ----- Process class `email.message.Charset` -----
!: email.message.Charset == email.charset.Charset

# ----- Process class `email.message.Message` -----
# Match: email.message.Message: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message

# ---- Search base class `builtins.object` ----
# Match: email.message.Message.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__delattr__ == builtins.object.__delattr__
# Match: email.message.Message.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__dir__ == builtins.object.__dir__
# Match: email.message.Message.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__eq__ == builtins.object.__eq__
# Match: email.message.Message.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__format__ == builtins.object.__format__
# Match: email.message.Message.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__ge__ == builtins.object.__ge__
# Match: email.message.Message.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__getattribute__ == builtins.object.__getattribute__
# Match: email.message.Message.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__gt__ == builtins.object.__gt__
# Match: email.message.Message.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__hash__ == builtins.object.__hash__
# Match: email.message.Message.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.__init__ == builtins.object.__init__
# Match: email.message.Message.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__le__ == builtins.object.__le__
# Match: email.message.Message.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__lt__ == builtins.object.__lt__
# Match: email.message.Message.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__ne__ == builtins.object.__ne__
# Match: email.message.Message.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__new__ == builtins.object.__new__
# Match: email.message.Message.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__reduce__ == builtins.object.__reduce__
# Match: email.message.Message.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email.message.Message.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__repr__ == builtins.object.__repr__
# Match: email.message.Message.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.message.Message.__setattr__ == builtins.object.__setattr__
# Match: email.message.Message.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__sizeof__ == builtins.object.__sizeof__
# Match: email.message.Message.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__str__ == builtins.object.__str__
# Match: email.message.Message.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `email.message.Message` ----
# Match: email.message.Message.__bytes__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__bytes__
# Match: email.message.Message.__contains__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__contains__
# Match: email.message.Message.__delitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__delitem__
# Match: email.message.Message.__getitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__getitem__
# Match: email.message.Message.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.__init__
# Match: email.message.Message.__iter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__iter__
# Match: email.message.Message.__len__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__len__
# Match: email.message.Message.__setitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__setitem__
# Match: email.message.Message.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.message.Message.__str__
# Match: email.message.Message._get_params_preserve: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message._get_params_preserve
# Match: email.message.Message.add_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.add_header
# Match: email.message.Message.as_bytes: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.as_bytes
# Match: email.message.Message.as_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.as_string
# Match: email.message.Message.attach: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.attach
# Match: email.message.Message.del_param: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.del_param
# Match: email.message.Message.get: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.get
# Match: email.message.Message.get_all: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.get_all
# Match: email.message.Message.get_boundary: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.get_boundary
# Match: email.message.Message.get_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.get_charset
# Match: email.message.Message.get_charsets: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.get_charsets
# Match: email.message.Message.get_content_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.get_content_charset
# Match: email.message.Message.get_content_disposition: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.get_content_disposition
# Match: email.message.Message.get_content_maintype: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.get_content_maintype
# Match: email.message.Message.get_content_subtype: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.get_content_subtype
# Match: email.message.Message.get_content_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.get_content_type
# Match: email.message.Message.get_default_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.get_default_type
# Match: email.message.Message.get_filename: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.get_filename
# Match: email.message.Message.get_param: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.get_param
# Match: email.message.Message.get_params: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.get_params
# Match: email.message.Message.get_payload: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.get_payload
# Match: email.message.Message.get_unixfrom: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.get_unixfrom
# Match: email.message.Message.is_multipart: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.is_multipart
# Match: email.message.Message.items: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.items
# Match: email.message.Message.keys: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.keys
# Match: email.message.Message.raw_items: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.raw_items
# Match: email.message.Message.replace_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.replace_header
# Match: email.message.Message.set_boundary: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.set_boundary
# Match: email.message.Message.set_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.set_charset
# Match: email.message.Message.set_default_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.set_default_type
# Match: email.message.Message.set_param: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.set_param
# Match: email.message.Message.set_payload: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.set_payload
# Match: email.message.Message.set_raw: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.set_raw
# Match: email.message.Message.set_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.set_type
# Match: email.message.Message.set_unixfrom: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.set_unixfrom
# Match: email.message.Message.values: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.values
# Match: email.message.Message.walk: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message.Message.walk == email.iterators.walk

# ---- Wrap class `email.message.Message`'s attributes ----
@: email.message.Message.__init__
@: email.message.Message.__setattr__ == builtins.object.__setattr__
@: email.message.Message._get_params_preserve
@: email.message.Message.add_header
@: email.message.Message.as_bytes
@: email.message.Message.as_string
@: email.message.Message.attach
@: email.message.Message.del_param
@: email.message.Message.get
@: email.message.Message.get_all
@: email.message.Message.get_boundary
@: email.message.Message.get_charset
@: email.message.Message.get_charsets
@: email.message.Message.get_content_charset
@: email.message.Message.get_content_disposition
@: email.message.Message.get_content_maintype
@: email.message.Message.get_content_subtype
@: email.message.Message.get_content_type
@: email.message.Message.get_default_type
@: email.message.Message.get_filename
@: email.message.Message.get_param
@: email.message.Message.get_params
@: email.message.Message.get_payload
@: email.message.Message.get_unixfrom
@: email.message.Message.is_multipart
@: email.message.Message.items
@: email.message.Message.keys
@: email.message.Message.raw_items
@: email.message.Message.replace_header
@: email.message.Message.set_boundary
@: email.message.Message.set_charset
@: email.message.Message.set_default_type
@: email.message.Message.set_param
@: email.message.Message.set_payload
@: email.message.Message.set_raw
@: email.message.Message.set_type
@: email.message.Message.set_unixfrom
@: email.message.Message.values
@: email.message.Message.walk == email.iterators.walk
# ===== Process class `email.message.Message` =====


# ----- Process callable `email.message._splitparam` -----
# Match: email.message._splitparam: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message._splitparam

# ----- Process callable `email.message._unquotevalue` -----
# Match: email.message._unquotevalue: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.message._unquotevalue
# ===== Process module `email.message` =====


# ----- Process module `pkg_resources._vendor.packaging.__about__` -----
# Match: pkg_resources._vendor.packaging.__about__: None
!: pkg_resources._vendor.packaging.__about__

# ----- Process module `math` -----
# Match: math: None
!: math

# ----- Process module `pkg_resources.extern.packaging.requirements` -----
# Match: pkg_resources.extern.packaging.requirements: None
!: pkg_resources.extern.packaging.requirements

# ----- Process module `keyword` -----
# Match: keyword: None
!: keyword

# ----- Process module `_functools` -----
# Match: _functools: None
!: _functools

# ----- Process module `marshal` -----
# Match: marshal: None
!: marshal

# ----- Process module `signal` -----
# Match: signal: None
!: signal

# ----- Process module `vext.helpers.sip` -----
# Match: vext.helpers.sip: None
!: vext.helpers.sip

# ----- Process module `uu` -----
# Match: uu: None
!: uu

# ----- Process module `encodings.utf_8` -----
# Match: encodings.utf_8: None
!: encodings.utf_8

# ----- Process module `pyexpat.errors` -----
# Match: pyexpat.errors: None
!: pyexpat.errors

# ----- Process module `email._policybase` -----
# Match: email._policybase: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase

# ----- Process callable `email._policybase._append_doc` -----
# Match: email._policybase._append_doc: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase._append_doc

# ----- Process class `email._policybase.Compat32` -----
# Match: email._policybase.Compat32: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32

# ---- Search base class `builtins.object` ----
# Match: email._policybase.Compat32.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__delattr__ == builtins.object.__delattr__
# Match: email._policybase.Compat32.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__dir__ == builtins.object.__dir__
# Match: email._policybase.Compat32.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__eq__ == builtins.object.__eq__
# Match: email._policybase.Compat32.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__format__ == builtins.object.__format__
# Match: email._policybase.Compat32.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__ge__ == builtins.object.__ge__
# Match: email._policybase.Compat32.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__getattribute__ == builtins.object.__getattribute__
# Match: email._policybase.Compat32.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__gt__ == builtins.object.__gt__
# Match: email._policybase.Compat32.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__hash__ == builtins.object.__hash__
# Match: email._policybase.Compat32.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32.__init__ == builtins.object.__init__
# Match: email._policybase.Compat32.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__le__ == builtins.object.__le__
# Match: email._policybase.Compat32.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__lt__ == builtins.object.__lt__
# Match: email._policybase.Compat32.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__ne__ == builtins.object.__ne__
# Match: email._policybase.Compat32.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__new__ == builtins.object.__new__
# Match: email._policybase.Compat32.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__reduce__ == builtins.object.__reduce__
# Match: email._policybase.Compat32.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email._policybase.Compat32.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__repr__ == builtins.object.__repr__
# Match: email._policybase.Compat32.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email._policybase.Compat32.__setattr__ == builtins.object.__setattr__
# Match: email._policybase.Compat32.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__sizeof__ == builtins.object.__sizeof__
# Match: email._policybase.Compat32.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__str__ == builtins.object.__str__
# Match: email._policybase.Compat32.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `email._policybase._PolicyBase` ----
# Match: email._policybase.Compat32.__add__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__add__ == email._policybase._PolicyBase.__add__
# Match: email._policybase.Compat32.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32.__init__ == email._policybase._PolicyBase.__init__
# Match: email._policybase.Compat32.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Compat32.__repr__ == email._policybase._PolicyBase.__repr__
# Match: email._policybase.Compat32.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email._policybase.Compat32.__setattr__ == email._policybase._PolicyBase.__setattr__
# Match: email._policybase.Compat32.clone: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32.clone == email._policybase._PolicyBase.clone

# ---- Search base class `email._policybase.Policy` ----
# Match: email._policybase.Compat32.fold: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32.fold == email._policybase.Policy.fold
# Match: email._policybase.Compat32.fold_binary: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32.fold_binary == email._policybase.Policy.fold_binary
# Match: email._policybase.Compat32.handle_defect: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32.handle_defect == email._policybase.Policy.handle_defect
# Match: email._policybase.Compat32.header_fetch_parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32.header_fetch_parse == email._policybase.Policy.header_fetch_parse
# Match: email._policybase.Compat32.header_max_count: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32.header_max_count == email._policybase.Policy.header_max_count
# Match: email._policybase.Compat32.header_source_parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32.header_source_parse == email._policybase.Policy.header_source_parse
# Match: email._policybase.Compat32.header_store_parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32.header_store_parse == email._policybase.Policy.header_store_parse
# Match: email._policybase.Compat32.register_defect: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32.register_defect == email._policybase.Policy.register_defect

# ---- Search class `email._policybase.Compat32` ----
# Match: email._policybase.Compat32._fold: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32._fold
# Match: email._policybase.Compat32._sanitize_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32._sanitize_header
# Match: email._policybase.Compat32.fold: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32.fold
# Match: email._policybase.Compat32.fold_binary: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32.fold_binary
# Match: email._policybase.Compat32.header_fetch_parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32.header_fetch_parse
# Match: email._policybase.Compat32.header_source_parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32.header_source_parse
# Match: email._policybase.Compat32.header_store_parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Compat32.header_store_parse

# ---- Wrap class `email._policybase.Compat32`'s attributes ----
@: email._policybase.Compat32.__init__ == email._policybase._PolicyBase.__init__
@: email._policybase.Compat32.__setattr__ == email._policybase._PolicyBase.__setattr__
@: email._policybase.Compat32._fold
@: email._policybase.Compat32._sanitize_header
@: email._policybase.Compat32.clone == email._policybase._PolicyBase.clone
@: email._policybase.Compat32.fold
@: email._policybase.Compat32.fold_binary
@: email._policybase.Compat32.handle_defect == email._policybase.Policy.handle_defect
@: email._policybase.Compat32.header_fetch_parse
@: email._policybase.Compat32.header_max_count == email._policybase.Policy.header_max_count
@: email._policybase.Compat32.header_source_parse
@: email._policybase.Compat32.header_store_parse
@: email._policybase.Compat32.register_defect == email._policybase.Policy.register_defect
# ===== Process class `email._policybase.Compat32` =====


# ----- Process callable `email._policybase._has_surrogates` -----
!: email._policybase._has_surrogates == email.utils._has_surrogates

# ----- Process callable `email._policybase._extend_docstrings` -----
# Match: email._policybase._extend_docstrings: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase._extend_docstrings

# ----- Process class `email._policybase._PolicyBase` -----
# Match: email._policybase._PolicyBase: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase._PolicyBase

# ---- Search base class `builtins.object` ----
# Match: email._policybase._PolicyBase.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__delattr__ == builtins.object.__delattr__
# Match: email._policybase._PolicyBase.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__dir__ == builtins.object.__dir__
# Match: email._policybase._PolicyBase.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__eq__ == builtins.object.__eq__
# Match: email._policybase._PolicyBase.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__format__ == builtins.object.__format__
# Match: email._policybase._PolicyBase.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__ge__ == builtins.object.__ge__
# Match: email._policybase._PolicyBase.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__getattribute__ == builtins.object.__getattribute__
# Match: email._policybase._PolicyBase.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__gt__ == builtins.object.__gt__
# Match: email._policybase._PolicyBase.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__hash__ == builtins.object.__hash__
# Match: email._policybase._PolicyBase.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase._PolicyBase.__init__ == builtins.object.__init__
# Match: email._policybase._PolicyBase.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__le__ == builtins.object.__le__
# Match: email._policybase._PolicyBase.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__lt__ == builtins.object.__lt__
# Match: email._policybase._PolicyBase.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__ne__ == builtins.object.__ne__
# Match: email._policybase._PolicyBase.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__new__ == builtins.object.__new__
# Match: email._policybase._PolicyBase.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__reduce__ == builtins.object.__reduce__
# Match: email._policybase._PolicyBase.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email._policybase._PolicyBase.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__repr__ == builtins.object.__repr__
# Match: email._policybase._PolicyBase.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email._policybase._PolicyBase.__setattr__ == builtins.object.__setattr__
# Match: email._policybase._PolicyBase.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__sizeof__ == builtins.object.__sizeof__
# Match: email._policybase._PolicyBase.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__str__ == builtins.object.__str__
# Match: email._policybase._PolicyBase.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `email._policybase._PolicyBase` ----
# Match: email._policybase._PolicyBase.__add__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__add__
# Match: email._policybase._PolicyBase.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase._PolicyBase.__init__
# Match: email._policybase._PolicyBase.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase._PolicyBase.__repr__
# Match: email._policybase._PolicyBase.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email._policybase._PolicyBase.__setattr__
# Match: email._policybase._PolicyBase.clone: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase._PolicyBase.clone

# ---- Wrap class `email._policybase._PolicyBase`'s attributes ----
@: email._policybase._PolicyBase.__init__
@: email._policybase._PolicyBase.__setattr__
@: email._policybase._PolicyBase.clone
# ===== Process class `email._policybase._PolicyBase` =====


# ----- Process class `email._policybase.Policy` -----
# Match: email._policybase.Policy: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Policy

# ---- Search base class `builtins.object` ----
# Match: email._policybase.Policy.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__delattr__ == builtins.object.__delattr__
# Match: email._policybase.Policy.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__dir__ == builtins.object.__dir__
# Match: email._policybase.Policy.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__eq__ == builtins.object.__eq__
# Match: email._policybase.Policy.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__format__ == builtins.object.__format__
# Match: email._policybase.Policy.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__ge__ == builtins.object.__ge__
# Match: email._policybase.Policy.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__getattribute__ == builtins.object.__getattribute__
# Match: email._policybase.Policy.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__gt__ == builtins.object.__gt__
# Match: email._policybase.Policy.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__hash__ == builtins.object.__hash__
# Match: email._policybase.Policy.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Policy.__init__ == builtins.object.__init__
# Match: email._policybase.Policy.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__le__ == builtins.object.__le__
# Match: email._policybase.Policy.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__lt__ == builtins.object.__lt__
# Match: email._policybase.Policy.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__ne__ == builtins.object.__ne__
# Match: email._policybase.Policy.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__new__ == builtins.object.__new__
# Match: email._policybase.Policy.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__reduce__ == builtins.object.__reduce__
# Match: email._policybase.Policy.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email._policybase.Policy.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__repr__ == builtins.object.__repr__
# Match: email._policybase.Policy.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email._policybase.Policy.__setattr__ == builtins.object.__setattr__
# Match: email._policybase.Policy.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__sizeof__ == builtins.object.__sizeof__
# Match: email._policybase.Policy.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__str__ == builtins.object.__str__
# Match: email._policybase.Policy.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `email._policybase._PolicyBase` ----
# Match: email._policybase.Policy.__add__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__add__ == email._policybase._PolicyBase.__add__
# Match: email._policybase.Policy.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Policy.__init__ == email._policybase._PolicyBase.__init__
# Match: email._policybase.Policy.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._policybase.Policy.__repr__ == email._policybase._PolicyBase.__repr__
# Match: email._policybase.Policy.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email._policybase.Policy.__setattr__ == email._policybase._PolicyBase.__setattr__
# Match: email._policybase.Policy.clone: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Policy.clone == email._policybase._PolicyBase.clone

# ---- Search class `email._policybase.Policy` ----
# Match: email._policybase.Policy.fold: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Policy.fold
# Match: email._policybase.Policy.fold_binary: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Policy.fold_binary
# Match: email._policybase.Policy.handle_defect: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Policy.handle_defect
# Match: email._policybase.Policy.header_fetch_parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Policy.header_fetch_parse
# Match: email._policybase.Policy.header_max_count: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Policy.header_max_count
# Match: email._policybase.Policy.header_source_parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Policy.header_source_parse
# Match: email._policybase.Policy.header_store_parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Policy.header_store_parse
# Match: email._policybase.Policy.register_defect: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._policybase.Policy.register_defect

# ---- Wrap class `email._policybase.Policy`'s attributes ----
@: email._policybase.Policy.__init__ == email._policybase._PolicyBase.__init__
@: email._policybase.Policy.__setattr__ == email._policybase._PolicyBase.__setattr__
@: email._policybase.Policy.clone == email._policybase._PolicyBase.clone
@: email._policybase.Policy.fold
@: email._policybase.Policy.fold_binary
@: email._policybase.Policy.handle_defect
@: email._policybase.Policy.header_fetch_parse
@: email._policybase.Policy.header_max_count
@: email._policybase.Policy.header_source_parse
@: email._policybase.Policy.header_store_parse
@: email._policybase.Policy.register_defect
# ===== Process class `email._policybase.Policy` =====

# ===== Process module `email._policybase` =====


# ----- Process module `genericpath` -----
# Match: genericpath: None
!: genericpath

# ----- Process module `_weakrefset` -----
# Match: _weakrefset: None
!: _weakrefset

# ----- Process module `pkgutil` -----
# Match: pkgutil: None
!: pkgutil

# ----- Process module `_signal` -----
# Match: _signal: None
!: _signal

# ----- Process module `zope` -----
# Match: zope: None
!: zope

# ----- Process module `encodings.gbk` -----
# Match: encodings.gbk: None
!: encodings.gbk

# ----- Process module `time` -----
# Match: time: None
!: time

# ----- Process module `calendar` -----
# Match: calendar: None
!: calendar

# ----- Process module `_bootlocale` -----
# Match: _bootlocale: None
!: _bootlocale

# ----- Process module `platform` -----
# Match: platform: None
!: platform

# ----- Process module `_multibytecodec` -----
# Match: _multibytecodec: None
!: _multibytecodec

# ----- Process module `importlib.util` -----
# Match: importlib.util: None
!: importlib.util

# ----- Process module `email._encoded_words` -----
# Match: email._encoded_words: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words

# ----- Process callable `email._encoded_words.decode` -----
# Match: email._encoded_words.decode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words.decode

# ----- Process callable `email._encoded_words.encode` -----
# Match: email._encoded_words.encode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words.encode

# ----- Process callable `email._encoded_words.encode_b` -----
# Match: email._encoded_words.encode_b: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words.encode_b

# ----- Process class `email._encoded_words._QByteMap` -----
# Match: email._encoded_words._QByteMap: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words._QByteMap

# ---- Search base class `builtins.object` ----
# Match: email._encoded_words._QByteMap.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__delattr__ == builtins.object.__delattr__
# Match: email._encoded_words._QByteMap.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__dir__ == builtins.object.__dir__
# Match: email._encoded_words._QByteMap.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__eq__ == builtins.object.__eq__
# Match: email._encoded_words._QByteMap.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__format__ == builtins.object.__format__
# Match: email._encoded_words._QByteMap.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__ge__ == builtins.object.__ge__
# Match: email._encoded_words._QByteMap.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__getattribute__ == builtins.object.__getattribute__
# Match: email._encoded_words._QByteMap.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__gt__ == builtins.object.__gt__
# Match: email._encoded_words._QByteMap.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__hash__ == builtins.object.__hash__
# Match: email._encoded_words._QByteMap.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words._QByteMap.__init__ == builtins.object.__init__
# Match: email._encoded_words._QByteMap.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__le__ == builtins.object.__le__
# Match: email._encoded_words._QByteMap.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__lt__ == builtins.object.__lt__
# Match: email._encoded_words._QByteMap.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__ne__ == builtins.object.__ne__
# Match: email._encoded_words._QByteMap.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__new__ == builtins.object.__new__
# Match: email._encoded_words._QByteMap.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__reduce__ == builtins.object.__reduce__
# Match: email._encoded_words._QByteMap.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email._encoded_words._QByteMap.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__repr__ == builtins.object.__repr__
# Match: email._encoded_words._QByteMap.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email._encoded_words._QByteMap.__setattr__ == builtins.object.__setattr__
# Match: email._encoded_words._QByteMap.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__sizeof__ == builtins.object.__sizeof__
# Match: email._encoded_words._QByteMap.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__str__ == builtins.object.__str__
# Match: email._encoded_words._QByteMap.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `builtins.dict` ----
# Match: email._encoded_words._QByteMap.__contains__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__contains__ == builtins.dict.__contains__
# Match: email._encoded_words._QByteMap.__delitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__delitem__ == builtins.dict.__delitem__
# Match: email._encoded_words._QByteMap.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__eq__ == builtins.dict.__eq__
# Match: email._encoded_words._QByteMap.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__ge__ == builtins.dict.__ge__
# Match: email._encoded_words._QByteMap.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__getattribute__ == builtins.dict.__getattribute__
# Match: email._encoded_words._QByteMap.__getitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__getitem__ == builtins.dict.__getitem__
# Match: email._encoded_words._QByteMap.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__gt__ == builtins.dict.__gt__
# Match: email._encoded_words._QByteMap.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words._QByteMap.__init__ == builtins.dict.__init__
# Match: email._encoded_words._QByteMap.__iter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__iter__ == builtins.dict.__iter__
# Match: email._encoded_words._QByteMap.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__le__ == builtins.dict.__le__
# Match: email._encoded_words._QByteMap.__len__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__len__ == builtins.dict.__len__
# Match: email._encoded_words._QByteMap.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__lt__ == builtins.dict.__lt__
# Match: email._encoded_words._QByteMap.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__ne__ == builtins.dict.__ne__
# Match: email._encoded_words._QByteMap.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__new__ == builtins.dict.__new__
# Match: email._encoded_words._QByteMap.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__repr__ == builtins.dict.__repr__
# Match: email._encoded_words._QByteMap.__setitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__setitem__ == builtins.dict.__setitem__
# Match: email._encoded_words._QByteMap.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__sizeof__ == builtins.dict.__sizeof__
# Match: email._encoded_words._QByteMap.clear: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words._QByteMap.clear == builtins.dict.clear
# Match: email._encoded_words._QByteMap.copy: {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]copy'}
!: email._encoded_words._QByteMap.copy == builtins.dict.copy
# Match: email._encoded_words._QByteMap.fromkeys: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words._QByteMap.fromkeys == builtins.dict.fromkeys
# Match: email._encoded_words._QByteMap.get: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words._QByteMap.get == builtins.dict.get
# Match: email._encoded_words._QByteMap.items: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words._QByteMap.items == builtins.dict.items
# Match: email._encoded_words._QByteMap.keys: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words._QByteMap.keys == builtins.dict.keys
# Match: email._encoded_words._QByteMap.pop: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words._QByteMap.pop == builtins.dict.pop
# Match: email._encoded_words._QByteMap.popitem: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words._QByteMap.popitem == builtins.dict.popitem
# Match: email._encoded_words._QByteMap.setdefault: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words._QByteMap.setdefault == builtins.dict.setdefault
# Match: email._encoded_words._QByteMap.update: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words._QByteMap.update == builtins.dict.update
# Match: email._encoded_words._QByteMap.values: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words._QByteMap.values == builtins.dict.values

# ---- Search class `email._encoded_words._QByteMap` ----
# Match: email._encoded_words._QByteMap.__missing__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._encoded_words._QByteMap.__missing__

# ---- Wrap class `email._encoded_words._QByteMap`'s attributes ----
@: email._encoded_words._QByteMap.__init__ == builtins.dict.__init__
@: email._encoded_words._QByteMap.__setattr__ == builtins.object.__setattr__
@: email._encoded_words._QByteMap.clear == builtins.dict.clear
@: email._encoded_words._QByteMap.fromkeys == builtins.dict.fromkeys
@: email._encoded_words._QByteMap.get == builtins.dict.get
@: email._encoded_words._QByteMap.items == builtins.dict.items
@: email._encoded_words._QByteMap.keys == builtins.dict.keys
@: email._encoded_words._QByteMap.pop == builtins.dict.pop
@: email._encoded_words._QByteMap.popitem == builtins.dict.popitem
@: email._encoded_words._QByteMap.setdefault == builtins.dict.setdefault
@: email._encoded_words._QByteMap.update == builtins.dict.update
@: email._encoded_words._QByteMap.values == builtins.dict.values
# ===== Process class `email._encoded_words._QByteMap` =====


# ----- Process callable `email._encoded_words.decode_b` -----
# Match: email._encoded_words.decode_b: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words.decode_b

# ----- Process callable `email._encoded_words.len_b` -----
# Match: email._encoded_words.len_b: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words.len_b

# ----- Process callable `email._encoded_words.len_q` -----
# Match: email._encoded_words.len_q: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words.len_q

# ----- Process callable `email._encoded_words._q_byte_subber` -----
# Match: email._encoded_words._q_byte_subber: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words._q_byte_subber

# ----- Process callable `email._encoded_words.encode_q` -----
# Match: email._encoded_words.encode_q: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words.encode_q

# ----- Process callable `email._encoded_words.decode_q` -----
# Match: email._encoded_words.decode_q: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._encoded_words.decode_q
# ===== Process module `email._encoded_words` =====


# ----- Process module `posixpath` -----
# Match: posixpath: None
!: posixpath

# ----- Process module `_string` -----
# Match: _string: None
!: _string

# ----- Process module `lzma` -----
# Match: lzma: None
!: lzma

# ----- Process module `aoiktracecall.plugin.exception_plugin` -----
# Match: aoiktracecall.plugin.exception_plugin: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.plugin.exception_plugin

# ----- Process module `email.encoders` -----
# Match: email.encoders: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.encoders

# ----- Process callable `email.encoders._qencode` -----
# Match: email.encoders._qencode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.encoders._qencode

# ----- Process callable `email.encoders._bencode` -----
!: email.encoders._bencode == base64._bencode

# ----- Process callable `email.encoders.encode_7or8bit` -----
# Match: email.encoders.encode_7or8bit: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.encoders.encode_7or8bit

# ----- Process callable `email.encoders.encode_quopri` -----
# Match: email.encoders.encode_quopri: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.encoders.encode_quopri

# ----- Process callable `email.encoders.encode_noop` -----
# Match: email.encoders.encode_noop: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.encoders.encode_noop

# ----- Process callable `email.encoders.encode_base64` -----
# Match: email.encoders.encode_base64: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.encoders.encode_base64

# ----- Process callable `email.encoders._encodestring` -----
!: email.encoders._encodestring == quopri._encodestring
# ===== Process module `email.encoders` =====


# ----- Process module `sre_constants` -----
# Match: sre_constants: None
!: sre_constants

# ----- Process module `ntpath` -----
# Match: ntpath: None
!: ntpath

# ----- Process module `threading` -----
# Match: threading: None
!: threading

# ----- Process module `pprint` -----
# Match: pprint: None
!: pprint

# ----- Process module `_hashlib` -----
# Match: _hashlib: None
!: _hashlib

# ----- Process module `imp` -----
# Match: imp: None
!: imp

# ----- Process module `pyfiglet.fonts` -----
# Match: pyfiglet.fonts: None
!: pyfiglet.fonts

# ----- Process module `_codecs_cn` -----
# Match: _codecs_cn: None
!: _codecs_cn

# ----- Process module `msvcrt` -----
# Match: msvcrt: None
!: msvcrt

# ----- Process module `collections` -----
# Match: collections: None
!: collections

# ----- Process module `token` -----
# Match: token: None
!: token

# ----- Process module `aoiktracecall.importer` -----
# Match: aoiktracecall.importer: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.importer

# ----- Process module `importlib._bootstrap_external` -----
# Match: importlib._bootstrap_external: None
!: importlib._bootstrap_external

# ----- Process module `_codecs` -----
# Match: _codecs: None
!: _codecs

# ----- Process module `selectors` -----
# Match: selectors: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors

# ----- Process class `selectors._SelectorMapping` -----
# Match: selectors._SelectorMapping: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._SelectorMapping

# ---- Search base class `builtins.object` ----
# Match: selectors._SelectorMapping.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__delattr__ == builtins.object.__delattr__
# Match: selectors._SelectorMapping.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__dir__ == builtins.object.__dir__
# Match: selectors._SelectorMapping.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__eq__ == builtins.object.__eq__
# Match: selectors._SelectorMapping.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__format__ == builtins.object.__format__
# Match: selectors._SelectorMapping.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__ge__ == builtins.object.__ge__
# Match: selectors._SelectorMapping.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__getattribute__ == builtins.object.__getattribute__
# Match: selectors._SelectorMapping.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__gt__ == builtins.object.__gt__
# Match: selectors._SelectorMapping.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__hash__ == builtins.object.__hash__
# Match: selectors._SelectorMapping.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__init__ == builtins.object.__init__
# Match: selectors._SelectorMapping.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__le__ == builtins.object.__le__
# Match: selectors._SelectorMapping.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__lt__ == builtins.object.__lt__
# Match: selectors._SelectorMapping.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__ne__ == builtins.object.__ne__
# Match: selectors._SelectorMapping.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__new__ == builtins.object.__new__
# Match: selectors._SelectorMapping.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__reduce__ == builtins.object.__reduce__
# Match: selectors._SelectorMapping.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: selectors._SelectorMapping.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__repr__ == builtins.object.__repr__
# Match: selectors._SelectorMapping.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: selectors._SelectorMapping.__setattr__ == builtins.object.__setattr__
# Match: selectors._SelectorMapping.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__sizeof__ == builtins.object.__sizeof__
# Match: selectors._SelectorMapping.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__str__ == builtins.object.__str__
# Match: selectors._SelectorMapping.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `collections.abc.Container` ----
# Match: selectors._SelectorMapping.__contains__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__contains__ == collections.abc.Container.__contains__

# ---- Search base class `collections.abc.Iterable` ----
# Match: selectors._SelectorMapping.__iter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__iter__ == collections.abc.Iterable.__iter__

# ---- Search base class `collections.abc.Sized` ----
# Match: selectors._SelectorMapping.__len__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__len__ == collections.abc.Sized.__len__

# ---- Search base class `collections.abc.Mapping` ----
# Match: selectors._SelectorMapping.__contains__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__contains__ == collections.abc.Mapping.__contains__
# Match: selectors._SelectorMapping.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__eq__ == collections.abc.Mapping.__eq__
# Match: selectors._SelectorMapping.__getitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__getitem__ == collections.abc.Mapping.__getitem__
# Match: selectors._SelectorMapping.get: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._SelectorMapping.get == collections.abc.Mapping.get
# Match: selectors._SelectorMapping.items: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._SelectorMapping.items == collections.abc.Mapping.items
# Match: selectors._SelectorMapping.keys: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._SelectorMapping.keys == collections.abc.Mapping.keys
# Match: selectors._SelectorMapping.values: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._SelectorMapping.values == collections.abc.Mapping.values

# ---- Search class `selectors._SelectorMapping` ----
# Match: selectors._SelectorMapping.__getitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__getitem__
# Match: selectors._SelectorMapping.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__init__
# Match: selectors._SelectorMapping.__iter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__iter__
# Match: selectors._SelectorMapping.__len__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__len__

# ---- Wrap class `selectors._SelectorMapping`'s attributes ----
@: selectors._SelectorMapping.__setattr__ == builtins.object.__setattr__
@: selectors._SelectorMapping.get == collections.abc.Mapping.get
@: selectors._SelectorMapping.items == collections.abc.Mapping.items
@: selectors._SelectorMapping.keys == collections.abc.Mapping.keys
@: selectors._SelectorMapping.values == collections.abc.Mapping.values
# ===== Process class `selectors._SelectorMapping` =====


# ----- Process class `selectors.SelectSelector` -----
# Match: selectors.SelectSelector: {'regex': False, 'spec_arg': False, 'spec_uri': 'selectors.SelectSelector'}
!: selectors.SelectSelector

# ----- Process callable `selectors._fileobj_to_fd` -----
# Match: selectors._fileobj_to_fd: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._fileobj_to_fd

# ----- Process class `selectors.SelectorKey` -----
# Match: selectors.SelectorKey: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.SelectorKey

# ---- Search base class `builtins.object` ----
# Match: selectors.SelectorKey.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__delattr__ == builtins.object.__delattr__
# Match: selectors.SelectorKey.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__dir__ == builtins.object.__dir__
# Match: selectors.SelectorKey.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__eq__ == builtins.object.__eq__
# Match: selectors.SelectorKey.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__format__ == builtins.object.__format__
# Match: selectors.SelectorKey.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__ge__ == builtins.object.__ge__
# Match: selectors.SelectorKey.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__getattribute__ == builtins.object.__getattribute__
# Match: selectors.SelectorKey.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__gt__ == builtins.object.__gt__
# Match: selectors.SelectorKey.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__hash__ == builtins.object.__hash__
# Match: selectors.SelectorKey.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__init__ == builtins.object.__init__
# Match: selectors.SelectorKey.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__le__ == builtins.object.__le__
# Match: selectors.SelectorKey.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__lt__ == builtins.object.__lt__
# Match: selectors.SelectorKey.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__ne__ == builtins.object.__ne__
# Match: selectors.SelectorKey.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__new__ == builtins.object.__new__
# Match: selectors.SelectorKey.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__reduce__ == builtins.object.__reduce__
# Match: selectors.SelectorKey.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: selectors.SelectorKey.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__repr__ == builtins.object.__repr__
# Match: selectors.SelectorKey.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: selectors.SelectorKey.__setattr__ == builtins.object.__setattr__
# Match: selectors.SelectorKey.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__sizeof__ == builtins.object.__sizeof__
# Match: selectors.SelectorKey.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__str__ == builtins.object.__str__
# Match: selectors.SelectorKey.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `builtins.tuple` ----
# Match: selectors.SelectorKey.__add__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__add__ == builtins.tuple.__add__
# Match: selectors.SelectorKey.__contains__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__contains__ == builtins.tuple.__contains__
# Match: selectors.SelectorKey.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__eq__ == builtins.tuple.__eq__
# Match: selectors.SelectorKey.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__ge__ == builtins.tuple.__ge__
# Match: selectors.SelectorKey.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__getattribute__ == builtins.tuple.__getattribute__
# Match: selectors.SelectorKey.__getitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__getitem__ == builtins.tuple.__getitem__
# Match: selectors.SelectorKey.__getnewargs__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__getnewargs__ == builtins.tuple.__getnewargs__
# Match: selectors.SelectorKey.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__gt__ == builtins.tuple.__gt__
# Match: selectors.SelectorKey.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__hash__ == builtins.tuple.__hash__
# Match: selectors.SelectorKey.__iter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__iter__ == builtins.tuple.__iter__
# Match: selectors.SelectorKey.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__le__ == builtins.tuple.__le__
# Match: selectors.SelectorKey.__len__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__len__ == builtins.tuple.__len__
# Match: selectors.SelectorKey.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__lt__ == builtins.tuple.__lt__
# Match: selectors.SelectorKey.__mul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__mul__ == builtins.tuple.__mul__
# Match: selectors.SelectorKey.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__ne__ == builtins.tuple.__ne__
# Match: selectors.SelectorKey.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__new__ == builtins.tuple.__new__
# Match: selectors.SelectorKey.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__repr__ == builtins.tuple.__repr__
# Match: selectors.SelectorKey.__rmul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__rmul__ == builtins.tuple.__rmul__
# Match: selectors.SelectorKey.count: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.SelectorKey.count == builtins.tuple.count
# Match: selectors.SelectorKey.index: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.SelectorKey.index == builtins.tuple.index

# ---- Search class `selectors.SelectorKey` ----
# Match: selectors.SelectorKey.__getnewargs__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__getnewargs__
# Match: selectors.SelectorKey.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__repr__
# Match: selectors.SelectorKey._asdict: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.SelectorKey._asdict
# Match: selectors.SelectorKey._replace: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.SelectorKey._replace

# ---- Wrap class `selectors.SelectorKey`'s attributes ----
@: selectors.SelectorKey.__setattr__ == builtins.object.__setattr__
@: selectors.SelectorKey._asdict
@: selectors.SelectorKey._replace
@: selectors.SelectorKey.count == builtins.tuple.count
@: selectors.SelectorKey.index == builtins.tuple.index
# ===== Process class `selectors.SelectorKey` =====


# ----- Process callable `selectors.namedtuple` -----
!: selectors.namedtuple == collections.namedtuple

# ----- Process class `selectors.DefaultSelector` -----
# Match: selectors.DefaultSelector: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector

# ---- Search base class `builtins.object` ----
# Match: selectors.DefaultSelector.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__delattr__ == builtins.object.__delattr__
# Match: selectors.DefaultSelector.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__dir__ == builtins.object.__dir__
# Match: selectors.DefaultSelector.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__eq__ == builtins.object.__eq__
# Match: selectors.DefaultSelector.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__format__ == builtins.object.__format__
# Match: selectors.DefaultSelector.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__ge__ == builtins.object.__ge__
# Match: selectors.DefaultSelector.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__getattribute__ == builtins.object.__getattribute__
# Match: selectors.DefaultSelector.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__gt__ == builtins.object.__gt__
# Match: selectors.DefaultSelector.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__hash__ == builtins.object.__hash__
# Match: selectors.DefaultSelector.__init__: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'selectors.DefaultSelector.__init__'}
@: selectors.DefaultSelector.__init__ == builtins.object.__init__
# Match: selectors.DefaultSelector.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__le__ == builtins.object.__le__
# Match: selectors.DefaultSelector.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__lt__ == builtins.object.__lt__
# Match: selectors.DefaultSelector.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__ne__ == builtins.object.__ne__
# Match: selectors.DefaultSelector.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__new__ == builtins.object.__new__
# Match: selectors.DefaultSelector.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__reduce__ == builtins.object.__reduce__
# Match: selectors.DefaultSelector.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: selectors.DefaultSelector.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__repr__ == builtins.object.__repr__
# Match: selectors.DefaultSelector.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: selectors.DefaultSelector.__setattr__ == builtins.object.__setattr__
# Match: selectors.DefaultSelector.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__sizeof__ == builtins.object.__sizeof__
# Match: selectors.DefaultSelector.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__str__ == builtins.object.__str__
# Match: selectors.DefaultSelector.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `selectors.BaseSelector` ----
# Match: selectors.DefaultSelector.__enter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__enter__ == selectors.BaseSelector.__enter__
# Match: selectors.DefaultSelector.__exit__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__exit__ == selectors.BaseSelector.__exit__
# Match: selectors.DefaultSelector.close: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.close == selectors.BaseSelector.close
# Match: selectors.DefaultSelector.get_key: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.get_key == selectors.BaseSelector.get_key
# Match: selectors.DefaultSelector.get_map: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.get_map == selectors.BaseSelector.get_map
# Match: selectors.DefaultSelector.modify: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.modify == selectors.BaseSelector.modify
# Match: selectors.DefaultSelector.register: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'selectors.DefaultSelector.register'}
@: selectors.DefaultSelector.register == selectors.BaseSelector.register
# Match: selectors.DefaultSelector.select: {'regex': False, 'spec_arg': 'hide_tree', 'spec_uri': 'selectors.DefaultSelector.select'}
@: selectors.DefaultSelector.select == selectors.BaseSelector.select
# Match: selectors.DefaultSelector.unregister: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.unregister == selectors.BaseSelector.unregister

# ---- Search base class `selectors._BaseSelectorImpl` ----
# Match: selectors.DefaultSelector.__init__: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'selectors.DefaultSelector.__init__'}
@: selectors.DefaultSelector.__init__ == selectors._BaseSelectorImpl.__init__
# Match: selectors.DefaultSelector._fileobj_lookup: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector._fileobj_lookup == selectors._BaseSelectorImpl._fileobj_lookup
# Match: selectors.DefaultSelector._key_from_fd: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector._key_from_fd == selectors._BaseSelectorImpl._key_from_fd
# Match: selectors.DefaultSelector.close: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.close == selectors._BaseSelectorImpl.close
# Match: selectors.DefaultSelector.get_map: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.get_map == selectors._BaseSelectorImpl.get_map
# Match: selectors.DefaultSelector.modify: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.modify == selectors._BaseSelectorImpl.modify
# Match: selectors.DefaultSelector.register: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'selectors.DefaultSelector.register'}
@: selectors.DefaultSelector.register == selectors._BaseSelectorImpl.register
# Match: selectors.DefaultSelector.unregister: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.unregister == selectors._BaseSelectorImpl.unregister

# ---- Search class `selectors.DefaultSelector` ----
# Match: selectors.DefaultSelector.__init__: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'selectors.DefaultSelector.__init__'}
@: selectors.DefaultSelector.__init__ == selectors.SelectSelector.__init__
# Match: selectors.DefaultSelector._select: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector._select == selectors.SelectSelector._select
# Match: selectors.DefaultSelector.register: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'selectors.DefaultSelector.register'}
@: selectors.DefaultSelector.register == selectors.SelectSelector.register
# Match: selectors.DefaultSelector.select: {'regex': False, 'spec_arg': 'hide_tree', 'spec_uri': 'selectors.DefaultSelector.select'}
@: selectors.DefaultSelector.select == selectors.SelectSelector.select
# Match: selectors.DefaultSelector.unregister: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.unregister == selectors.SelectSelector.unregister

# ---- Wrap class `selectors.DefaultSelector`'s attributes ----
@: selectors.DefaultSelector.__init__ == selectors.SelectSelector.__init__
@: selectors.DefaultSelector.__setattr__ == builtins.object.__setattr__
@: selectors.DefaultSelector._fileobj_lookup == selectors._BaseSelectorImpl._fileobj_lookup
@: selectors.DefaultSelector._key_from_fd == selectors._BaseSelectorImpl._key_from_fd
@: selectors.DefaultSelector._select == selectors.SelectSelector._select
@: selectors.DefaultSelector.close == selectors._BaseSelectorImpl.close
@: selectors.DefaultSelector.get_key == selectors.BaseSelector.get_key
@: selectors.DefaultSelector.get_map == selectors._BaseSelectorImpl.get_map
@: selectors.DefaultSelector.modify == selectors._BaseSelectorImpl.modify
@: selectors.DefaultSelector.register == selectors.SelectSelector.register
@: selectors.DefaultSelector.select == selectors.SelectSelector.select
@: selectors.DefaultSelector.unregister == selectors.SelectSelector.unregister
# ===== Process class `selectors.DefaultSelector` =====


# ----- Process callable `selectors.abstractmethod` -----
!: selectors.abstractmethod == abc.abstractmethod

# ----- Process class `selectors.ABCMeta` -----
!: selectors.ABCMeta == abc.ABCMeta

# ----- Process class `selectors.Mapping` -----
!: selectors.Mapping == collections.abc.Mapping

# ----- Process class `selectors.BaseSelector` -----
# Match: selectors.BaseSelector: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.BaseSelector

# ---- Search base class `builtins.object` ----
# Match: selectors.BaseSelector.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__delattr__ == builtins.object.__delattr__
# Match: selectors.BaseSelector.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__dir__ == builtins.object.__dir__
# Match: selectors.BaseSelector.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__eq__ == builtins.object.__eq__
# Match: selectors.BaseSelector.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__format__ == builtins.object.__format__
# Match: selectors.BaseSelector.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__ge__ == builtins.object.__ge__
# Match: selectors.BaseSelector.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__getattribute__ == builtins.object.__getattribute__
# Match: selectors.BaseSelector.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__gt__ == builtins.object.__gt__
# Match: selectors.BaseSelector.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__hash__ == builtins.object.__hash__
# Match: selectors.BaseSelector.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__init__ == builtins.object.__init__
# Match: selectors.BaseSelector.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__le__ == builtins.object.__le__
# Match: selectors.BaseSelector.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__lt__ == builtins.object.__lt__
# Match: selectors.BaseSelector.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__ne__ == builtins.object.__ne__
# Match: selectors.BaseSelector.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__new__ == builtins.object.__new__
# Match: selectors.BaseSelector.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__reduce__ == builtins.object.__reduce__
# Match: selectors.BaseSelector.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: selectors.BaseSelector.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__repr__ == builtins.object.__repr__
# Match: selectors.BaseSelector.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: selectors.BaseSelector.__setattr__ == builtins.object.__setattr__
# Match: selectors.BaseSelector.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__sizeof__ == builtins.object.__sizeof__
# Match: selectors.BaseSelector.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__str__ == builtins.object.__str__
# Match: selectors.BaseSelector.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `selectors.BaseSelector` ----
# Match: selectors.BaseSelector.__enter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__enter__
# Match: selectors.BaseSelector.__exit__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__exit__
# Match: selectors.BaseSelector.close: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.BaseSelector.close
# Match: selectors.BaseSelector.get_key: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.BaseSelector.get_key
# Match: selectors.BaseSelector.get_map: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.BaseSelector.get_map
# Match: selectors.BaseSelector.modify: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.BaseSelector.modify
# Match: selectors.BaseSelector.register: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.BaseSelector.register
# Match: selectors.BaseSelector.select: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.BaseSelector.select
# Match: selectors.BaseSelector.unregister: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.BaseSelector.unregister

# ---- Wrap class `selectors.BaseSelector`'s attributes ----
@: selectors.BaseSelector.__setattr__ == builtins.object.__setattr__
@: selectors.BaseSelector.close
@: selectors.BaseSelector.get_key
@: selectors.BaseSelector.get_map
@: selectors.BaseSelector.modify
@: selectors.BaseSelector.register
@: selectors.BaseSelector.select
@: selectors.BaseSelector.unregister
# ===== Process class `selectors.BaseSelector` =====


# ----- Process class `selectors._BaseSelectorImpl` -----
# Match: selectors._BaseSelectorImpl: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl

# ---- Search base class `builtins.object` ----
# Match: selectors._BaseSelectorImpl.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__delattr__ == builtins.object.__delattr__
# Match: selectors._BaseSelectorImpl.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__dir__ == builtins.object.__dir__
# Match: selectors._BaseSelectorImpl.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__eq__ == builtins.object.__eq__
# Match: selectors._BaseSelectorImpl.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__format__ == builtins.object.__format__
# Match: selectors._BaseSelectorImpl.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__ge__ == builtins.object.__ge__
# Match: selectors._BaseSelectorImpl.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__getattribute__ == builtins.object.__getattribute__
# Match: selectors._BaseSelectorImpl.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__gt__ == builtins.object.__gt__
# Match: selectors._BaseSelectorImpl.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__hash__ == builtins.object.__hash__
# Match: selectors._BaseSelectorImpl.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__init__ == builtins.object.__init__
# Match: selectors._BaseSelectorImpl.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__le__ == builtins.object.__le__
# Match: selectors._BaseSelectorImpl.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__lt__ == builtins.object.__lt__
# Match: selectors._BaseSelectorImpl.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__ne__ == builtins.object.__ne__
# Match: selectors._BaseSelectorImpl.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__new__ == builtins.object.__new__
# Match: selectors._BaseSelectorImpl.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__reduce__ == builtins.object.__reduce__
# Match: selectors._BaseSelectorImpl.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: selectors._BaseSelectorImpl.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__repr__ == builtins.object.__repr__
# Match: selectors._BaseSelectorImpl.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: selectors._BaseSelectorImpl.__setattr__ == builtins.object.__setattr__
# Match: selectors._BaseSelectorImpl.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__sizeof__ == builtins.object.__sizeof__
# Match: selectors._BaseSelectorImpl.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__str__ == builtins.object.__str__
# Match: selectors._BaseSelectorImpl.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `selectors.BaseSelector` ----
# Match: selectors._BaseSelectorImpl.__enter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__enter__ == selectors.BaseSelector.__enter__
# Match: selectors._BaseSelectorImpl.__exit__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__exit__ == selectors.BaseSelector.__exit__
# Match: selectors._BaseSelectorImpl.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: selectors._BaseSelectorImpl.__setattr__ == builtins.object.__setattr__
# Match: selectors._BaseSelectorImpl.close: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.close == selectors.BaseSelector.close
# Match: selectors._BaseSelectorImpl.get_key: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.get_key == selectors.BaseSelector.get_key
# Match: selectors._BaseSelectorImpl.get_map: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.get_map == selectors.BaseSelector.get_map
# Match: selectors._BaseSelectorImpl.modify: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.modify == selectors.BaseSelector.modify
# Match: selectors._BaseSelectorImpl.register: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.register == selectors.BaseSelector.register
# Match: selectors._BaseSelectorImpl.select: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.select == selectors.BaseSelector.select
# Match: selectors._BaseSelectorImpl.unregister: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.unregister == selectors.BaseSelector.unregister

# ---- Search class `selectors._BaseSelectorImpl` ----
# Match: selectors._BaseSelectorImpl.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__init__
# Match: selectors._BaseSelectorImpl._fileobj_lookup: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl._fileobj_lookup
# Match: selectors._BaseSelectorImpl._key_from_fd: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl._key_from_fd
# Match: selectors._BaseSelectorImpl.close: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.close
# Match: selectors._BaseSelectorImpl.get_map: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.get_map
# Match: selectors._BaseSelectorImpl.modify: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.modify
# Match: selectors._BaseSelectorImpl.register: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.register
# Match: selectors._BaseSelectorImpl.unregister: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.unregister

# ---- Wrap class `selectors._BaseSelectorImpl`'s attributes ----
@: selectors._BaseSelectorImpl.__setattr__ == builtins.object.__setattr__
@: selectors._BaseSelectorImpl._fileobj_lookup
@: selectors._BaseSelectorImpl._key_from_fd
@: selectors._BaseSelectorImpl.close
@: selectors._BaseSelectorImpl.get_key == selectors.BaseSelector.get_key
@: selectors._BaseSelectorImpl.get_map
@: selectors._BaseSelectorImpl.modify
@: selectors._BaseSelectorImpl.register
@: selectors._BaseSelectorImpl.select == selectors.BaseSelector.select
@: selectors._BaseSelectorImpl.unregister
# ===== Process class `selectors._BaseSelectorImpl` =====

# ===== Process module `selectors` =====


# ----- Process module `weakref` -----
# Match: weakref: None
!: weakref

# ----- Process module `random` -----
# Match: random: None
!: random

# ----- Process module `subprocess` -----
# Match: subprocess: None
!: subprocess

# ----- Process module `collections.abc` -----
# Match: collections.abc: None
!: collections.abc

# ----- Process module `pkg_resources._vendor.six` -----
# Match: pkg_resources._vendor.six: None
!: pkg_resources._vendor.six

# ----- Process module `importlib._bootstrap_external` -----
# Match: importlib._bootstrap_external: None
!: importlib._bootstrap_external

# ----- Process module `_collections` -----
# Match: _collections: None
!: _collections

# ----- Process module `_datetime` -----
# Match: _datetime: None
!: _datetime

# ----- Process module `encodings.latin_1` -----
# Match: encodings.latin_1: None
!: encodings.latin_1

# ----- Process module `email.feedparser` -----
# Match: email.feedparser: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser

# ----- Process class `email.feedparser.BytesFeedParser` -----
# Match: email.feedparser.BytesFeedParser: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BytesFeedParser

# ---- Search base class `builtins.object` ----
# Match: email.feedparser.BytesFeedParser.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__delattr__ == builtins.object.__delattr__
# Match: email.feedparser.BytesFeedParser.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__dir__ == builtins.object.__dir__
# Match: email.feedparser.BytesFeedParser.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__eq__ == builtins.object.__eq__
# Match: email.feedparser.BytesFeedParser.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__format__ == builtins.object.__format__
# Match: email.feedparser.BytesFeedParser.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__ge__ == builtins.object.__ge__
# Match: email.feedparser.BytesFeedParser.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__getattribute__ == builtins.object.__getattribute__
# Match: email.feedparser.BytesFeedParser.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__gt__ == builtins.object.__gt__
# Match: email.feedparser.BytesFeedParser.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__hash__ == builtins.object.__hash__
# Match: email.feedparser.BytesFeedParser.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BytesFeedParser.__init__ == builtins.object.__init__
# Match: email.feedparser.BytesFeedParser.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__le__ == builtins.object.__le__
# Match: email.feedparser.BytesFeedParser.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__lt__ == builtins.object.__lt__
# Match: email.feedparser.BytesFeedParser.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__ne__ == builtins.object.__ne__
# Match: email.feedparser.BytesFeedParser.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__new__ == builtins.object.__new__
# Match: email.feedparser.BytesFeedParser.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__reduce__ == builtins.object.__reduce__
# Match: email.feedparser.BytesFeedParser.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email.feedparser.BytesFeedParser.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__repr__ == builtins.object.__repr__
# Match: email.feedparser.BytesFeedParser.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.feedparser.BytesFeedParser.__setattr__ == builtins.object.__setattr__
# Match: email.feedparser.BytesFeedParser.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__sizeof__ == builtins.object.__sizeof__
# Match: email.feedparser.BytesFeedParser.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__str__ == builtins.object.__str__
# Match: email.feedparser.BytesFeedParser.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BytesFeedParser.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `email.feedparser.FeedParser` ----
# Match: email.feedparser.BytesFeedParser.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BytesFeedParser.__init__ == email.feedparser.FeedParser.__init__
# Match: email.feedparser.BytesFeedParser._call_parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BytesFeedParser._call_parse == email.feedparser.FeedParser._call_parse
# Match: email.feedparser.BytesFeedParser._new_message: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BytesFeedParser._new_message == email.feedparser.FeedParser._new_message
# Match: email.feedparser.BytesFeedParser._parse_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BytesFeedParser._parse_headers == email.feedparser.FeedParser._parse_headers
# Match: email.feedparser.BytesFeedParser._parsegen: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BytesFeedParser._parsegen == email.feedparser.FeedParser._parsegen
# Match: email.feedparser.BytesFeedParser._pop_message: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BytesFeedParser._pop_message == email.feedparser.FeedParser._pop_message
# Match: email.feedparser.BytesFeedParser._set_headersonly: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BytesFeedParser._set_headersonly == email.feedparser.FeedParser._set_headersonly
# Match: email.feedparser.BytesFeedParser.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BytesFeedParser.close == email.feedparser.FeedParser.close
# Match: email.feedparser.BytesFeedParser.feed: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BytesFeedParser.feed == email.feedparser.FeedParser.feed

# ---- Search class `email.feedparser.BytesFeedParser` ----
# Match: email.feedparser.BytesFeedParser.feed: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BytesFeedParser.feed

# ---- Wrap class `email.feedparser.BytesFeedParser`'s attributes ----
@: email.feedparser.BytesFeedParser.__init__ == email.feedparser.FeedParser.__init__
@: email.feedparser.BytesFeedParser.__setattr__ == builtins.object.__setattr__
@: email.feedparser.BytesFeedParser._call_parse == email.feedparser.FeedParser._call_parse
@: email.feedparser.BytesFeedParser._new_message == email.feedparser.FeedParser._new_message
@: email.feedparser.BytesFeedParser._parse_headers == email.feedparser.FeedParser._parse_headers
@: email.feedparser.BytesFeedParser._parsegen == email.feedparser.FeedParser._parsegen
@: email.feedparser.BytesFeedParser._pop_message == email.feedparser.FeedParser._pop_message
@: email.feedparser.BytesFeedParser._set_headersonly == email.feedparser.FeedParser._set_headersonly
@: email.feedparser.BytesFeedParser.close == email.feedparser.FeedParser.close
@: email.feedparser.BytesFeedParser.feed
# ===== Process class `email.feedparser.BytesFeedParser` =====


# ----- Process class `email.feedparser.deque` -----
!: email.feedparser.deque == collections.deque

# ----- Process class `email.feedparser.BufferedSubFile` -----
# Match: email.feedparser.BufferedSubFile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BufferedSubFile

# ---- Search base class `builtins.object` ----
# Match: email.feedparser.BufferedSubFile.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__delattr__ == builtins.object.__delattr__
# Match: email.feedparser.BufferedSubFile.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__dir__ == builtins.object.__dir__
# Match: email.feedparser.BufferedSubFile.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__eq__ == builtins.object.__eq__
# Match: email.feedparser.BufferedSubFile.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__format__ == builtins.object.__format__
# Match: email.feedparser.BufferedSubFile.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__ge__ == builtins.object.__ge__
# Match: email.feedparser.BufferedSubFile.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__getattribute__ == builtins.object.__getattribute__
# Match: email.feedparser.BufferedSubFile.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__gt__ == builtins.object.__gt__
# Match: email.feedparser.BufferedSubFile.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__hash__ == builtins.object.__hash__
# Match: email.feedparser.BufferedSubFile.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BufferedSubFile.__init__ == builtins.object.__init__
# Match: email.feedparser.BufferedSubFile.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__le__ == builtins.object.__le__
# Match: email.feedparser.BufferedSubFile.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__lt__ == builtins.object.__lt__
# Match: email.feedparser.BufferedSubFile.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__ne__ == builtins.object.__ne__
# Match: email.feedparser.BufferedSubFile.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__new__ == builtins.object.__new__
# Match: email.feedparser.BufferedSubFile.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__reduce__ == builtins.object.__reduce__
# Match: email.feedparser.BufferedSubFile.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email.feedparser.BufferedSubFile.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__repr__ == builtins.object.__repr__
# Match: email.feedparser.BufferedSubFile.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.feedparser.BufferedSubFile.__setattr__ == builtins.object.__setattr__
# Match: email.feedparser.BufferedSubFile.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__sizeof__ == builtins.object.__sizeof__
# Match: email.feedparser.BufferedSubFile.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__str__ == builtins.object.__str__
# Match: email.feedparser.BufferedSubFile.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `email.feedparser.BufferedSubFile` ----
# Match: email.feedparser.BufferedSubFile.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BufferedSubFile.__init__
# Match: email.feedparser.BufferedSubFile.__iter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__iter__
# Match: email.feedparser.BufferedSubFile.__next__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.BufferedSubFile.__next__
# Match: email.feedparser.BufferedSubFile.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BufferedSubFile.close
# Match: email.feedparser.BufferedSubFile.pop_eof_matcher: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BufferedSubFile.pop_eof_matcher
# Match: email.feedparser.BufferedSubFile.push: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BufferedSubFile.push
# Match: email.feedparser.BufferedSubFile.push_eof_matcher: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BufferedSubFile.push_eof_matcher
# Match: email.feedparser.BufferedSubFile.pushlines: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BufferedSubFile.pushlines
# Match: email.feedparser.BufferedSubFile.readline: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BufferedSubFile.readline
# Match: email.feedparser.BufferedSubFile.unreadline: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.BufferedSubFile.unreadline

# ---- Wrap class `email.feedparser.BufferedSubFile`'s attributes ----
@: email.feedparser.BufferedSubFile.__init__
@: email.feedparser.BufferedSubFile.__setattr__ == builtins.object.__setattr__
@: email.feedparser.BufferedSubFile.close
@: email.feedparser.BufferedSubFile.pop_eof_matcher
@: email.feedparser.BufferedSubFile.push
@: email.feedparser.BufferedSubFile.push_eof_matcher
@: email.feedparser.BufferedSubFile.pushlines
@: email.feedparser.BufferedSubFile.readline
@: email.feedparser.BufferedSubFile.unreadline
# ===== Process class `email.feedparser.BufferedSubFile` =====


# ----- Process class `email.feedparser.FeedParser` -----
# Match: email.feedparser.FeedParser: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.FeedParser

# ---- Search base class `builtins.object` ----
# Match: email.feedparser.FeedParser.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__delattr__ == builtins.object.__delattr__
# Match: email.feedparser.FeedParser.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__dir__ == builtins.object.__dir__
# Match: email.feedparser.FeedParser.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__eq__ == builtins.object.__eq__
# Match: email.feedparser.FeedParser.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__format__ == builtins.object.__format__
# Match: email.feedparser.FeedParser.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__ge__ == builtins.object.__ge__
# Match: email.feedparser.FeedParser.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__getattribute__ == builtins.object.__getattribute__
# Match: email.feedparser.FeedParser.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__gt__ == builtins.object.__gt__
# Match: email.feedparser.FeedParser.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__hash__ == builtins.object.__hash__
# Match: email.feedparser.FeedParser.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.FeedParser.__init__ == builtins.object.__init__
# Match: email.feedparser.FeedParser.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__le__ == builtins.object.__le__
# Match: email.feedparser.FeedParser.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__lt__ == builtins.object.__lt__
# Match: email.feedparser.FeedParser.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__ne__ == builtins.object.__ne__
# Match: email.feedparser.FeedParser.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__new__ == builtins.object.__new__
# Match: email.feedparser.FeedParser.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__reduce__ == builtins.object.__reduce__
# Match: email.feedparser.FeedParser.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email.feedparser.FeedParser.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__repr__ == builtins.object.__repr__
# Match: email.feedparser.FeedParser.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email.feedparser.FeedParser.__setattr__ == builtins.object.__setattr__
# Match: email.feedparser.FeedParser.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__sizeof__ == builtins.object.__sizeof__
# Match: email.feedparser.FeedParser.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__str__ == builtins.object.__str__
# Match: email.feedparser.FeedParser.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email.feedparser.FeedParser.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `email.feedparser.FeedParser` ----
# Match: email.feedparser.FeedParser.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.FeedParser.__init__
# Match: email.feedparser.FeedParser._call_parse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.FeedParser._call_parse
# Match: email.feedparser.FeedParser._new_message: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.FeedParser._new_message
# Match: email.feedparser.FeedParser._parse_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.FeedParser._parse_headers
# Match: email.feedparser.FeedParser._parsegen: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.FeedParser._parsegen
# Match: email.feedparser.FeedParser._pop_message: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.FeedParser._pop_message
# Match: email.feedparser.FeedParser._set_headersonly: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.FeedParser._set_headersonly
# Match: email.feedparser.FeedParser.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.FeedParser.close
# Match: email.feedparser.FeedParser.feed: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.feedparser.FeedParser.feed

# ---- Wrap class `email.feedparser.FeedParser`'s attributes ----
@: email.feedparser.FeedParser.__init__
@: email.feedparser.FeedParser.__setattr__ == builtins.object.__setattr__
@: email.feedparser.FeedParser._call_parse
@: email.feedparser.FeedParser._new_message
@: email.feedparser.FeedParser._parse_headers
@: email.feedparser.FeedParser._parsegen
@: email.feedparser.FeedParser._pop_message
@: email.feedparser.FeedParser._set_headersonly
@: email.feedparser.FeedParser.close
@: email.feedparser.FeedParser.feed
# ===== Process class `email.feedparser.FeedParser` =====

# ===== Process module `email.feedparser` =====


# ----- Process module `builtins` -----
# Match: builtins: None
!: builtins

# ----- Process module `tarfile` -----
# Match: tarfile: None
!: tarfile

# ----- Process module `atexit` -----
# Match: atexit: None
!: atexit

# ----- Process module `pkg_resources.extern.packaging._compat` -----
# Match: pkg_resources.extern.packaging._compat: None
!: pkg_resources.extern.packaging._compat

# ----- Process module `sre_compile` -----
# Match: sre_compile: None
!: sre_compile

# ----- Process module `codecs` -----
# Match: codecs: None
!: codecs

# ----- Process module `collections.abc` -----
# Match: collections.abc: None
!: collections.abc

# ----- Process module `vext.env` -----
# Match: vext.env: None
!: vext.env

# ----- Process module `win32com.shell` -----
# Match: win32com.shell: None
!: win32com.shell

# ----- Process module `pywintypes` -----
# Match: pywintypes: None
!: pywintypes

# ----- Process module `pkg_resources._vendor.pyparsing` -----
# Match: pkg_resources._vendor.pyparsing: None
!: pkg_resources._vendor.pyparsing

# ----- Process module `_thread` -----
# Match: _thread: None
!: _thread

# ----- Process module `logging` -----
# Match: logging: None
!: logging

# ----- Process module `_ast` -----
# Match: _ast: None
!: _ast

# ----- Process module `aoiktracecall.spec` -----
# Match: aoiktracecall.spec: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.spec

# ----- Process module `tempfile` -----
# Match: tempfile: None
!: tempfile

# ----- Process module `io` -----
# Match: io: None
!: io

# ----- Process module `email.base64mime` -----
# Match: email.base64mime: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.base64mime

# ----- Process callable `email.base64mime.decode` -----
# Match: email.base64mime.decode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.base64mime.decode

# ----- Process callable `email.base64mime.b64encode` -----
!: email.base64mime.b64encode == base64.b64encode

# ----- Process callable `email.base64mime.body_encode` -----
# Match: email.base64mime.body_encode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.base64mime.body_encode

# ----- Process callable `email.base64mime.a2b_base64` -----
!: email.base64mime.a2b_base64 == binascii.a2b_base64

# ----- Process callable `email.base64mime.b2a_base64` -----
!: email.base64mime.b2a_base64 == binascii.b2a_base64

# ----- Process callable `email.base64mime.body_decode` -----
# Match: email.base64mime.body_decode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.base64mime.body_decode

# ----- Process callable `email.base64mime.header_length` -----
# Match: email.base64mime.header_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.base64mime.header_length

# ----- Process callable `email.base64mime.decodestring` -----
# Match: email.base64mime.decodestring: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.base64mime.decodestring

# ----- Process callable `email.base64mime.header_encode` -----
# Match: email.base64mime.header_encode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email.base64mime.header_encode
# ===== Process module `email.base64mime` =====


# ----- Process module `encodings.mbcs` -----
# Match: encodings.mbcs: None
!: encodings.mbcs

# ----- Process module `zipfile` -----
# Match: zipfile: None
!: zipfile

# ----- Process module `pkg_resources._vendor.six.moves` -----
# Match: pkg_resources._vendor.six.moves: None
!: pkg_resources._vendor.six.moves

# ----- Process module `abc` -----
# Match: abc: None
!: abc

# ----- Process module `operator` -----
# Match: operator: None
!: operator

# ----- Process module `_sre` -----
# Match: _sre: None
!: _sre

# ----- Process module `base64` -----
# Match: base64: None
!: base64

# ----- Process module `aoiktracecall.plugin.showhide_plugin` -----
# Match: aoiktracecall.plugin.showhide_plugin: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.plugin.showhide_plugin

# ----- Process module `stat` -----
# Match: stat: None
!: stat

# ----- Process module `email._parseaddr` -----
# Match: email._parseaddr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr

# ----- Process callable `email._parseaddr.mktime_tz` -----
# Match: email._parseaddr.mktime_tz: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.mktime_tz

# ----- Process callable `email._parseaddr.quote` -----
# Match: email._parseaddr.quote: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.quote

# ----- Process callable `email._parseaddr.parsedate_tz` -----
# Match: email._parseaddr.parsedate_tz: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.parsedate_tz

# ----- Process class `email._parseaddr.AddrlistClass` -----
# Match: email._parseaddr.AddrlistClass: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddrlistClass

# ---- Search base class `builtins.object` ----
# Match: email._parseaddr.AddrlistClass.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__delattr__ == builtins.object.__delattr__
# Match: email._parseaddr.AddrlistClass.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__dir__ == builtins.object.__dir__
# Match: email._parseaddr.AddrlistClass.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__eq__ == builtins.object.__eq__
# Match: email._parseaddr.AddrlistClass.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__format__ == builtins.object.__format__
# Match: email._parseaddr.AddrlistClass.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__ge__ == builtins.object.__ge__
# Match: email._parseaddr.AddrlistClass.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__getattribute__ == builtins.object.__getattribute__
# Match: email._parseaddr.AddrlistClass.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__gt__ == builtins.object.__gt__
# Match: email._parseaddr.AddrlistClass.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__hash__ == builtins.object.__hash__
# Match: email._parseaddr.AddrlistClass.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddrlistClass.__init__ == builtins.object.__init__
# Match: email._parseaddr.AddrlistClass.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__le__ == builtins.object.__le__
# Match: email._parseaddr.AddrlistClass.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__lt__ == builtins.object.__lt__
# Match: email._parseaddr.AddrlistClass.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__ne__ == builtins.object.__ne__
# Match: email._parseaddr.AddrlistClass.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__new__ == builtins.object.__new__
# Match: email._parseaddr.AddrlistClass.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__reduce__ == builtins.object.__reduce__
# Match: email._parseaddr.AddrlistClass.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email._parseaddr.AddrlistClass.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__repr__ == builtins.object.__repr__
# Match: email._parseaddr.AddrlistClass.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email._parseaddr.AddrlistClass.__setattr__ == builtins.object.__setattr__
# Match: email._parseaddr.AddrlistClass.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__sizeof__ == builtins.object.__sizeof__
# Match: email._parseaddr.AddrlistClass.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__str__ == builtins.object.__str__
# Match: email._parseaddr.AddrlistClass.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddrlistClass.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `email._parseaddr.AddrlistClass` ----
# Match: email._parseaddr.AddrlistClass.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddrlistClass.__init__
# Match: email._parseaddr.AddrlistClass.getaddress: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddrlistClass.getaddress
# Match: email._parseaddr.AddrlistClass.getaddrlist: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddrlistClass.getaddrlist
# Match: email._parseaddr.AddrlistClass.getaddrspec: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddrlistClass.getaddrspec
# Match: email._parseaddr.AddrlistClass.getatom: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddrlistClass.getatom
# Match: email._parseaddr.AddrlistClass.getcomment: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddrlistClass.getcomment
# Match: email._parseaddr.AddrlistClass.getdelimited: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddrlistClass.getdelimited
# Match: email._parseaddr.AddrlistClass.getdomain: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddrlistClass.getdomain
# Match: email._parseaddr.AddrlistClass.getdomainliteral: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddrlistClass.getdomainliteral
# Match: email._parseaddr.AddrlistClass.getphraselist: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddrlistClass.getphraselist
# Match: email._parseaddr.AddrlistClass.getquote: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddrlistClass.getquote
# Match: email._parseaddr.AddrlistClass.getrouteaddr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddrlistClass.getrouteaddr
# Match: email._parseaddr.AddrlistClass.gotonext: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddrlistClass.gotonext

# ---- Wrap class `email._parseaddr.AddrlistClass`'s attributes ----
@: email._parseaddr.AddrlistClass.__init__
@: email._parseaddr.AddrlistClass.__setattr__ == builtins.object.__setattr__
@: email._parseaddr.AddrlistClass.getaddress
@: email._parseaddr.AddrlistClass.getaddrlist
@: email._parseaddr.AddrlistClass.getaddrspec
@: email._parseaddr.AddrlistClass.getatom
@: email._parseaddr.AddrlistClass.getcomment
@: email._parseaddr.AddrlistClass.getdelimited
@: email._parseaddr.AddrlistClass.getdomain
@: email._parseaddr.AddrlistClass.getdomainliteral
@: email._parseaddr.AddrlistClass.getphraselist
@: email._parseaddr.AddrlistClass.getquote
@: email._parseaddr.AddrlistClass.getrouteaddr
@: email._parseaddr.AddrlistClass.gotonext
# ===== Process class `email._parseaddr.AddrlistClass` =====


# ----- Process callable `email._parseaddr.parsedate` -----
# Match: email._parseaddr.parsedate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.parsedate

# ----- Process callable `email._parseaddr._parsedate_tz` -----
# Match: email._parseaddr._parsedate_tz: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr._parsedate_tz

# ----- Process class `email._parseaddr.AddressList` -----
# Match: email._parseaddr.AddressList: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddressList

# ---- Search base class `builtins.object` ----
# Match: email._parseaddr.AddressList.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__delattr__ == builtins.object.__delattr__
# Match: email._parseaddr.AddressList.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__dir__ == builtins.object.__dir__
# Match: email._parseaddr.AddressList.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__eq__ == builtins.object.__eq__
# Match: email._parseaddr.AddressList.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__format__ == builtins.object.__format__
# Match: email._parseaddr.AddressList.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__ge__ == builtins.object.__ge__
# Match: email._parseaddr.AddressList.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__getattribute__ == builtins.object.__getattribute__
# Match: email._parseaddr.AddressList.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__gt__ == builtins.object.__gt__
# Match: email._parseaddr.AddressList.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__hash__ == builtins.object.__hash__
# Match: email._parseaddr.AddressList.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddressList.__init__ == builtins.object.__init__
# Match: email._parseaddr.AddressList.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__le__ == builtins.object.__le__
# Match: email._parseaddr.AddressList.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__lt__ == builtins.object.__lt__
# Match: email._parseaddr.AddressList.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__ne__ == builtins.object.__ne__
# Match: email._parseaddr.AddressList.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__new__ == builtins.object.__new__
# Match: email._parseaddr.AddressList.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__reduce__ == builtins.object.__reduce__
# Match: email._parseaddr.AddressList.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: email._parseaddr.AddressList.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__repr__ == builtins.object.__repr__
# Match: email._parseaddr.AddressList.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email._parseaddr.AddressList.__setattr__ == builtins.object.__setattr__
# Match: email._parseaddr.AddressList.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__sizeof__ == builtins.object.__sizeof__
# Match: email._parseaddr.AddressList.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__str__ == builtins.object.__str__
# Match: email._parseaddr.AddressList.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `email._parseaddr.AddrlistClass` ----
# Match: email._parseaddr.AddressList.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddressList.__init__ == email._parseaddr.AddrlistClass.__init__
# Match: email._parseaddr.AddressList.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: email._parseaddr.AddressList.__setattr__ == builtins.object.__setattr__
# Match: email._parseaddr.AddressList.getaddress: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddressList.getaddress == email._parseaddr.AddrlistClass.getaddress
# Match: email._parseaddr.AddressList.getaddrlist: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddressList.getaddrlist == email._parseaddr.AddrlistClass.getaddrlist
# Match: email._parseaddr.AddressList.getaddrspec: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddressList.getaddrspec == email._parseaddr.AddrlistClass.getaddrspec
# Match: email._parseaddr.AddressList.getatom: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddressList.getatom == email._parseaddr.AddrlistClass.getatom
# Match: email._parseaddr.AddressList.getcomment: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddressList.getcomment == email._parseaddr.AddrlistClass.getcomment
# Match: email._parseaddr.AddressList.getdelimited: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddressList.getdelimited == email._parseaddr.AddrlistClass.getdelimited
# Match: email._parseaddr.AddressList.getdomain: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddressList.getdomain == email._parseaddr.AddrlistClass.getdomain
# Match: email._parseaddr.AddressList.getdomainliteral: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddressList.getdomainliteral == email._parseaddr.AddrlistClass.getdomainliteral
# Match: email._parseaddr.AddressList.getphraselist: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddressList.getphraselist == email._parseaddr.AddrlistClass.getphraselist
# Match: email._parseaddr.AddressList.getquote: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddressList.getquote == email._parseaddr.AddrlistClass.getquote
# Match: email._parseaddr.AddressList.getrouteaddr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddressList.getrouteaddr == email._parseaddr.AddrlistClass.getrouteaddr
# Match: email._parseaddr.AddressList.gotonext: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddressList.gotonext == email._parseaddr.AddrlistClass.gotonext

# ---- Search class `email._parseaddr.AddressList` ----
# Match: email._parseaddr.AddressList.__add__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__add__
# Match: email._parseaddr.AddressList.__getitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__getitem__
# Match: email._parseaddr.AddressList.__iadd__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__iadd__
# Match: email._parseaddr.AddressList.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'email([.].+)?'}
@: email._parseaddr.AddressList.__init__
# Match: email._parseaddr.AddressList.__isub__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__isub__
# Match: email._parseaddr.AddressList.__len__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__len__
# Match: email._parseaddr.AddressList.__sub__: {'regex': True, 'spec_arg': False, 'spec_uri': 'email[.].+[.]__(?!init)[^.]+__'}
!: email._parseaddr.AddressList.__sub__

# ---- Wrap class `email._parseaddr.AddressList`'s attributes ----
@: email._parseaddr.AddressList.__init__
@: email._parseaddr.AddressList.__setattr__ == builtins.object.__setattr__
@: email._parseaddr.AddressList.getaddress == email._parseaddr.AddrlistClass.getaddress
@: email._parseaddr.AddressList.getaddrlist == email._parseaddr.AddrlistClass.getaddrlist
@: email._parseaddr.AddressList.getaddrspec == email._parseaddr.AddrlistClass.getaddrspec
@: email._parseaddr.AddressList.getatom == email._parseaddr.AddrlistClass.getatom
@: email._parseaddr.AddressList.getcomment == email._parseaddr.AddrlistClass.getcomment
@: email._parseaddr.AddressList.getdelimited == email._parseaddr.AddrlistClass.getdelimited
@: email._parseaddr.AddressList.getdomain == email._parseaddr.AddrlistClass.getdomain
@: email._parseaddr.AddressList.getdomainliteral == email._parseaddr.AddrlistClass.getdomainliteral
@: email._parseaddr.AddressList.getphraselist == email._parseaddr.AddrlistClass.getphraselist
@: email._parseaddr.AddressList.getquote == email._parseaddr.AddrlistClass.getquote
@: email._parseaddr.AddressList.getrouteaddr == email._parseaddr.AddrlistClass.getrouteaddr
@: email._parseaddr.AddressList.gotonext == email._parseaddr.AddrlistClass.gotonext
# ===== Process class `email._parseaddr.AddressList` =====

# ===== Process module `email._parseaddr` =====


# ----- Process module `_warnings` -----
# Match: _warnings: None
!: _warnings

# ----- Process module `aoiktracecall.plugin.figlet_plugin` -----
# Match: aoiktracecall.plugin.figlet_plugin: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.plugin.figlet_plugin

# ----- Process module `quopri` -----
# Match: quopri: None
!: quopri

# ----- Process module `xml.parsers.expat` -----
# Match: xml.parsers.expat: None
!: xml.parsers.expat

# ----- Process module `copy` -----
# Match: copy: None
!: copy

# ----- Process module `_bz2` -----
# Match: _bz2: None
!: _bz2

# ----- Process module `linecache` -----
# Match: linecache: None
!: linecache

# ----- Process module `binascii` -----
# Match: binascii: None
!: binascii

# ----- Process module `pkg_resources.extern.packaging.specifiers` -----
# Match: pkg_resources.extern.packaging.specifiers: None
!: pkg_resources.extern.packaging.specifiers

# ----- Process module `pyexpat.model` -----
# Match: pyexpat.model: None
!: pyexpat.model

# ----- Process module `aoiktracecall.config` -----
# Match: aoiktracecall.config: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.config

# ----- Process module `sys` -----
# Match: sys: None
!: sys

# ----- Process module `zlib` -----
# Match: zlib: None
!: zlib

# ----- Process module `pkg_resources._vendor.appdirs` -----
# Match: pkg_resources._vendor.appdirs: None
!: pkg_resources._vendor.appdirs

# ----- Process module `pkg_resources` -----
# Match: pkg_resources: None
!: pkg_resources

# ----- Process module `optparse` -----
# Match: optparse: None
!: optparse

# ----- Process module `_opcode` -----
# Match: _opcode: None
!: _opcode

# ----- Process module `encodings` -----
# Match: encodings: None
!: encodings

# ----- Process module `importlib._bootstrap` -----
# Match: importlib._bootstrap: None
!: importlib._bootstrap

# ----- Process module `__future__` -----
# Match: __future__: None
!: __future__

# ----- Process module `datetime` -----
# Match: datetime: None
!: datetime

# ----- Process module `urllib.parse` -----
# Match: urllib.parse: None
!: urllib.parse

# ----- Process module `aoiktracecall.trace` -----
# Match: aoiktracecall.trace: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.trace
         _____ ___             ___            _                                   _ _         _                                           
        |_   _/ _ \           / _ \          | |_ _ __ __ _  ___ ___     ___ __ _| | |___    (_)_ __      ___ _ __   ___  ___ ___         
 _____    | || | | |  _____  | | | |  _____  | __| '__/ _` |/ __/ _ \   / __/ _` | | / __|   | | '_ \    / __| '_ \ / _ \/ __/ __|  _____ 
|_____|   | || |_| | |_____| | |_| | |_____| | |_| | | (_| | (_|  __/  | (_| (_| | | \__ \   | | | | |   \__ \ |_) |  __/ (__\__ \ |_____|
          |_| \___/           \___/           \__|_|  \__,_|\___\___|___\___\__,_|_|_|___/___|_|_| |_|___|___/ .__/ \___|\___|___/        
                                                                   |_____|              |_____|     |_____|  |_|                          

+ T0 + * wsgiref +
- T0 - * wsgiref -

# ----- Process module `wsgiref` -----
# Match: wsgiref: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref
# ===== Process module `wsgiref` =====

+ T0 + * wsgiref.simple_server +
        + T0 + * http +
        - T0 - * http -

# ----- Process module `http` -----
# Match: http: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http

# ----- Process class `http.IntEnum` -----
!: http.IntEnum == enum.IntEnum

# ----- Process class `http.HTTPStatus` -----
# Match: http.HTTPStatus: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.HTTPStatus

# ---- Search base class `builtins.object` ----
# Match: http.HTTPStatus.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__delattr__ == builtins.object.__delattr__
# Match: http.HTTPStatus.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__dir__ == builtins.object.__dir__
# Match: http.HTTPStatus.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__eq__ == builtins.object.__eq__
# Match: http.HTTPStatus.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__format__ == builtins.object.__format__
# Match: http.HTTPStatus.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__ge__ == builtins.object.__ge__
# Match: http.HTTPStatus.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__getattribute__ == builtins.object.__getattribute__
# Match: http.HTTPStatus.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__gt__ == builtins.object.__gt__
# Match: http.HTTPStatus.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__hash__ == builtins.object.__hash__
# Match: http.HTTPStatus.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.HTTPStatus.__init__ == builtins.object.__init__
# Match: http.HTTPStatus.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__le__ == builtins.object.__le__
# Match: http.HTTPStatus.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__lt__ == builtins.object.__lt__
# Match: http.HTTPStatus.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__ne__ == builtins.object.__ne__
# Match: http.HTTPStatus.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__new__ == builtins.object.__new__
# Match: http.HTTPStatus.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__reduce__ == builtins.object.__reduce__
# Match: http.HTTPStatus.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: http.HTTPStatus.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__repr__ == builtins.object.__repr__
# Match: http.HTTPStatus.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.HTTPStatus.__setattr__ == builtins.object.__setattr__
# Match: http.HTTPStatus.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__sizeof__ == builtins.object.__sizeof__
# Match: http.HTTPStatus.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__str__ == builtins.object.__str__
# Match: http.HTTPStatus.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `enum.Enum` ----
# Match: http.HTTPStatus.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__dir__ == enum.Enum.__dir__
# Match: http.HTTPStatus.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__format__ == enum.Enum.__format__
# Match: http.HTTPStatus.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__hash__ == enum.Enum.__hash__
# Match: http.HTTPStatus.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__reduce_ex__ == enum.Enum.__reduce_ex__
# Match: http.HTTPStatus.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__repr__ == enum.Enum.__repr__
# Match: http.HTTPStatus.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__str__ == enum.Enum.__str__
# Match: http.HTTPStatus._member_type_: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.HTTPStatus._member_type_ == enum.Enum._member_type_

# ---- Search base class `builtins.int` ----
# Match: http.HTTPStatus.__abs__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__abs__ == builtins.int.__abs__
# Match: http.HTTPStatus.__add__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__add__ == builtins.int.__add__
# Match: http.HTTPStatus.__and__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__and__ == builtins.int.__and__
# Match: http.HTTPStatus.__bool__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__bool__ == builtins.int.__bool__
# Match: http.HTTPStatus.__ceil__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__ceil__ == builtins.int.__ceil__
# Match: http.HTTPStatus.__divmod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__divmod__ == builtins.int.__divmod__
# Match: http.HTTPStatus.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__eq__ == builtins.int.__eq__
# Match: http.HTTPStatus.__float__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__float__ == builtins.int.__float__
# Match: http.HTTPStatus.__floor__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__floor__ == builtins.int.__floor__
# Match: http.HTTPStatus.__floordiv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__floordiv__ == builtins.int.__floordiv__
# Match: http.HTTPStatus.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__format__ == builtins.int.__format__
# Match: http.HTTPStatus.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__ge__ == builtins.int.__ge__
# Match: http.HTTPStatus.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__getattribute__ == builtins.int.__getattribute__
# Match: http.HTTPStatus.__getnewargs__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__getnewargs__ == builtins.int.__getnewargs__
# Match: http.HTTPStatus.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__gt__ == builtins.int.__gt__
# Match: http.HTTPStatus.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__hash__ == builtins.int.__hash__
# Match: http.HTTPStatus.__index__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__index__ == builtins.int.__index__
# Match: http.HTTPStatus.__int__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__int__ == builtins.int.__int__
# Match: http.HTTPStatus.__invert__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__invert__ == builtins.int.__invert__
# Match: http.HTTPStatus.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__le__ == builtins.int.__le__
# Match: http.HTTPStatus.__lshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__lshift__ == builtins.int.__lshift__
# Match: http.HTTPStatus.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__lt__ == builtins.int.__lt__
# Match: http.HTTPStatus.__mod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__mod__ == builtins.int.__mod__
# Match: http.HTTPStatus.__mul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__mul__ == builtins.int.__mul__
# Match: http.HTTPStatus.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__ne__ == builtins.int.__ne__
# Match: http.HTTPStatus.__neg__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__neg__ == builtins.int.__neg__
# Match: http.HTTPStatus.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__new__ == builtins.int.__new__
# Match: http.HTTPStatus.__or__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__or__ == builtins.int.__or__
# Match: http.HTTPStatus.__pos__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__pos__ == builtins.int.__pos__
# Match: http.HTTPStatus.__pow__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__pow__ == builtins.int.__pow__
# Match: http.HTTPStatus.__radd__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__radd__ == builtins.int.__radd__
# Match: http.HTTPStatus.__rand__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__rand__ == builtins.int.__rand__
# Match: http.HTTPStatus.__rdivmod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__rdivmod__ == builtins.int.__rdivmod__
# Match: http.HTTPStatus.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__repr__ == builtins.int.__repr__
# Match: http.HTTPStatus.__rfloordiv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__rfloordiv__ == builtins.int.__rfloordiv__
# Match: http.HTTPStatus.__rlshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__rlshift__ == builtins.int.__rlshift__
# Match: http.HTTPStatus.__rmod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__rmod__ == builtins.int.__rmod__
# Match: http.HTTPStatus.__rmul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__rmul__ == builtins.int.__rmul__
# Match: http.HTTPStatus.__ror__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__ror__ == builtins.int.__ror__
# Match: http.HTTPStatus.__round__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__round__ == builtins.int.__round__
# Match: http.HTTPStatus.__rpow__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__rpow__ == builtins.int.__rpow__
# Match: http.HTTPStatus.__rrshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__rrshift__ == builtins.int.__rrshift__
# Match: http.HTTPStatus.__rshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__rshift__ == builtins.int.__rshift__
# Match: http.HTTPStatus.__rsub__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__rsub__ == builtins.int.__rsub__
# Match: http.HTTPStatus.__rtruediv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__rtruediv__ == builtins.int.__rtruediv__
# Match: http.HTTPStatus.__rxor__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__rxor__ == builtins.int.__rxor__
# Match: http.HTTPStatus.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__sizeof__ == builtins.int.__sizeof__
# Match: http.HTTPStatus.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__str__ == builtins.int.__str__
# Match: http.HTTPStatus.__sub__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__sub__ == builtins.int.__sub__
# Match: http.HTTPStatus.__truediv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__truediv__ == builtins.int.__truediv__
# Match: http.HTTPStatus.__trunc__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__trunc__ == builtins.int.__trunc__
# Match: http.HTTPStatus.__xor__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__xor__ == builtins.int.__xor__
# Match: http.HTTPStatus.bit_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.HTTPStatus.bit_length == builtins.int.bit_length
# Match: http.HTTPStatus.conjugate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.HTTPStatus.conjugate == builtins.int.conjugate
# Match: http.HTTPStatus.from_bytes: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.HTTPStatus.from_bytes == builtins.int.from_bytes
# Match: http.HTTPStatus.to_bytes: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.HTTPStatus.to_bytes == builtins.int.to_bytes

# ---- Search base class `enum.IntEnum` ----
# Match: http.HTTPStatus.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__format__ == enum.IntEnum.__format__
# Match: http.HTTPStatus.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__new__ == enum.IntEnum.__new__
# Match: http.HTTPStatus.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__repr__ == enum.IntEnum.__repr__
# Match: http.HTTPStatus.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__str__ == enum.IntEnum.__str__
# Match: http.HTTPStatus._member_type_: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.HTTPStatus._member_type_ == enum.IntEnum._member_type_

# ---- Search class `http.HTTPStatus` ----
# Match: http.HTTPStatus.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__new__
# Match: http.HTTPStatus.__new_member__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.HTTPStatus.__new_member__
# Match: http.HTTPStatus._member_type_: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.HTTPStatus._member_type_ == enum.IntEnum._member_type_

# ---- Wrap class `http.HTTPStatus`'s attributes ----
@: http.HTTPStatus.__init__ == builtins.object.__init__
@: http.HTTPStatus.__setattr__ == builtins.object.__setattr__
@: http.HTTPStatus._member_type_ == enum.IntEnum._member_type_
@: http.HTTPStatus.bit_length == builtins.int.bit_length
@: http.HTTPStatus.conjugate == builtins.int.conjugate
@: http.HTTPStatus.from_bytes == builtins.int.from_bytes
@: http.HTTPStatus.to_bytes == builtins.int.to_bytes
# ===== Process class `http.HTTPStatus` =====

# ===== Process module `http` =====

        + T0 + * http.server +
                + T0 + * html +
                        + T0 + * html.entities +
                        - T0 - * html.entities -

# ----- Process module `html.entities` -----
# Match: html.entities: None
!: html.entities
                - T0 - * html -

# ----- Process module `html` -----
# Match: html: None
!: html
                + T0 + * http.client +
                        + T0 + * ssl +
                                + T0 + * ipaddress +
                                - T0 - * ipaddress -

# ----- Process module `ipaddress` -----
# Match: ipaddress: None
!: ipaddress
                                + T0 + * _ssl +
                                - T0 - * _ssl -

# ----- Process module `_ssl` -----
# Match: _ssl: None
!: _ssl
                        - T0 - * ssl -

# ----- Process module `ssl` -----
# Match: ssl: None
!: ssl
                - T0 - * http.client -

# ----- Process module `http.client` -----
# Match: http.client: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client

# ----- Process class `http.client.UnknownProtocol` -----

# ----- Process class `http.client.InvalidURL` -----

# ----- Process class `http.client.HTTPSConnection` -----
# Match: http.client.HTTPSConnection: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection

# ---- Search base class `builtins.object` ----
# Match: http.client.HTTPSConnection.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__delattr__ == builtins.object.__delattr__
# Match: http.client.HTTPSConnection.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__dir__ == builtins.object.__dir__
# Match: http.client.HTTPSConnection.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__eq__ == builtins.object.__eq__
# Match: http.client.HTTPSConnection.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__format__ == builtins.object.__format__
# Match: http.client.HTTPSConnection.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__ge__ == builtins.object.__ge__
# Match: http.client.HTTPSConnection.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__getattribute__ == builtins.object.__getattribute__
# Match: http.client.HTTPSConnection.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__gt__ == builtins.object.__gt__
# Match: http.client.HTTPSConnection.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__hash__ == builtins.object.__hash__
# Match: http.client.HTTPSConnection.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection.__init__ == builtins.object.__init__
# Match: http.client.HTTPSConnection.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__le__ == builtins.object.__le__
# Match: http.client.HTTPSConnection.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__lt__ == builtins.object.__lt__
# Match: http.client.HTTPSConnection.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__ne__ == builtins.object.__ne__
# Match: http.client.HTTPSConnection.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__new__ == builtins.object.__new__
# Match: http.client.HTTPSConnection.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__reduce__ == builtins.object.__reduce__
# Match: http.client.HTTPSConnection.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: http.client.HTTPSConnection.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__repr__ == builtins.object.__repr__
# Match: http.client.HTTPSConnection.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.client.HTTPSConnection.__setattr__ == builtins.object.__setattr__
# Match: http.client.HTTPSConnection.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__sizeof__ == builtins.object.__sizeof__
# Match: http.client.HTTPSConnection.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__str__ == builtins.object.__str__
# Match: http.client.HTTPSConnection.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPSConnection.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `http.client.HTTPConnection` ----
# Match: http.client.HTTPSConnection.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection.__init__ == http.client.HTTPConnection.__init__
# Match: http.client.HTTPSConnection._get_hostport: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection._get_hostport == http.client.HTTPConnection._get_hostport
# Match: http.client.HTTPSConnection._output: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection._output == http.client.HTTPConnection._output
# Match: http.client.HTTPSConnection._send_output: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection._send_output == http.client.HTTPConnection._send_output
# Match: http.client.HTTPSConnection._send_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection._send_request == http.client.HTTPConnection._send_request
# Match: http.client.HTTPSConnection._set_content_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection._set_content_length == http.client.HTTPConnection._set_content_length
# Match: http.client.HTTPSConnection._tunnel: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection._tunnel == http.client.HTTPConnection._tunnel
# Match: http.client.HTTPSConnection.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection.close == http.client.HTTPConnection.close
# Match: http.client.HTTPSConnection.connect: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection.connect == http.client.HTTPConnection.connect
# Match: http.client.HTTPSConnection.endheaders: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection.endheaders == http.client.HTTPConnection.endheaders
# Match: http.client.HTTPSConnection.getresponse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection.getresponse == http.client.HTTPConnection.getresponse
# Match: http.client.HTTPSConnection.putheader: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection.putheader == http.client.HTTPConnection.putheader
# Match: http.client.HTTPSConnection.putrequest: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection.putrequest == http.client.HTTPConnection.putrequest
# Match: http.client.HTTPSConnection.request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection.request == http.client.HTTPConnection.request
# Match: http.client.HTTPSConnection.response_class: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection.response_class == http.client.HTTPConnection.response_class
# Match: http.client.HTTPSConnection.send: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection.send == http.client.HTTPConnection.send
# Match: http.client.HTTPSConnection.set_debuglevel: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection.set_debuglevel == http.client.HTTPConnection.set_debuglevel
# Match: http.client.HTTPSConnection.set_tunnel: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection.set_tunnel == http.client.HTTPConnection.set_tunnel

# ---- Search class `http.client.HTTPSConnection` ----
# Match: http.client.HTTPSConnection.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection.__init__
# Match: http.client.HTTPSConnection.connect: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPSConnection.connect

# ---- Wrap class `http.client.HTTPSConnection`'s attributes ----
@: http.client.HTTPSConnection.__init__
@: http.client.HTTPSConnection.__setattr__ == builtins.object.__setattr__
@: http.client.HTTPSConnection._get_hostport == http.client.HTTPConnection._get_hostport
@: http.client.HTTPSConnection._output == http.client.HTTPConnection._output
@: http.client.HTTPSConnection._send_output == http.client.HTTPConnection._send_output
@: http.client.HTTPSConnection._send_request == http.client.HTTPConnection._send_request
@: http.client.HTTPSConnection._set_content_length == http.client.HTTPConnection._set_content_length
@: http.client.HTTPSConnection._tunnel == http.client.HTTPConnection._tunnel
@: http.client.HTTPSConnection.close == http.client.HTTPConnection.close
@: http.client.HTTPSConnection.connect
@: http.client.HTTPSConnection.endheaders == http.client.HTTPConnection.endheaders
@: http.client.HTTPSConnection.getresponse == http.client.HTTPConnection.getresponse
@: http.client.HTTPSConnection.putheader == http.client.HTTPConnection.putheader
@: http.client.HTTPSConnection.putrequest == http.client.HTTPConnection.putrequest
@: http.client.HTTPSConnection.request == http.client.HTTPConnection.request
@: http.client.HTTPSConnection.response_class == http.client.HTTPConnection.response_class
@: http.client.HTTPSConnection.send == http.client.HTTPConnection.send
@: http.client.HTTPSConnection.set_debuglevel == http.client.HTTPConnection.set_debuglevel
@: http.client.HTTPSConnection.set_tunnel == http.client.HTTPConnection.set_tunnel
# ===== Process class `http.client.HTTPSConnection` =====


# ----- Process callable `http.client._is_legal_header_name` -----
!: http.client._is_legal_header_name == None._is_legal_header_name

# ----- Process class `http.client.IncompleteRead` -----

# ----- Process class `http.client.CannotSendHeader` -----

# ----- Process class `http.client.NotConnected` -----

# ----- Process class `http.client.LineTooLong` -----

# ----- Process class `http.client.ImproperConnectionState` -----

# ----- Process class `http.client.HTTPException` -----

# ----- Process class `http.client.UnknownTransferEncoding` -----

# ----- Process callable `http.client._is_illegal_header_value` -----
!: http.client._is_illegal_header_value == None._is_illegal_header_value

# ----- Process class `http.client.HTTPConnection` -----
# Match: http.client.HTTPConnection: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection

# ---- Search base class `builtins.object` ----
# Match: http.client.HTTPConnection.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__delattr__ == builtins.object.__delattr__
# Match: http.client.HTTPConnection.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__dir__ == builtins.object.__dir__
# Match: http.client.HTTPConnection.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__eq__ == builtins.object.__eq__
# Match: http.client.HTTPConnection.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__format__ == builtins.object.__format__
# Match: http.client.HTTPConnection.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__ge__ == builtins.object.__ge__
# Match: http.client.HTTPConnection.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__getattribute__ == builtins.object.__getattribute__
# Match: http.client.HTTPConnection.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__gt__ == builtins.object.__gt__
# Match: http.client.HTTPConnection.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__hash__ == builtins.object.__hash__
# Match: http.client.HTTPConnection.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection.__init__ == builtins.object.__init__
# Match: http.client.HTTPConnection.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__le__ == builtins.object.__le__
# Match: http.client.HTTPConnection.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__lt__ == builtins.object.__lt__
# Match: http.client.HTTPConnection.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__ne__ == builtins.object.__ne__
# Match: http.client.HTTPConnection.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__new__ == builtins.object.__new__
# Match: http.client.HTTPConnection.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__reduce__ == builtins.object.__reduce__
# Match: http.client.HTTPConnection.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: http.client.HTTPConnection.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__repr__ == builtins.object.__repr__
# Match: http.client.HTTPConnection.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.client.HTTPConnection.__setattr__ == builtins.object.__setattr__
# Match: http.client.HTTPConnection.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__sizeof__ == builtins.object.__sizeof__
# Match: http.client.HTTPConnection.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__str__ == builtins.object.__str__
# Match: http.client.HTTPConnection.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPConnection.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `http.client.HTTPConnection` ----
# Match: http.client.HTTPConnection.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection.__init__
# Match: http.client.HTTPConnection._get_hostport: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection._get_hostport
# Match: http.client.HTTPConnection._output: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection._output
# Match: http.client.HTTPConnection._send_output: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection._send_output
# Match: http.client.HTTPConnection._send_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection._send_request
# Match: http.client.HTTPConnection._set_content_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection._set_content_length
# Match: http.client.HTTPConnection._tunnel: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection._tunnel
# Match: http.client.HTTPConnection.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection.close
# Match: http.client.HTTPConnection.connect: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection.connect
# Match: http.client.HTTPConnection.endheaders: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection.endheaders
# Match: http.client.HTTPConnection.getresponse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection.getresponse
# Match: http.client.HTTPConnection.putheader: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection.putheader
# Match: http.client.HTTPConnection.putrequest: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection.putrequest
# Match: http.client.HTTPConnection.request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection.request
# Match: http.client.HTTPConnection.response_class: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection.response_class
# Match: http.client.HTTPConnection.send: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection.send
# Match: http.client.HTTPConnection.set_debuglevel: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection.set_debuglevel
# Match: http.client.HTTPConnection.set_tunnel: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPConnection.set_tunnel

# ---- Wrap class `http.client.HTTPConnection`'s attributes ----
@: http.client.HTTPConnection.__init__
@: http.client.HTTPConnection.__setattr__ == builtins.object.__setattr__
@: http.client.HTTPConnection._get_hostport
@: http.client.HTTPConnection._output
@: http.client.HTTPConnection._send_output
@: http.client.HTTPConnection._send_request
@: http.client.HTTPConnection._set_content_length
@: http.client.HTTPConnection._tunnel
@: http.client.HTTPConnection.close
@: http.client.HTTPConnection.connect
@: http.client.HTTPConnection.endheaders
@: http.client.HTTPConnection.getresponse
@: http.client.HTTPConnection.putheader
@: http.client.HTTPConnection.putrequest
@: http.client.HTTPConnection.request
@: http.client.HTTPConnection.response_class
@: http.client.HTTPConnection.send
@: http.client.HTTPConnection.set_debuglevel
@: http.client.HTTPConnection.set_tunnel
# ===== Process class `http.client.HTTPConnection` =====


# ----- Process class `http.client.HTTPMessage` -----
# Match: http.client.HTTPMessage: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage

# ---- Search base class `builtins.object` ----
# Match: http.client.HTTPMessage.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__delattr__ == builtins.object.__delattr__
# Match: http.client.HTTPMessage.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__dir__ == builtins.object.__dir__
# Match: http.client.HTTPMessage.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__eq__ == builtins.object.__eq__
# Match: http.client.HTTPMessage.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__format__ == builtins.object.__format__
# Match: http.client.HTTPMessage.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__ge__ == builtins.object.__ge__
# Match: http.client.HTTPMessage.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__getattribute__ == builtins.object.__getattribute__
# Match: http.client.HTTPMessage.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__gt__ == builtins.object.__gt__
# Match: http.client.HTTPMessage.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__hash__ == builtins.object.__hash__
# Match: http.client.HTTPMessage.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.__init__ == builtins.object.__init__
# Match: http.client.HTTPMessage.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__le__ == builtins.object.__le__
# Match: http.client.HTTPMessage.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__lt__ == builtins.object.__lt__
# Match: http.client.HTTPMessage.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__ne__ == builtins.object.__ne__
# Match: http.client.HTTPMessage.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__new__ == builtins.object.__new__
# Match: http.client.HTTPMessage.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__reduce__ == builtins.object.__reduce__
# Match: http.client.HTTPMessage.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: http.client.HTTPMessage.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__repr__ == builtins.object.__repr__
# Match: http.client.HTTPMessage.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.client.HTTPMessage.__setattr__ == builtins.object.__setattr__
# Match: http.client.HTTPMessage.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__sizeof__ == builtins.object.__sizeof__
# Match: http.client.HTTPMessage.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__str__ == builtins.object.__str__
# Match: http.client.HTTPMessage.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `email.message.Message` ----
# Match: http.client.HTTPMessage.__bytes__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__bytes__ == email.message.Message.__bytes__
# Match: http.client.HTTPMessage.__contains__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__contains__ == email.message.Message.__contains__
# Match: http.client.HTTPMessage.__delitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__delitem__ == email.message.Message.__delitem__
# Match: http.client.HTTPMessage.__getitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__getitem__ == email.message.Message.__getitem__
# Match: http.client.HTTPMessage.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.__init__ == email.message.Message.__init__
# Match: http.client.HTTPMessage.__iter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__iter__ == email.message.Message.__iter__
# Match: http.client.HTTPMessage.__len__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__len__ == email.message.Message.__len__
# Match: http.client.HTTPMessage.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.client.HTTPMessage.__setattr__ == builtins.object.__setattr__
# Match: http.client.HTTPMessage.__setitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__setitem__ == email.message.Message.__setitem__
# Match: http.client.HTTPMessage.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.client.HTTPMessage.__str__ == email.message.Message.__str__
# Match: http.client.HTTPMessage._get_params_preserve: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage._get_params_preserve == email.message.Message._get_params_preserve
# Match: http.client.HTTPMessage.add_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.add_header == email.message.Message.add_header
# Match: http.client.HTTPMessage.as_bytes: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.as_bytes == email.message.Message.as_bytes
# Match: http.client.HTTPMessage.as_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.as_string == email.message.Message.as_string
# Match: http.client.HTTPMessage.attach: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.attach == email.message.Message.attach
# Match: http.client.HTTPMessage.del_param: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.del_param == email.message.Message.del_param
# Match: http.client.HTTPMessage.get: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.get == email.message.Message.get
# Match: http.client.HTTPMessage.get_all: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.get_all == email.message.Message.get_all
# Match: http.client.HTTPMessage.get_boundary: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.get_boundary == email.message.Message.get_boundary
# Match: http.client.HTTPMessage.get_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.get_charset == email.message.Message.get_charset
# Match: http.client.HTTPMessage.get_charsets: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.get_charsets == email.message.Message.get_charsets
# Match: http.client.HTTPMessage.get_content_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.get_content_charset == email.message.Message.get_content_charset
# Match: http.client.HTTPMessage.get_content_disposition: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.get_content_disposition == email.message.Message.get_content_disposition
# Match: http.client.HTTPMessage.get_content_maintype: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.get_content_maintype == email.message.Message.get_content_maintype
# Match: http.client.HTTPMessage.get_content_subtype: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.get_content_subtype == email.message.Message.get_content_subtype
# Match: http.client.HTTPMessage.get_content_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.get_content_type == email.message.Message.get_content_type
# Match: http.client.HTTPMessage.get_default_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.get_default_type == email.message.Message.get_default_type
# Match: http.client.HTTPMessage.get_filename: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.get_filename == email.message.Message.get_filename
# Match: http.client.HTTPMessage.get_param: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.get_param == email.message.Message.get_param
# Match: http.client.HTTPMessage.get_params: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.get_params == email.message.Message.get_params
# Match: http.client.HTTPMessage.get_payload: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.get_payload == email.message.Message.get_payload
# Match: http.client.HTTPMessage.get_unixfrom: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.get_unixfrom == email.message.Message.get_unixfrom
# Match: http.client.HTTPMessage.is_multipart: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.is_multipart == email.message.Message.is_multipart
# Match: http.client.HTTPMessage.items: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.items == email.message.Message.items
# Match: http.client.HTTPMessage.keys: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.keys == email.message.Message.keys
# Match: http.client.HTTPMessage.raw_items: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.raw_items == email.message.Message.raw_items
# Match: http.client.HTTPMessage.replace_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.replace_header == email.message.Message.replace_header
# Match: http.client.HTTPMessage.set_boundary: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.set_boundary == email.message.Message.set_boundary
# Match: http.client.HTTPMessage.set_charset: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.set_charset == email.message.Message.set_charset
# Match: http.client.HTTPMessage.set_default_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.set_default_type == email.message.Message.set_default_type
# Match: http.client.HTTPMessage.set_param: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.set_param == email.message.Message.set_param
# Match: http.client.HTTPMessage.set_payload: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.set_payload == email.message.Message.set_payload
# Match: http.client.HTTPMessage.set_raw: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.set_raw == email.message.Message.set_raw
# Match: http.client.HTTPMessage.set_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.set_type == email.message.Message.set_type
# Match: http.client.HTTPMessage.set_unixfrom: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.set_unixfrom == email.message.Message.set_unixfrom
# Match: http.client.HTTPMessage.values: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.values == email.message.Message.values
# Match: http.client.HTTPMessage.walk: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.walk == email.iterators.walk

# ---- Search class `http.client.HTTPMessage` ----
# Match: http.client.HTTPMessage.getallmatchingheaders: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPMessage.getallmatchingheaders

# ---- Wrap class `http.client.HTTPMessage`'s attributes ----
@: http.client.HTTPMessage.__init__ == email.message.Message.__init__
@: http.client.HTTPMessage.__setattr__ == builtins.object.__setattr__
@: http.client.HTTPMessage._get_params_preserve == email.message.Message._get_params_preserve
@: http.client.HTTPMessage.add_header == email.message.Message.add_header
@: http.client.HTTPMessage.as_bytes == email.message.Message.as_bytes
@: http.client.HTTPMessage.as_string == email.message.Message.as_string
@: http.client.HTTPMessage.attach == email.message.Message.attach
@: http.client.HTTPMessage.del_param == email.message.Message.del_param
@: http.client.HTTPMessage.get == email.message.Message.get
@: http.client.HTTPMessage.get_all == email.message.Message.get_all
@: http.client.HTTPMessage.get_boundary == email.message.Message.get_boundary
@: http.client.HTTPMessage.get_charset == email.message.Message.get_charset
@: http.client.HTTPMessage.get_charsets == email.message.Message.get_charsets
@: http.client.HTTPMessage.get_content_charset == email.message.Message.get_content_charset
@: http.client.HTTPMessage.get_content_disposition == email.message.Message.get_content_disposition
@: http.client.HTTPMessage.get_content_maintype == email.message.Message.get_content_maintype
@: http.client.HTTPMessage.get_content_subtype == email.message.Message.get_content_subtype
@: http.client.HTTPMessage.get_content_type == email.message.Message.get_content_type
@: http.client.HTTPMessage.get_default_type == email.message.Message.get_default_type
@: http.client.HTTPMessage.get_filename == email.message.Message.get_filename
@: http.client.HTTPMessage.get_param == email.message.Message.get_param
@: http.client.HTTPMessage.get_params == email.message.Message.get_params
@: http.client.HTTPMessage.get_payload == email.message.Message.get_payload
@: http.client.HTTPMessage.get_unixfrom == email.message.Message.get_unixfrom
@: http.client.HTTPMessage.getallmatchingheaders
@: http.client.HTTPMessage.is_multipart == email.message.Message.is_multipart
@: http.client.HTTPMessage.items == email.message.Message.items
@: http.client.HTTPMessage.keys == email.message.Message.keys
@: http.client.HTTPMessage.raw_items == email.message.Message.raw_items
@: http.client.HTTPMessage.replace_header == email.message.Message.replace_header
@: http.client.HTTPMessage.set_boundary == email.message.Message.set_boundary
@: http.client.HTTPMessage.set_charset == email.message.Message.set_charset
@: http.client.HTTPMessage.set_default_type == email.message.Message.set_default_type
@: http.client.HTTPMessage.set_param == email.message.Message.set_param
@: http.client.HTTPMessage.set_payload == email.message.Message.set_payload
@: http.client.HTTPMessage.set_raw == email.message.Message.set_raw
@: http.client.HTTPMessage.set_type == email.message.Message.set_type
@: http.client.HTTPMessage.set_unixfrom == email.message.Message.set_unixfrom
@: http.client.HTTPMessage.values == email.message.Message.values
@: http.client.HTTPMessage.walk == email.iterators.walk
# ===== Process class `http.client.HTTPMessage` =====


# ----- Process callable `http.client.urlsplit` -----
!: http.client.urlsplit == urllib.parse.urlsplit

# ----- Process class `http.client.ResponseNotReady` -----

# ----- Process class `http.client.RemoteDisconnected` -----

# ----- Process class `http.client.BadStatusLine` -----

# ----- Process class `http.client.error` -----

# ----- Process callable `http.client.parse_headers` -----
# Match: http.client.parse_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.parse_headers

# ----- Process class `http.client.UnimplementedFileMode` -----

# ----- Process class `http.client.CannotSendRequest` -----

# ----- Process class `http.client.HTTPResponse` -----
# Match: http.client.HTTPResponse: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.client.HTTPResponse
# ===== Process module `http.client` =====

                + T0 + * mimetypes +
                - T0 - * mimetypes -

# ----- Process module `mimetypes` -----
# Match: mimetypes: None
!: mimetypes
                + T0 + * socketserver +
                - T0 - * socketserver -

# ----- Process module `socketserver` -----
# Match: socketserver: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver

# ----- Process class `socketserver.ForkingTCPServer` -----
# Match: socketserver.ForkingTCPServer: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer

# ---- Search base class `builtins.object` ----
# Match: socketserver.ForkingTCPServer.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__delattr__ == builtins.object.__delattr__
# Match: socketserver.ForkingTCPServer.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__dir__ == builtins.object.__dir__
# Match: socketserver.ForkingTCPServer.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__eq__ == builtins.object.__eq__
# Match: socketserver.ForkingTCPServer.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__format__ == builtins.object.__format__
# Match: socketserver.ForkingTCPServer.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__ge__ == builtins.object.__ge__
# Match: socketserver.ForkingTCPServer.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.ForkingTCPServer.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__gt__ == builtins.object.__gt__
# Match: socketserver.ForkingTCPServer.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__hash__ == builtins.object.__hash__
# Match: socketserver.ForkingTCPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.__init__ == builtins.object.__init__
# Match: socketserver.ForkingTCPServer.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__le__ == builtins.object.__le__
# Match: socketserver.ForkingTCPServer.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__lt__ == builtins.object.__lt__
# Match: socketserver.ForkingTCPServer.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__ne__ == builtins.object.__ne__
# Match: socketserver.ForkingTCPServer.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__new__ == builtins.object.__new__
# Match: socketserver.ForkingTCPServer.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__reduce__ == builtins.object.__reduce__
# Match: socketserver.ForkingTCPServer.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.ForkingTCPServer.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__repr__ == builtins.object.__repr__
# Match: socketserver.ForkingTCPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ForkingTCPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ForkingTCPServer.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.ForkingTCPServer.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__str__ == builtins.object.__str__
# Match: socketserver.ForkingTCPServer.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingTCPServer.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseServer` ----
# Match: socketserver.ForkingTCPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.__init__ == socketserver.BaseServer.__init__
# Match: socketserver.ForkingTCPServer._handle_request_noblock: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: socketserver.ForkingTCPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.close_request == socketserver.BaseServer.close_request
# Match: socketserver.ForkingTCPServer.finish_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.finish_request == socketserver.BaseServer.finish_request
# Match: socketserver.ForkingTCPServer.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.handle_error == socketserver.BaseServer.handle_error
# Match: socketserver.ForkingTCPServer.handle_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.handle_request == socketserver.BaseServer.handle_request
# Match: socketserver.ForkingTCPServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: socketserver.ForkingTCPServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.process_request == socketserver.BaseServer.process_request
# Match: socketserver.ForkingTCPServer.serve_forever: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: socketserver.ForkingTCPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.server_activate == socketserver.BaseServer.server_activate
# Match: socketserver.ForkingTCPServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.server_close == socketserver.BaseServer.server_close
# Match: socketserver.ForkingTCPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]service_actions'}
!: socketserver.ForkingTCPServer.service_actions == socketserver.BaseServer.service_actions
# Match: socketserver.ForkingTCPServer.shutdown: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.shutdown == socketserver.BaseServer.shutdown
# Match: socketserver.ForkingTCPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.shutdown_request == socketserver.BaseServer.shutdown_request
# Match: socketserver.ForkingTCPServer.verify_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `socketserver.TCPServer` ----
# Match: socketserver.ForkingTCPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.__init__ == socketserver.TCPServer.__init__
# Match: socketserver.ForkingTCPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.close_request == socketserver.TCPServer.close_request
# Match: socketserver.ForkingTCPServer.fileno: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.fileno == socketserver.TCPServer.fileno
# Match: socketserver.ForkingTCPServer.get_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.get_request == socketserver.TCPServer.get_request
# Match: socketserver.ForkingTCPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.server_activate == socketserver.TCPServer.server_activate
# Match: socketserver.ForkingTCPServer.server_bind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.server_bind == socketserver.TCPServer.server_bind
# Match: socketserver.ForkingTCPServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.server_close == socketserver.TCPServer.server_close
# Match: socketserver.ForkingTCPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.shutdown_request == socketserver.TCPServer.shutdown_request

# ---- Search base class `socketserver.ForkingMixIn` ----
# Match: socketserver.ForkingTCPServer.collect_children: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.collect_children == socketserver.ForkingMixIn.collect_children
# Match: socketserver.ForkingTCPServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.handle_timeout == socketserver.ForkingMixIn.handle_timeout
# Match: socketserver.ForkingTCPServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.process_request == socketserver.ForkingMixIn.process_request
# Match: socketserver.ForkingTCPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]service_actions'}
!: socketserver.ForkingTCPServer.service_actions == socketserver.ForkingMixIn.service_actions

# ---- Search class `socketserver.ForkingTCPServer` ----

# ---- Wrap class `socketserver.ForkingTCPServer`'s attributes ----
@: socketserver.ForkingTCPServer.__init__ == socketserver.TCPServer.__init__
@: socketserver.ForkingTCPServer.__setattr__ == builtins.object.__setattr__
@: socketserver.ForkingTCPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
@: socketserver.ForkingTCPServer.close_request == socketserver.TCPServer.close_request
@: socketserver.ForkingTCPServer.collect_children == socketserver.ForkingMixIn.collect_children
@: socketserver.ForkingTCPServer.fileno == socketserver.TCPServer.fileno
@: socketserver.ForkingTCPServer.finish_request == socketserver.BaseServer.finish_request
@: socketserver.ForkingTCPServer.get_request == socketserver.TCPServer.get_request
@: socketserver.ForkingTCPServer.handle_error == socketserver.BaseServer.handle_error
@: socketserver.ForkingTCPServer.handle_request == socketserver.BaseServer.handle_request
@: socketserver.ForkingTCPServer.handle_timeout == socketserver.ForkingMixIn.handle_timeout
@: socketserver.ForkingTCPServer.process_request == socketserver.ForkingMixIn.process_request
@: socketserver.ForkingTCPServer.serve_forever == socketserver.BaseServer.serve_forever
@: socketserver.ForkingTCPServer.server_activate == socketserver.TCPServer.server_activate
@: socketserver.ForkingTCPServer.server_bind == socketserver.TCPServer.server_bind
@: socketserver.ForkingTCPServer.server_close == socketserver.TCPServer.server_close
@: socketserver.ForkingTCPServer.shutdown == socketserver.BaseServer.shutdown
@: socketserver.ForkingTCPServer.shutdown_request == socketserver.TCPServer.shutdown_request
@: socketserver.ForkingTCPServer.verify_request == socketserver.BaseServer.verify_request
# ===== Process class `socketserver.ForkingTCPServer` =====


# ----- Process class `socketserver.StreamRequestHandler` -----
# Match: socketserver.StreamRequestHandler: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.StreamRequestHandler

# ---- Search base class `builtins.object` ----
# Match: socketserver.StreamRequestHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__delattr__ == builtins.object.__delattr__
# Match: socketserver.StreamRequestHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__dir__ == builtins.object.__dir__
# Match: socketserver.StreamRequestHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__eq__ == builtins.object.__eq__
# Match: socketserver.StreamRequestHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__format__ == builtins.object.__format__
# Match: socketserver.StreamRequestHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__ge__ == builtins.object.__ge__
# Match: socketserver.StreamRequestHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.StreamRequestHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__gt__ == builtins.object.__gt__
# Match: socketserver.StreamRequestHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__hash__ == builtins.object.__hash__
# Match: socketserver.StreamRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.StreamRequestHandler.__init__ == builtins.object.__init__
# Match: socketserver.StreamRequestHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__le__ == builtins.object.__le__
# Match: socketserver.StreamRequestHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__lt__ == builtins.object.__lt__
# Match: socketserver.StreamRequestHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__ne__ == builtins.object.__ne__
# Match: socketserver.StreamRequestHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__new__ == builtins.object.__new__
# Match: socketserver.StreamRequestHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__reduce__ == builtins.object.__reduce__
# Match: socketserver.StreamRequestHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.StreamRequestHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__repr__ == builtins.object.__repr__
# Match: socketserver.StreamRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.StreamRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: socketserver.StreamRequestHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.StreamRequestHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__str__ == builtins.object.__str__
# Match: socketserver.StreamRequestHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.StreamRequestHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseRequestHandler` ----
# Match: socketserver.StreamRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.StreamRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
# Match: socketserver.StreamRequestHandler.finish: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.StreamRequestHandler.finish == socketserver.BaseRequestHandler.finish
# Match: socketserver.StreamRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.StreamRequestHandler.handle == socketserver.BaseRequestHandler.handle
# Match: socketserver.StreamRequestHandler.setup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.StreamRequestHandler.setup == socketserver.BaseRequestHandler.setup

# ---- Search class `socketserver.StreamRequestHandler` ----
# Match: socketserver.StreamRequestHandler.finish: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.StreamRequestHandler.finish
# Match: socketserver.StreamRequestHandler.setup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.StreamRequestHandler.setup

# ---- Wrap class `socketserver.StreamRequestHandler`'s attributes ----
@: socketserver.StreamRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
@: socketserver.StreamRequestHandler.__setattr__ == builtins.object.__setattr__
@: socketserver.StreamRequestHandler.finish
@: socketserver.StreamRequestHandler.handle == socketserver.BaseRequestHandler.handle
@: socketserver.StreamRequestHandler.setup
# ===== Process class `socketserver.StreamRequestHandler` =====


# ----- Process class `socketserver.UDPServer` -----
# Match: socketserver.UDPServer: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer

# ---- Search base class `builtins.object` ----
# Match: socketserver.UDPServer.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__delattr__ == builtins.object.__delattr__
# Match: socketserver.UDPServer.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__dir__ == builtins.object.__dir__
# Match: socketserver.UDPServer.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__eq__ == builtins.object.__eq__
# Match: socketserver.UDPServer.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__format__ == builtins.object.__format__
# Match: socketserver.UDPServer.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__ge__ == builtins.object.__ge__
# Match: socketserver.UDPServer.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.UDPServer.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__gt__ == builtins.object.__gt__
# Match: socketserver.UDPServer.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__hash__ == builtins.object.__hash__
# Match: socketserver.UDPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.__init__ == builtins.object.__init__
# Match: socketserver.UDPServer.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__le__ == builtins.object.__le__
# Match: socketserver.UDPServer.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__lt__ == builtins.object.__lt__
# Match: socketserver.UDPServer.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__ne__ == builtins.object.__ne__
# Match: socketserver.UDPServer.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__new__ == builtins.object.__new__
# Match: socketserver.UDPServer.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__reduce__ == builtins.object.__reduce__
# Match: socketserver.UDPServer.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.UDPServer.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__repr__ == builtins.object.__repr__
# Match: socketserver.UDPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.UDPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.UDPServer.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.UDPServer.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__str__ == builtins.object.__str__
# Match: socketserver.UDPServer.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.UDPServer.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseServer` ----
# Match: socketserver.UDPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.__init__ == socketserver.BaseServer.__init__
# Match: socketserver.UDPServer._handle_request_noblock: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: socketserver.UDPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.close_request == socketserver.BaseServer.close_request
# Match: socketserver.UDPServer.finish_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.finish_request == socketserver.BaseServer.finish_request
# Match: socketserver.UDPServer.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.handle_error == socketserver.BaseServer.handle_error
# Match: socketserver.UDPServer.handle_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.handle_request == socketserver.BaseServer.handle_request
# Match: socketserver.UDPServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: socketserver.UDPServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.process_request == socketserver.BaseServer.process_request
# Match: socketserver.UDPServer.serve_forever: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: socketserver.UDPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.server_activate == socketserver.BaseServer.server_activate
# Match: socketserver.UDPServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.server_close == socketserver.BaseServer.server_close
# Match: socketserver.UDPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]service_actions'}
!: socketserver.UDPServer.service_actions == socketserver.BaseServer.service_actions
# Match: socketserver.UDPServer.shutdown: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.shutdown == socketserver.BaseServer.shutdown
# Match: socketserver.UDPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.shutdown_request == socketserver.BaseServer.shutdown_request
# Match: socketserver.UDPServer.verify_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `socketserver.TCPServer` ----
# Match: socketserver.UDPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.__init__ == socketserver.TCPServer.__init__
# Match: socketserver.UDPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.close_request == socketserver.TCPServer.close_request
# Match: socketserver.UDPServer.fileno: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.fileno == socketserver.TCPServer.fileno
# Match: socketserver.UDPServer.get_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.get_request == socketserver.TCPServer.get_request
# Match: socketserver.UDPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.server_activate == socketserver.TCPServer.server_activate
# Match: socketserver.UDPServer.server_bind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.server_bind == socketserver.TCPServer.server_bind
# Match: socketserver.UDPServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.server_close == socketserver.TCPServer.server_close
# Match: socketserver.UDPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.shutdown_request == socketserver.TCPServer.shutdown_request

# ---- Search class `socketserver.UDPServer` ----
# Match: socketserver.UDPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.close_request
# Match: socketserver.UDPServer.get_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.get_request
# Match: socketserver.UDPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.server_activate
# Match: socketserver.UDPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.shutdown_request

# ---- Wrap class `socketserver.UDPServer`'s attributes ----
@: socketserver.UDPServer.__init__ == socketserver.TCPServer.__init__
@: socketserver.UDPServer.__setattr__ == builtins.object.__setattr__
@: socketserver.UDPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
@: socketserver.UDPServer.close_request
@: socketserver.UDPServer.fileno == socketserver.TCPServer.fileno
@: socketserver.UDPServer.finish_request == socketserver.BaseServer.finish_request
@: socketserver.UDPServer.get_request
@: socketserver.UDPServer.handle_error == socketserver.BaseServer.handle_error
@: socketserver.UDPServer.handle_request == socketserver.BaseServer.handle_request
@: socketserver.UDPServer.handle_timeout == socketserver.BaseServer.handle_timeout
@: socketserver.UDPServer.process_request == socketserver.BaseServer.process_request
@: socketserver.UDPServer.serve_forever == socketserver.BaseServer.serve_forever
@: socketserver.UDPServer.server_activate
@: socketserver.UDPServer.server_bind == socketserver.TCPServer.server_bind
@: socketserver.UDPServer.server_close == socketserver.TCPServer.server_close
@: socketserver.UDPServer.shutdown == socketserver.BaseServer.shutdown
@: socketserver.UDPServer.shutdown_request
@: socketserver.UDPServer.verify_request == socketserver.BaseServer.verify_request
# ===== Process class `socketserver.UDPServer` =====


# ----- Process class `socketserver.DatagramRequestHandler` -----
# Match: socketserver.DatagramRequestHandler: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.DatagramRequestHandler

# ---- Search base class `builtins.object` ----
# Match: socketserver.DatagramRequestHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__delattr__ == builtins.object.__delattr__
# Match: socketserver.DatagramRequestHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__dir__ == builtins.object.__dir__
# Match: socketserver.DatagramRequestHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__eq__ == builtins.object.__eq__
# Match: socketserver.DatagramRequestHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__format__ == builtins.object.__format__
# Match: socketserver.DatagramRequestHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__ge__ == builtins.object.__ge__
# Match: socketserver.DatagramRequestHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.DatagramRequestHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__gt__ == builtins.object.__gt__
# Match: socketserver.DatagramRequestHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__hash__ == builtins.object.__hash__
# Match: socketserver.DatagramRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.DatagramRequestHandler.__init__ == builtins.object.__init__
# Match: socketserver.DatagramRequestHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__le__ == builtins.object.__le__
# Match: socketserver.DatagramRequestHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__lt__ == builtins.object.__lt__
# Match: socketserver.DatagramRequestHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__ne__ == builtins.object.__ne__
# Match: socketserver.DatagramRequestHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__new__ == builtins.object.__new__
# Match: socketserver.DatagramRequestHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__reduce__ == builtins.object.__reduce__
# Match: socketserver.DatagramRequestHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.DatagramRequestHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__repr__ == builtins.object.__repr__
# Match: socketserver.DatagramRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.DatagramRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: socketserver.DatagramRequestHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.DatagramRequestHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__str__ == builtins.object.__str__
# Match: socketserver.DatagramRequestHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.DatagramRequestHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseRequestHandler` ----
# Match: socketserver.DatagramRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.DatagramRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
# Match: socketserver.DatagramRequestHandler.finish: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.DatagramRequestHandler.finish == socketserver.BaseRequestHandler.finish
# Match: socketserver.DatagramRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.DatagramRequestHandler.handle == socketserver.BaseRequestHandler.handle
# Match: socketserver.DatagramRequestHandler.setup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.DatagramRequestHandler.setup == socketserver.BaseRequestHandler.setup

# ---- Search class `socketserver.DatagramRequestHandler` ----
# Match: socketserver.DatagramRequestHandler.finish: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.DatagramRequestHandler.finish
# Match: socketserver.DatagramRequestHandler.setup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.DatagramRequestHandler.setup

# ---- Wrap class `socketserver.DatagramRequestHandler`'s attributes ----
@: socketserver.DatagramRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
@: socketserver.DatagramRequestHandler.__setattr__ == builtins.object.__setattr__
@: socketserver.DatagramRequestHandler.finish
@: socketserver.DatagramRequestHandler.handle == socketserver.BaseRequestHandler.handle
@: socketserver.DatagramRequestHandler.setup
# ===== Process class `socketserver.DatagramRequestHandler` =====


# ----- Process class `socketserver.ThreadingMixIn` -----
# Match: socketserver.ThreadingMixIn: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingMixIn

# ---- Search base class `builtins.object` ----
# Match: socketserver.ThreadingMixIn.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__delattr__ == builtins.object.__delattr__
# Match: socketserver.ThreadingMixIn.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__dir__ == builtins.object.__dir__
# Match: socketserver.ThreadingMixIn.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__eq__ == builtins.object.__eq__
# Match: socketserver.ThreadingMixIn.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__format__ == builtins.object.__format__
# Match: socketserver.ThreadingMixIn.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__ge__ == builtins.object.__ge__
# Match: socketserver.ThreadingMixIn.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.ThreadingMixIn.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__gt__ == builtins.object.__gt__
# Match: socketserver.ThreadingMixIn.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__hash__ == builtins.object.__hash__
# Match: socketserver.ThreadingMixIn.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingMixIn.__init__ == builtins.object.__init__
# Match: socketserver.ThreadingMixIn.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__le__ == builtins.object.__le__
# Match: socketserver.ThreadingMixIn.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__lt__ == builtins.object.__lt__
# Match: socketserver.ThreadingMixIn.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__ne__ == builtins.object.__ne__
# Match: socketserver.ThreadingMixIn.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__new__ == builtins.object.__new__
# Match: socketserver.ThreadingMixIn.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__reduce__ == builtins.object.__reduce__
# Match: socketserver.ThreadingMixIn.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.ThreadingMixIn.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__repr__ == builtins.object.__repr__
# Match: socketserver.ThreadingMixIn.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ThreadingMixIn.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ThreadingMixIn.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.ThreadingMixIn.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__str__ == builtins.object.__str__
# Match: socketserver.ThreadingMixIn.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingMixIn.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `socketserver.ThreadingMixIn` ----
# Match: socketserver.ThreadingMixIn.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingMixIn.process_request
# Match: socketserver.ThreadingMixIn.process_request_thread: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingMixIn.process_request_thread

# ---- Wrap class `socketserver.ThreadingMixIn`'s attributes ----
@: socketserver.ThreadingMixIn.__init__ == builtins.object.__init__
@: socketserver.ThreadingMixIn.__setattr__ == builtins.object.__setattr__
@: socketserver.ThreadingMixIn.process_request
@: socketserver.ThreadingMixIn.process_request_thread
# ===== Process class `socketserver.ThreadingMixIn` =====


# ----- Process class `socketserver.ForkingUDPServer` -----
# Match: socketserver.ForkingUDPServer: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer

# ---- Search base class `builtins.object` ----
# Match: socketserver.ForkingUDPServer.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__delattr__ == builtins.object.__delattr__
# Match: socketserver.ForkingUDPServer.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__dir__ == builtins.object.__dir__
# Match: socketserver.ForkingUDPServer.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__eq__ == builtins.object.__eq__
# Match: socketserver.ForkingUDPServer.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__format__ == builtins.object.__format__
# Match: socketserver.ForkingUDPServer.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__ge__ == builtins.object.__ge__
# Match: socketserver.ForkingUDPServer.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.ForkingUDPServer.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__gt__ == builtins.object.__gt__
# Match: socketserver.ForkingUDPServer.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__hash__ == builtins.object.__hash__
# Match: socketserver.ForkingUDPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.__init__ == builtins.object.__init__
# Match: socketserver.ForkingUDPServer.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__le__ == builtins.object.__le__
# Match: socketserver.ForkingUDPServer.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__lt__ == builtins.object.__lt__
# Match: socketserver.ForkingUDPServer.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__ne__ == builtins.object.__ne__
# Match: socketserver.ForkingUDPServer.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__new__ == builtins.object.__new__
# Match: socketserver.ForkingUDPServer.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__reduce__ == builtins.object.__reduce__
# Match: socketserver.ForkingUDPServer.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.ForkingUDPServer.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__repr__ == builtins.object.__repr__
# Match: socketserver.ForkingUDPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ForkingUDPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ForkingUDPServer.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.ForkingUDPServer.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__str__ == builtins.object.__str__
# Match: socketserver.ForkingUDPServer.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingUDPServer.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseServer` ----
# Match: socketserver.ForkingUDPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.__init__ == socketserver.BaseServer.__init__
# Match: socketserver.ForkingUDPServer._handle_request_noblock: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: socketserver.ForkingUDPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.close_request == socketserver.BaseServer.close_request
# Match: socketserver.ForkingUDPServer.finish_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.finish_request == socketserver.BaseServer.finish_request
# Match: socketserver.ForkingUDPServer.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.handle_error == socketserver.BaseServer.handle_error
# Match: socketserver.ForkingUDPServer.handle_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.handle_request == socketserver.BaseServer.handle_request
# Match: socketserver.ForkingUDPServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: socketserver.ForkingUDPServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.process_request == socketserver.BaseServer.process_request
# Match: socketserver.ForkingUDPServer.serve_forever: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: socketserver.ForkingUDPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.server_activate == socketserver.BaseServer.server_activate
# Match: socketserver.ForkingUDPServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.server_close == socketserver.BaseServer.server_close
# Match: socketserver.ForkingUDPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]service_actions'}
!: socketserver.ForkingUDPServer.service_actions == socketserver.BaseServer.service_actions
# Match: socketserver.ForkingUDPServer.shutdown: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.shutdown == socketserver.BaseServer.shutdown
# Match: socketserver.ForkingUDPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.shutdown_request == socketserver.BaseServer.shutdown_request
# Match: socketserver.ForkingUDPServer.verify_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `socketserver.TCPServer` ----
# Match: socketserver.ForkingUDPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.__init__ == socketserver.TCPServer.__init__
# Match: socketserver.ForkingUDPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.close_request == socketserver.TCPServer.close_request
# Match: socketserver.ForkingUDPServer.fileno: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.fileno == socketserver.TCPServer.fileno
# Match: socketserver.ForkingUDPServer.get_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.get_request == socketserver.TCPServer.get_request
# Match: socketserver.ForkingUDPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.server_activate == socketserver.TCPServer.server_activate
# Match: socketserver.ForkingUDPServer.server_bind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.server_bind == socketserver.TCPServer.server_bind
# Match: socketserver.ForkingUDPServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.server_close == socketserver.TCPServer.server_close
# Match: socketserver.ForkingUDPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.shutdown_request == socketserver.TCPServer.shutdown_request

# ---- Search base class `socketserver.UDPServer` ----
# Match: socketserver.ForkingUDPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.__init__ == socketserver.TCPServer.__init__
# Match: socketserver.ForkingUDPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ForkingUDPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ForkingUDPServer._handle_request_noblock: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: socketserver.ForkingUDPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.close_request == socketserver.UDPServer.close_request
# Match: socketserver.ForkingUDPServer.fileno: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.fileno == socketserver.TCPServer.fileno
# Match: socketserver.ForkingUDPServer.finish_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.finish_request == socketserver.BaseServer.finish_request
# Match: socketserver.ForkingUDPServer.get_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.get_request == socketserver.UDPServer.get_request
# Match: socketserver.ForkingUDPServer.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.handle_error == socketserver.BaseServer.handle_error
# Match: socketserver.ForkingUDPServer.handle_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.handle_request == socketserver.BaseServer.handle_request
# Match: socketserver.ForkingUDPServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: socketserver.ForkingUDPServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.process_request == socketserver.BaseServer.process_request
# Match: socketserver.ForkingUDPServer.serve_forever: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: socketserver.ForkingUDPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.server_activate == socketserver.UDPServer.server_activate
# Match: socketserver.ForkingUDPServer.server_bind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.server_bind == socketserver.TCPServer.server_bind
# Match: socketserver.ForkingUDPServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.server_close == socketserver.TCPServer.server_close
# Match: socketserver.ForkingUDPServer.shutdown: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.shutdown == socketserver.BaseServer.shutdown
# Match: socketserver.ForkingUDPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.shutdown_request == socketserver.UDPServer.shutdown_request
# Match: socketserver.ForkingUDPServer.verify_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `socketserver.ForkingMixIn` ----
# Match: socketserver.ForkingUDPServer.collect_children: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.collect_children == socketserver.ForkingMixIn.collect_children
# Match: socketserver.ForkingUDPServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.handle_timeout == socketserver.ForkingMixIn.handle_timeout
# Match: socketserver.ForkingUDPServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.process_request == socketserver.ForkingMixIn.process_request
# Match: socketserver.ForkingUDPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]service_actions'}
!: socketserver.ForkingUDPServer.service_actions == socketserver.ForkingMixIn.service_actions

# ---- Search class `socketserver.ForkingUDPServer` ----

# ---- Wrap class `socketserver.ForkingUDPServer`'s attributes ----
@: socketserver.ForkingUDPServer.__init__ == socketserver.TCPServer.__init__
@: socketserver.ForkingUDPServer.__setattr__ == builtins.object.__setattr__
@: socketserver.ForkingUDPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
@: socketserver.ForkingUDPServer.close_request == socketserver.UDPServer.close_request
@: socketserver.ForkingUDPServer.collect_children == socketserver.ForkingMixIn.collect_children
@: socketserver.ForkingUDPServer.fileno == socketserver.TCPServer.fileno
@: socketserver.ForkingUDPServer.finish_request == socketserver.BaseServer.finish_request
@: socketserver.ForkingUDPServer.get_request == socketserver.UDPServer.get_request
@: socketserver.ForkingUDPServer.handle_error == socketserver.BaseServer.handle_error
@: socketserver.ForkingUDPServer.handle_request == socketserver.BaseServer.handle_request
@: socketserver.ForkingUDPServer.handle_timeout == socketserver.ForkingMixIn.handle_timeout
@: socketserver.ForkingUDPServer.process_request == socketserver.ForkingMixIn.process_request
@: socketserver.ForkingUDPServer.serve_forever == socketserver.BaseServer.serve_forever
@: socketserver.ForkingUDPServer.server_activate == socketserver.UDPServer.server_activate
@: socketserver.ForkingUDPServer.server_bind == socketserver.TCPServer.server_bind
@: socketserver.ForkingUDPServer.server_close == socketserver.TCPServer.server_close
@: socketserver.ForkingUDPServer.shutdown == socketserver.BaseServer.shutdown
@: socketserver.ForkingUDPServer.shutdown_request == socketserver.UDPServer.shutdown_request
@: socketserver.ForkingUDPServer.verify_request == socketserver.BaseServer.verify_request
# ===== Process class `socketserver.ForkingUDPServer` =====


# ----- Process class `socketserver.ForkingMixIn` -----
# Match: socketserver.ForkingMixIn: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingMixIn

# ---- Search base class `builtins.object` ----
# Match: socketserver.ForkingMixIn.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__delattr__ == builtins.object.__delattr__
# Match: socketserver.ForkingMixIn.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__dir__ == builtins.object.__dir__
# Match: socketserver.ForkingMixIn.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__eq__ == builtins.object.__eq__
# Match: socketserver.ForkingMixIn.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__format__ == builtins.object.__format__
# Match: socketserver.ForkingMixIn.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__ge__ == builtins.object.__ge__
# Match: socketserver.ForkingMixIn.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.ForkingMixIn.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__gt__ == builtins.object.__gt__
# Match: socketserver.ForkingMixIn.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__hash__ == builtins.object.__hash__
# Match: socketserver.ForkingMixIn.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingMixIn.__init__ == builtins.object.__init__
# Match: socketserver.ForkingMixIn.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__le__ == builtins.object.__le__
# Match: socketserver.ForkingMixIn.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__lt__ == builtins.object.__lt__
# Match: socketserver.ForkingMixIn.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__ne__ == builtins.object.__ne__
# Match: socketserver.ForkingMixIn.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__new__ == builtins.object.__new__
# Match: socketserver.ForkingMixIn.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__reduce__ == builtins.object.__reduce__
# Match: socketserver.ForkingMixIn.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.ForkingMixIn.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__repr__ == builtins.object.__repr__
# Match: socketserver.ForkingMixIn.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ForkingMixIn.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ForkingMixIn.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.ForkingMixIn.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__str__ == builtins.object.__str__
# Match: socketserver.ForkingMixIn.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ForkingMixIn.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `socketserver.ForkingMixIn` ----
# Match: socketserver.ForkingMixIn.collect_children: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingMixIn.collect_children
# Match: socketserver.ForkingMixIn.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingMixIn.handle_timeout
# Match: socketserver.ForkingMixIn.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingMixIn.process_request
# Match: socketserver.ForkingMixIn.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]service_actions'}
!: socketserver.ForkingMixIn.service_actions

# ---- Wrap class `socketserver.ForkingMixIn`'s attributes ----
@: socketserver.ForkingMixIn.__init__ == builtins.object.__init__
@: socketserver.ForkingMixIn.__setattr__ == builtins.object.__setattr__
@: socketserver.ForkingMixIn.collect_children
@: socketserver.ForkingMixIn.handle_timeout
@: socketserver.ForkingMixIn.process_request
# ===== Process class `socketserver.ForkingMixIn` =====


# ----- Process class `socketserver.ThreadingTCPServer` -----
# Match: socketserver.ThreadingTCPServer: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer

# ---- Search base class `builtins.object` ----
# Match: socketserver.ThreadingTCPServer.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__delattr__ == builtins.object.__delattr__
# Match: socketserver.ThreadingTCPServer.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__dir__ == builtins.object.__dir__
# Match: socketserver.ThreadingTCPServer.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__eq__ == builtins.object.__eq__
# Match: socketserver.ThreadingTCPServer.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__format__ == builtins.object.__format__
# Match: socketserver.ThreadingTCPServer.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__ge__ == builtins.object.__ge__
# Match: socketserver.ThreadingTCPServer.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.ThreadingTCPServer.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__gt__ == builtins.object.__gt__
# Match: socketserver.ThreadingTCPServer.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__hash__ == builtins.object.__hash__
# Match: socketserver.ThreadingTCPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.__init__ == builtins.object.__init__
# Match: socketserver.ThreadingTCPServer.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__le__ == builtins.object.__le__
# Match: socketserver.ThreadingTCPServer.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__lt__ == builtins.object.__lt__
# Match: socketserver.ThreadingTCPServer.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__ne__ == builtins.object.__ne__
# Match: socketserver.ThreadingTCPServer.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__new__ == builtins.object.__new__
# Match: socketserver.ThreadingTCPServer.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__reduce__ == builtins.object.__reduce__
# Match: socketserver.ThreadingTCPServer.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.ThreadingTCPServer.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__repr__ == builtins.object.__repr__
# Match: socketserver.ThreadingTCPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ThreadingTCPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ThreadingTCPServer.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.ThreadingTCPServer.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__str__ == builtins.object.__str__
# Match: socketserver.ThreadingTCPServer.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingTCPServer.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseServer` ----
# Match: socketserver.ThreadingTCPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.__init__ == socketserver.BaseServer.__init__
# Match: socketserver.ThreadingTCPServer._handle_request_noblock: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: socketserver.ThreadingTCPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.close_request == socketserver.BaseServer.close_request
# Match: socketserver.ThreadingTCPServer.finish_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.finish_request == socketserver.BaseServer.finish_request
# Match: socketserver.ThreadingTCPServer.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.handle_error == socketserver.BaseServer.handle_error
# Match: socketserver.ThreadingTCPServer.handle_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.handle_request == socketserver.BaseServer.handle_request
# Match: socketserver.ThreadingTCPServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: socketserver.ThreadingTCPServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.process_request == socketserver.BaseServer.process_request
# Match: socketserver.ThreadingTCPServer.serve_forever: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: socketserver.ThreadingTCPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.server_activate == socketserver.BaseServer.server_activate
# Match: socketserver.ThreadingTCPServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.server_close == socketserver.BaseServer.server_close
# Match: socketserver.ThreadingTCPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]service_actions'}
!: socketserver.ThreadingTCPServer.service_actions == socketserver.BaseServer.service_actions
# Match: socketserver.ThreadingTCPServer.shutdown: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.shutdown == socketserver.BaseServer.shutdown
# Match: socketserver.ThreadingTCPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.shutdown_request == socketserver.BaseServer.shutdown_request
# Match: socketserver.ThreadingTCPServer.verify_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `socketserver.TCPServer` ----
# Match: socketserver.ThreadingTCPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.__init__ == socketserver.TCPServer.__init__
# Match: socketserver.ThreadingTCPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.close_request == socketserver.TCPServer.close_request
# Match: socketserver.ThreadingTCPServer.fileno: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.fileno == socketserver.TCPServer.fileno
# Match: socketserver.ThreadingTCPServer.get_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.get_request == socketserver.TCPServer.get_request
# Match: socketserver.ThreadingTCPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.server_activate == socketserver.TCPServer.server_activate
# Match: socketserver.ThreadingTCPServer.server_bind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.server_bind == socketserver.TCPServer.server_bind
# Match: socketserver.ThreadingTCPServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.server_close == socketserver.TCPServer.server_close
# Match: socketserver.ThreadingTCPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.shutdown_request == socketserver.TCPServer.shutdown_request

# ---- Search base class `socketserver.ThreadingMixIn` ----
# Match: socketserver.ThreadingTCPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.__init__ == builtins.object.__init__
# Match: socketserver.ThreadingTCPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ThreadingTCPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ThreadingTCPServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.process_request == socketserver.ThreadingMixIn.process_request
# Match: socketserver.ThreadingTCPServer.process_request_thread: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.process_request_thread == socketserver.ThreadingMixIn.process_request_thread

# ---- Search class `socketserver.ThreadingTCPServer` ----

# ---- Wrap class `socketserver.ThreadingTCPServer`'s attributes ----
@: socketserver.ThreadingTCPServer.__init__ == builtins.object.__init__
@: socketserver.ThreadingTCPServer.__setattr__ == builtins.object.__setattr__
@: socketserver.ThreadingTCPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
@: socketserver.ThreadingTCPServer.close_request == socketserver.TCPServer.close_request
@: socketserver.ThreadingTCPServer.fileno == socketserver.TCPServer.fileno
@: socketserver.ThreadingTCPServer.finish_request == socketserver.BaseServer.finish_request
@: socketserver.ThreadingTCPServer.get_request == socketserver.TCPServer.get_request
@: socketserver.ThreadingTCPServer.handle_error == socketserver.BaseServer.handle_error
@: socketserver.ThreadingTCPServer.handle_request == socketserver.BaseServer.handle_request
@: socketserver.ThreadingTCPServer.handle_timeout == socketserver.BaseServer.handle_timeout
@: socketserver.ThreadingTCPServer.process_request == socketserver.ThreadingMixIn.process_request
@: socketserver.ThreadingTCPServer.process_request_thread == socketserver.ThreadingMixIn.process_request_thread
@: socketserver.ThreadingTCPServer.serve_forever == socketserver.BaseServer.serve_forever
@: socketserver.ThreadingTCPServer.server_activate == socketserver.TCPServer.server_activate
@: socketserver.ThreadingTCPServer.server_bind == socketserver.TCPServer.server_bind
@: socketserver.ThreadingTCPServer.server_close == socketserver.TCPServer.server_close
@: socketserver.ThreadingTCPServer.shutdown == socketserver.BaseServer.shutdown
@: socketserver.ThreadingTCPServer.shutdown_request == socketserver.TCPServer.shutdown_request
@: socketserver.ThreadingTCPServer.verify_request == socketserver.BaseServer.verify_request
# ===== Process class `socketserver.ThreadingTCPServer` =====


# ----- Process class `socketserver._ServerSelector` -----
!: socketserver._ServerSelector == selectors._ServerSelector

# ----- Process class `socketserver.TCPServer` -----
# Match: socketserver.TCPServer: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer

# ---- Search base class `builtins.object` ----
# Match: socketserver.TCPServer.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__delattr__ == builtins.object.__delattr__
# Match: socketserver.TCPServer.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__dir__ == builtins.object.__dir__
# Match: socketserver.TCPServer.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__eq__ == builtins.object.__eq__
# Match: socketserver.TCPServer.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__format__ == builtins.object.__format__
# Match: socketserver.TCPServer.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__ge__ == builtins.object.__ge__
# Match: socketserver.TCPServer.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.TCPServer.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__gt__ == builtins.object.__gt__
# Match: socketserver.TCPServer.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__hash__ == builtins.object.__hash__
# Match: socketserver.TCPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.__init__ == builtins.object.__init__
# Match: socketserver.TCPServer.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__le__ == builtins.object.__le__
# Match: socketserver.TCPServer.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__lt__ == builtins.object.__lt__
# Match: socketserver.TCPServer.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__ne__ == builtins.object.__ne__
# Match: socketserver.TCPServer.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__new__ == builtins.object.__new__
# Match: socketserver.TCPServer.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__reduce__ == builtins.object.__reduce__
# Match: socketserver.TCPServer.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.TCPServer.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__repr__ == builtins.object.__repr__
# Match: socketserver.TCPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.TCPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.TCPServer.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.TCPServer.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__str__ == builtins.object.__str__
# Match: socketserver.TCPServer.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.TCPServer.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseServer` ----
# Match: socketserver.TCPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.__init__ == socketserver.BaseServer.__init__
# Match: socketserver.TCPServer._handle_request_noblock: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: socketserver.TCPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.close_request == socketserver.BaseServer.close_request
# Match: socketserver.TCPServer.finish_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.finish_request == socketserver.BaseServer.finish_request
# Match: socketserver.TCPServer.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.handle_error == socketserver.BaseServer.handle_error
# Match: socketserver.TCPServer.handle_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.handle_request == socketserver.BaseServer.handle_request
# Match: socketserver.TCPServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: socketserver.TCPServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.process_request == socketserver.BaseServer.process_request
# Match: socketserver.TCPServer.serve_forever: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: socketserver.TCPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.server_activate == socketserver.BaseServer.server_activate
# Match: socketserver.TCPServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.server_close == socketserver.BaseServer.server_close
# Match: socketserver.TCPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]service_actions'}
!: socketserver.TCPServer.service_actions == socketserver.BaseServer.service_actions
# Match: socketserver.TCPServer.shutdown: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.shutdown == socketserver.BaseServer.shutdown
# Match: socketserver.TCPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.shutdown_request == socketserver.BaseServer.shutdown_request
# Match: socketserver.TCPServer.verify_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search class `socketserver.TCPServer` ----
# Match: socketserver.TCPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.__init__
# Match: socketserver.TCPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.close_request
# Match: socketserver.TCPServer.fileno: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.fileno
# Match: socketserver.TCPServer.get_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.get_request
# Match: socketserver.TCPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.server_activate
# Match: socketserver.TCPServer.server_bind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.server_bind
# Match: socketserver.TCPServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.server_close
# Match: socketserver.TCPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.shutdown_request

# ---- Wrap class `socketserver.TCPServer`'s attributes ----
@: socketserver.TCPServer.__init__
@: socketserver.TCPServer.__setattr__ == builtins.object.__setattr__
@: socketserver.TCPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
@: socketserver.TCPServer.close_request
@: socketserver.TCPServer.fileno
@: socketserver.TCPServer.finish_request == socketserver.BaseServer.finish_request
@: socketserver.TCPServer.get_request
@: socketserver.TCPServer.handle_error == socketserver.BaseServer.handle_error
@: socketserver.TCPServer.handle_request == socketserver.BaseServer.handle_request
@: socketserver.TCPServer.handle_timeout == socketserver.BaseServer.handle_timeout
@: socketserver.TCPServer.process_request == socketserver.BaseServer.process_request
@: socketserver.TCPServer.serve_forever == socketserver.BaseServer.serve_forever
@: socketserver.TCPServer.server_activate
@: socketserver.TCPServer.server_bind
@: socketserver.TCPServer.server_close
@: socketserver.TCPServer.shutdown == socketserver.BaseServer.shutdown
@: socketserver.TCPServer.shutdown_request
@: socketserver.TCPServer.verify_request == socketserver.BaseServer.verify_request
# ===== Process class `socketserver.TCPServer` =====


# ----- Process class `socketserver.BaseRequestHandler` -----
# Match: socketserver.BaseRequestHandler: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseRequestHandler

# ---- Search base class `builtins.object` ----
# Match: socketserver.BaseRequestHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__delattr__ == builtins.object.__delattr__
# Match: socketserver.BaseRequestHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__dir__ == builtins.object.__dir__
# Match: socketserver.BaseRequestHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__eq__ == builtins.object.__eq__
# Match: socketserver.BaseRequestHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__format__ == builtins.object.__format__
# Match: socketserver.BaseRequestHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__ge__ == builtins.object.__ge__
# Match: socketserver.BaseRequestHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.BaseRequestHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__gt__ == builtins.object.__gt__
# Match: socketserver.BaseRequestHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__hash__ == builtins.object.__hash__
# Match: socketserver.BaseRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseRequestHandler.__init__ == builtins.object.__init__
# Match: socketserver.BaseRequestHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__le__ == builtins.object.__le__
# Match: socketserver.BaseRequestHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__lt__ == builtins.object.__lt__
# Match: socketserver.BaseRequestHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__ne__ == builtins.object.__ne__
# Match: socketserver.BaseRequestHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__new__ == builtins.object.__new__
# Match: socketserver.BaseRequestHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__reduce__ == builtins.object.__reduce__
# Match: socketserver.BaseRequestHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.BaseRequestHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__repr__ == builtins.object.__repr__
# Match: socketserver.BaseRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.BaseRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: socketserver.BaseRequestHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.BaseRequestHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__str__ == builtins.object.__str__
# Match: socketserver.BaseRequestHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseRequestHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `socketserver.BaseRequestHandler` ----
# Match: socketserver.BaseRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseRequestHandler.__init__
# Match: socketserver.BaseRequestHandler.finish: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseRequestHandler.finish
# Match: socketserver.BaseRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseRequestHandler.handle
# Match: socketserver.BaseRequestHandler.setup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseRequestHandler.setup

# ---- Wrap class `socketserver.BaseRequestHandler`'s attributes ----
@: socketserver.BaseRequestHandler.__init__
@: socketserver.BaseRequestHandler.__setattr__ == builtins.object.__setattr__
@: socketserver.BaseRequestHandler.finish
@: socketserver.BaseRequestHandler.handle
@: socketserver.BaseRequestHandler.setup
# ===== Process class `socketserver.BaseRequestHandler` =====


# ----- Process class `socketserver.ThreadingUDPServer` -----
# Match: socketserver.ThreadingUDPServer: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer

# ---- Search base class `builtins.object` ----
# Match: socketserver.ThreadingUDPServer.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__delattr__ == builtins.object.__delattr__
# Match: socketserver.ThreadingUDPServer.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__dir__ == builtins.object.__dir__
# Match: socketserver.ThreadingUDPServer.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__eq__ == builtins.object.__eq__
# Match: socketserver.ThreadingUDPServer.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__format__ == builtins.object.__format__
# Match: socketserver.ThreadingUDPServer.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__ge__ == builtins.object.__ge__
# Match: socketserver.ThreadingUDPServer.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.ThreadingUDPServer.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__gt__ == builtins.object.__gt__
# Match: socketserver.ThreadingUDPServer.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__hash__ == builtins.object.__hash__
# Match: socketserver.ThreadingUDPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.__init__ == builtins.object.__init__
# Match: socketserver.ThreadingUDPServer.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__le__ == builtins.object.__le__
# Match: socketserver.ThreadingUDPServer.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__lt__ == builtins.object.__lt__
# Match: socketserver.ThreadingUDPServer.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__ne__ == builtins.object.__ne__
# Match: socketserver.ThreadingUDPServer.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__new__ == builtins.object.__new__
# Match: socketserver.ThreadingUDPServer.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__reduce__ == builtins.object.__reduce__
# Match: socketserver.ThreadingUDPServer.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.ThreadingUDPServer.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__repr__ == builtins.object.__repr__
# Match: socketserver.ThreadingUDPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ThreadingUDPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ThreadingUDPServer.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.ThreadingUDPServer.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__str__ == builtins.object.__str__
# Match: socketserver.ThreadingUDPServer.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.ThreadingUDPServer.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseServer` ----
# Match: socketserver.ThreadingUDPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.__init__ == socketserver.BaseServer.__init__
# Match: socketserver.ThreadingUDPServer._handle_request_noblock: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: socketserver.ThreadingUDPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.close_request == socketserver.BaseServer.close_request
# Match: socketserver.ThreadingUDPServer.finish_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.finish_request == socketserver.BaseServer.finish_request
# Match: socketserver.ThreadingUDPServer.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.handle_error == socketserver.BaseServer.handle_error
# Match: socketserver.ThreadingUDPServer.handle_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.handle_request == socketserver.BaseServer.handle_request
# Match: socketserver.ThreadingUDPServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: socketserver.ThreadingUDPServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.process_request == socketserver.BaseServer.process_request
# Match: socketserver.ThreadingUDPServer.serve_forever: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: socketserver.ThreadingUDPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.server_activate == socketserver.BaseServer.server_activate
# Match: socketserver.ThreadingUDPServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.server_close == socketserver.BaseServer.server_close
# Match: socketserver.ThreadingUDPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]service_actions'}
!: socketserver.ThreadingUDPServer.service_actions == socketserver.BaseServer.service_actions
# Match: socketserver.ThreadingUDPServer.shutdown: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.shutdown == socketserver.BaseServer.shutdown
# Match: socketserver.ThreadingUDPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.shutdown_request == socketserver.BaseServer.shutdown_request
# Match: socketserver.ThreadingUDPServer.verify_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `socketserver.TCPServer` ----
# Match: socketserver.ThreadingUDPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.__init__ == socketserver.TCPServer.__init__
# Match: socketserver.ThreadingUDPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ThreadingUDPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ThreadingUDPServer._handle_request_noblock: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: socketserver.ThreadingUDPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.close_request == socketserver.TCPServer.close_request
# Match: socketserver.ThreadingUDPServer.fileno: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.fileno == socketserver.TCPServer.fileno
# Match: socketserver.ThreadingUDPServer.finish_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.finish_request == socketserver.BaseServer.finish_request
# Match: socketserver.ThreadingUDPServer.get_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.get_request == socketserver.TCPServer.get_request
# Match: socketserver.ThreadingUDPServer.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.handle_error == socketserver.BaseServer.handle_error
# Match: socketserver.ThreadingUDPServer.handle_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.handle_request == socketserver.BaseServer.handle_request
# Match: socketserver.ThreadingUDPServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: socketserver.ThreadingUDPServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.process_request == socketserver.BaseServer.process_request
# Match: socketserver.ThreadingUDPServer.serve_forever: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: socketserver.ThreadingUDPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.server_activate == socketserver.TCPServer.server_activate
# Match: socketserver.ThreadingUDPServer.server_bind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.server_bind == socketserver.TCPServer.server_bind
# Match: socketserver.ThreadingUDPServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.server_close == socketserver.TCPServer.server_close
# Match: socketserver.ThreadingUDPServer.shutdown: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.shutdown == socketserver.BaseServer.shutdown
# Match: socketserver.ThreadingUDPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.shutdown_request == socketserver.TCPServer.shutdown_request
# Match: socketserver.ThreadingUDPServer.verify_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `socketserver.UDPServer` ----
# Match: socketserver.ThreadingUDPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.__init__ == socketserver.TCPServer.__init__
# Match: socketserver.ThreadingUDPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ThreadingUDPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ThreadingUDPServer._handle_request_noblock: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: socketserver.ThreadingUDPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.close_request == socketserver.UDPServer.close_request
# Match: socketserver.ThreadingUDPServer.fileno: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.fileno == socketserver.TCPServer.fileno
# Match: socketserver.ThreadingUDPServer.finish_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.finish_request == socketserver.BaseServer.finish_request
# Match: socketserver.ThreadingUDPServer.get_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.get_request == socketserver.UDPServer.get_request
# Match: socketserver.ThreadingUDPServer.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.handle_error == socketserver.BaseServer.handle_error
# Match: socketserver.ThreadingUDPServer.handle_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.handle_request == socketserver.BaseServer.handle_request
# Match: socketserver.ThreadingUDPServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: socketserver.ThreadingUDPServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.process_request == socketserver.BaseServer.process_request
# Match: socketserver.ThreadingUDPServer.serve_forever: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: socketserver.ThreadingUDPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.server_activate == socketserver.UDPServer.server_activate
# Match: socketserver.ThreadingUDPServer.server_bind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.server_bind == socketserver.TCPServer.server_bind
# Match: socketserver.ThreadingUDPServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.server_close == socketserver.TCPServer.server_close
# Match: socketserver.ThreadingUDPServer.shutdown: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.shutdown == socketserver.BaseServer.shutdown
# Match: socketserver.ThreadingUDPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.shutdown_request == socketserver.UDPServer.shutdown_request
# Match: socketserver.ThreadingUDPServer.verify_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `socketserver.ThreadingMixIn` ----
# Match: socketserver.ThreadingUDPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.__init__ == builtins.object.__init__
# Match: socketserver.ThreadingUDPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ThreadingUDPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ThreadingUDPServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.process_request == socketserver.ThreadingMixIn.process_request
# Match: socketserver.ThreadingUDPServer.process_request_thread: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.process_request_thread == socketserver.ThreadingMixIn.process_request_thread

# ---- Search class `socketserver.ThreadingUDPServer` ----

# ---- Wrap class `socketserver.ThreadingUDPServer`'s attributes ----
@: socketserver.ThreadingUDPServer.__init__ == builtins.object.__init__
@: socketserver.ThreadingUDPServer.__setattr__ == builtins.object.__setattr__
@: socketserver.ThreadingUDPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
@: socketserver.ThreadingUDPServer.close_request == socketserver.UDPServer.close_request
@: socketserver.ThreadingUDPServer.fileno == socketserver.TCPServer.fileno
@: socketserver.ThreadingUDPServer.finish_request == socketserver.BaseServer.finish_request
@: socketserver.ThreadingUDPServer.get_request == socketserver.UDPServer.get_request
@: socketserver.ThreadingUDPServer.handle_error == socketserver.BaseServer.handle_error
@: socketserver.ThreadingUDPServer.handle_request == socketserver.BaseServer.handle_request
@: socketserver.ThreadingUDPServer.handle_timeout == socketserver.BaseServer.handle_timeout
@: socketserver.ThreadingUDPServer.process_request == socketserver.ThreadingMixIn.process_request
@: socketserver.ThreadingUDPServer.process_request_thread == socketserver.ThreadingMixIn.process_request_thread
@: socketserver.ThreadingUDPServer.serve_forever == socketserver.BaseServer.serve_forever
@: socketserver.ThreadingUDPServer.server_activate == socketserver.UDPServer.server_activate
@: socketserver.ThreadingUDPServer.server_bind == socketserver.TCPServer.server_bind
@: socketserver.ThreadingUDPServer.server_close == socketserver.TCPServer.server_close
@: socketserver.ThreadingUDPServer.shutdown == socketserver.BaseServer.shutdown
@: socketserver.ThreadingUDPServer.shutdown_request == socketserver.UDPServer.shutdown_request
@: socketserver.ThreadingUDPServer.verify_request == socketserver.BaseServer.verify_request
# ===== Process class `socketserver.ThreadingUDPServer` =====


# ----- Process callable `socketserver.time` -----
!: socketserver.time == time.time

# ----- Process class `socketserver.BaseServer` -----
# Match: socketserver.BaseServer: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer

# ---- Search base class `builtins.object` ----
# Match: socketserver.BaseServer.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__delattr__ == builtins.object.__delattr__
# Match: socketserver.BaseServer.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__dir__ == builtins.object.__dir__
# Match: socketserver.BaseServer.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__eq__ == builtins.object.__eq__
# Match: socketserver.BaseServer.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__format__ == builtins.object.__format__
# Match: socketserver.BaseServer.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__ge__ == builtins.object.__ge__
# Match: socketserver.BaseServer.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.BaseServer.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__gt__ == builtins.object.__gt__
# Match: socketserver.BaseServer.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__hash__ == builtins.object.__hash__
# Match: socketserver.BaseServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.__init__ == builtins.object.__init__
# Match: socketserver.BaseServer.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__le__ == builtins.object.__le__
# Match: socketserver.BaseServer.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__lt__ == builtins.object.__lt__
# Match: socketserver.BaseServer.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__ne__ == builtins.object.__ne__
# Match: socketserver.BaseServer.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__new__ == builtins.object.__new__
# Match: socketserver.BaseServer.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__reduce__ == builtins.object.__reduce__
# Match: socketserver.BaseServer.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.BaseServer.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__repr__ == builtins.object.__repr__
# Match: socketserver.BaseServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.BaseServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.BaseServer.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.BaseServer.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__str__ == builtins.object.__str__
# Match: socketserver.BaseServer.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__(?!init)[^.]+__'}
!: socketserver.BaseServer.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `socketserver.BaseServer` ----
# Match: socketserver.BaseServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.__init__
# Match: socketserver.BaseServer._handle_request_noblock: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer._handle_request_noblock
# Match: socketserver.BaseServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.close_request
# Match: socketserver.BaseServer.finish_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.finish_request
# Match: socketserver.BaseServer.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.handle_error
# Match: socketserver.BaseServer.handle_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.handle_request
# Match: socketserver.BaseServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.handle_timeout
# Match: socketserver.BaseServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.process_request
# Match: socketserver.BaseServer.serve_forever: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.serve_forever
# Match: socketserver.BaseServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.server_activate
# Match: socketserver.BaseServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.server_close
# Match: socketserver.BaseServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]service_actions'}
!: socketserver.BaseServer.service_actions
# Match: socketserver.BaseServer.shutdown: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.shutdown
# Match: socketserver.BaseServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.shutdown_request
# Match: socketserver.BaseServer.verify_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.verify_request

# ---- Wrap class `socketserver.BaseServer`'s attributes ----
@: socketserver.BaseServer.__init__
@: socketserver.BaseServer.__setattr__ == builtins.object.__setattr__
@: socketserver.BaseServer._handle_request_noblock
@: socketserver.BaseServer.close_request
@: socketserver.BaseServer.finish_request
@: socketserver.BaseServer.handle_error
@: socketserver.BaseServer.handle_request
@: socketserver.BaseServer.handle_timeout
@: socketserver.BaseServer.process_request
@: socketserver.BaseServer.serve_forever
@: socketserver.BaseServer.server_activate
@: socketserver.BaseServer.server_close
@: socketserver.BaseServer.shutdown
@: socketserver.BaseServer.shutdown_request
@: socketserver.BaseServer.verify_request
# ===== Process class `socketserver.BaseServer` =====

# ===== Process module `socketserver` =====

                + T0 + * argparse +
                - T0 - * argparse -

# ----- Process module `argparse` -----
# Match: argparse: None
!: argparse
        - T0 - * http.server -

# ----- Process module `http.server` -----
# Match: http.server: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server

# ----- Process class `http.server.SimpleHTTPRequestHandler` -----
# Match: http.server.SimpleHTTPRequestHandler: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler

# ---- Search base class `builtins.object` ----
# Match: http.server.SimpleHTTPRequestHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__delattr__ == builtins.object.__delattr__
# Match: http.server.SimpleHTTPRequestHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__dir__ == builtins.object.__dir__
# Match: http.server.SimpleHTTPRequestHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__eq__ == builtins.object.__eq__
# Match: http.server.SimpleHTTPRequestHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__format__ == builtins.object.__format__
# Match: http.server.SimpleHTTPRequestHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__ge__ == builtins.object.__ge__
# Match: http.server.SimpleHTTPRequestHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__getattribute__ == builtins.object.__getattribute__
# Match: http.server.SimpleHTTPRequestHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__gt__ == builtins.object.__gt__
# Match: http.server.SimpleHTTPRequestHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__hash__ == builtins.object.__hash__
# Match: http.server.SimpleHTTPRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.__init__ == builtins.object.__init__
# Match: http.server.SimpleHTTPRequestHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__le__ == builtins.object.__le__
# Match: http.server.SimpleHTTPRequestHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__lt__ == builtins.object.__lt__
# Match: http.server.SimpleHTTPRequestHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__ne__ == builtins.object.__ne__
# Match: http.server.SimpleHTTPRequestHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__new__ == builtins.object.__new__
# Match: http.server.SimpleHTTPRequestHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__reduce__ == builtins.object.__reduce__
# Match: http.server.SimpleHTTPRequestHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: http.server.SimpleHTTPRequestHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__repr__ == builtins.object.__repr__
# Match: http.server.SimpleHTTPRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.server.SimpleHTTPRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: http.server.SimpleHTTPRequestHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__sizeof__ == builtins.object.__sizeof__
# Match: http.server.SimpleHTTPRequestHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__str__ == builtins.object.__str__
# Match: http.server.SimpleHTTPRequestHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.SimpleHTTPRequestHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseRequestHandler` ----
# Match: http.server.SimpleHTTPRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
# Match: http.server.SimpleHTTPRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.server.SimpleHTTPRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: http.server.SimpleHTTPRequestHandler.finish: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.finish == socketserver.BaseRequestHandler.finish
# Match: http.server.SimpleHTTPRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.handle == socketserver.BaseRequestHandler.handle
# Match: http.server.SimpleHTTPRequestHandler.setup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.setup == socketserver.BaseRequestHandler.setup

# ---- Search base class `socketserver.StreamRequestHandler` ----
# Match: http.server.SimpleHTTPRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
# Match: http.server.SimpleHTTPRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.server.SimpleHTTPRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: http.server.SimpleHTTPRequestHandler.finish: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.finish == socketserver.StreamRequestHandler.finish
# Match: http.server.SimpleHTTPRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.handle == socketserver.BaseRequestHandler.handle
# Match: http.server.SimpleHTTPRequestHandler.setup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.setup == socketserver.StreamRequestHandler.setup

# ---- Search base class `http.server.BaseHTTPRequestHandler` ----
# Match: http.server.SimpleHTTPRequestHandler.MessageClass: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.MessageClass == http.client.HTTPMessage
# Match: http.server.SimpleHTTPRequestHandler.address_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.address_string == http.server.BaseHTTPRequestHandler.address_string
# Match: http.server.SimpleHTTPRequestHandler.date_time_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.date_time_string == http.server.BaseHTTPRequestHandler.date_time_string
# Match: http.server.SimpleHTTPRequestHandler.end_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.end_headers == http.server.BaseHTTPRequestHandler.end_headers
# Match: http.server.SimpleHTTPRequestHandler.flush_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.flush_headers == http.server.BaseHTTPRequestHandler.flush_headers
# Match: http.server.SimpleHTTPRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.handle == http.server.BaseHTTPRequestHandler.handle
# Match: http.server.SimpleHTTPRequestHandler.handle_expect_100: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.handle_expect_100 == http.server.BaseHTTPRequestHandler.handle_expect_100
# Match: http.server.SimpleHTTPRequestHandler.handle_one_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.handle_one_request == http.server.BaseHTTPRequestHandler.handle_one_request
# Match: http.server.SimpleHTTPRequestHandler.log_date_time_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.log_date_time_string == http.server.BaseHTTPRequestHandler.log_date_time_string
# Match: http.server.SimpleHTTPRequestHandler.log_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.log_error == http.server.BaseHTTPRequestHandler.log_error
# Match: http.server.SimpleHTTPRequestHandler.log_message: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.log_message == http.server.BaseHTTPRequestHandler.log_message
# Match: http.server.SimpleHTTPRequestHandler.log_request: {'regex': True, 'spec_arg': {'hide_below'}, 'spec_uri': '.+[.]log_request'}
@: http.server.SimpleHTTPRequestHandler.log_request == http.server.BaseHTTPRequestHandler.log_request
# Match: http.server.SimpleHTTPRequestHandler.parse_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.parse_request == http.server.BaseHTTPRequestHandler.parse_request
# Match: http.server.SimpleHTTPRequestHandler.send_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.send_error == http.server.BaseHTTPRequestHandler.send_error
# Match: http.server.SimpleHTTPRequestHandler.send_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.send_header == http.server.BaseHTTPRequestHandler.send_header
# Match: http.server.SimpleHTTPRequestHandler.send_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.send_response == http.server.BaseHTTPRequestHandler.send_response
# Match: http.server.SimpleHTTPRequestHandler.send_response_only: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.send_response_only == http.server.BaseHTTPRequestHandler.send_response_only
# Match: http.server.SimpleHTTPRequestHandler.version_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.version_string == http.server.BaseHTTPRequestHandler.version_string

# ---- Search class `http.server.SimpleHTTPRequestHandler` ----
# Match: http.server.SimpleHTTPRequestHandler.copyfile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.copyfile
# Match: http.server.SimpleHTTPRequestHandler.do_GET: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.do_GET
# Match: http.server.SimpleHTTPRequestHandler.do_HEAD: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.do_HEAD
# Match: http.server.SimpleHTTPRequestHandler.guess_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.guess_type
# Match: http.server.SimpleHTTPRequestHandler.list_directory: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.list_directory
# Match: http.server.SimpleHTTPRequestHandler.send_head: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.send_head
# Match: http.server.SimpleHTTPRequestHandler.translate_path: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.SimpleHTTPRequestHandler.translate_path

# ---- Wrap class `http.server.SimpleHTTPRequestHandler`'s attributes ----
@: http.server.SimpleHTTPRequestHandler.MessageClass == http.client.HTTPMessage
@: http.server.SimpleHTTPRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
@: http.server.SimpleHTTPRequestHandler.__setattr__ == builtins.object.__setattr__
@: http.server.SimpleHTTPRequestHandler.address_string == http.server.BaseHTTPRequestHandler.address_string
@: http.server.SimpleHTTPRequestHandler.copyfile
@: http.server.SimpleHTTPRequestHandler.date_time_string == http.server.BaseHTTPRequestHandler.date_time_string
@: http.server.SimpleHTTPRequestHandler.do_GET
@: http.server.SimpleHTTPRequestHandler.do_HEAD
@: http.server.SimpleHTTPRequestHandler.end_headers == http.server.BaseHTTPRequestHandler.end_headers
@: http.server.SimpleHTTPRequestHandler.finish == socketserver.StreamRequestHandler.finish
@: http.server.SimpleHTTPRequestHandler.flush_headers == http.server.BaseHTTPRequestHandler.flush_headers
@: http.server.SimpleHTTPRequestHandler.guess_type
@: http.server.SimpleHTTPRequestHandler.handle == http.server.BaseHTTPRequestHandler.handle
@: http.server.SimpleHTTPRequestHandler.handle_expect_100 == http.server.BaseHTTPRequestHandler.handle_expect_100
@: http.server.SimpleHTTPRequestHandler.handle_one_request == http.server.BaseHTTPRequestHandler.handle_one_request
@: http.server.SimpleHTTPRequestHandler.list_directory
@: http.server.SimpleHTTPRequestHandler.log_date_time_string == http.server.BaseHTTPRequestHandler.log_date_time_string
@: http.server.SimpleHTTPRequestHandler.log_error == http.server.BaseHTTPRequestHandler.log_error
@: http.server.SimpleHTTPRequestHandler.log_message == http.server.BaseHTTPRequestHandler.log_message
@: http.server.SimpleHTTPRequestHandler.log_request == http.server.BaseHTTPRequestHandler.log_request
@: http.server.SimpleHTTPRequestHandler.parse_request == http.server.BaseHTTPRequestHandler.parse_request
@: http.server.SimpleHTTPRequestHandler.send_error == http.server.BaseHTTPRequestHandler.send_error
@: http.server.SimpleHTTPRequestHandler.send_head
@: http.server.SimpleHTTPRequestHandler.send_header == http.server.BaseHTTPRequestHandler.send_header
@: http.server.SimpleHTTPRequestHandler.send_response == http.server.BaseHTTPRequestHandler.send_response
@: http.server.SimpleHTTPRequestHandler.send_response_only == http.server.BaseHTTPRequestHandler.send_response_only
@: http.server.SimpleHTTPRequestHandler.setup == socketserver.StreamRequestHandler.setup
@: http.server.SimpleHTTPRequestHandler.translate_path
@: http.server.SimpleHTTPRequestHandler.version_string == http.server.BaseHTTPRequestHandler.version_string
# ===== Process class `http.server.SimpleHTTPRequestHandler` =====


# ----- Process callable `http.server.executable` -----
# Match: http.server.executable: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.executable

# ----- Process callable `http.server.nobody_uid` -----
# Match: http.server.nobody_uid: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.nobody_uid

# ----- Process callable `http.server._quote_html` -----
# Match: http.server._quote_html: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server._quote_html

# ----- Process class `http.server.BaseHTTPRequestHandler` -----
# Match: http.server.BaseHTTPRequestHandler: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler

# ---- Search base class `builtins.object` ----
# Match: http.server.BaseHTTPRequestHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__delattr__ == builtins.object.__delattr__
# Match: http.server.BaseHTTPRequestHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__dir__ == builtins.object.__dir__
# Match: http.server.BaseHTTPRequestHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__eq__ == builtins.object.__eq__
# Match: http.server.BaseHTTPRequestHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__format__ == builtins.object.__format__
# Match: http.server.BaseHTTPRequestHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__ge__ == builtins.object.__ge__
# Match: http.server.BaseHTTPRequestHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__getattribute__ == builtins.object.__getattribute__
# Match: http.server.BaseHTTPRequestHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__gt__ == builtins.object.__gt__
# Match: http.server.BaseHTTPRequestHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__hash__ == builtins.object.__hash__
# Match: http.server.BaseHTTPRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.__init__ == builtins.object.__init__
# Match: http.server.BaseHTTPRequestHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__le__ == builtins.object.__le__
# Match: http.server.BaseHTTPRequestHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__lt__ == builtins.object.__lt__
# Match: http.server.BaseHTTPRequestHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__ne__ == builtins.object.__ne__
# Match: http.server.BaseHTTPRequestHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__new__ == builtins.object.__new__
# Match: http.server.BaseHTTPRequestHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__reduce__ == builtins.object.__reduce__
# Match: http.server.BaseHTTPRequestHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: http.server.BaseHTTPRequestHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__repr__ == builtins.object.__repr__
# Match: http.server.BaseHTTPRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.server.BaseHTTPRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: http.server.BaseHTTPRequestHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__sizeof__ == builtins.object.__sizeof__
# Match: http.server.BaseHTTPRequestHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__str__ == builtins.object.__str__
# Match: http.server.BaseHTTPRequestHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.BaseHTTPRequestHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseRequestHandler` ----
# Match: http.server.BaseHTTPRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
# Match: http.server.BaseHTTPRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.server.BaseHTTPRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: http.server.BaseHTTPRequestHandler.finish: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.finish == socketserver.BaseRequestHandler.finish
# Match: http.server.BaseHTTPRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.handle == socketserver.BaseRequestHandler.handle
# Match: http.server.BaseHTTPRequestHandler.setup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.setup == socketserver.BaseRequestHandler.setup

# ---- Search base class `socketserver.StreamRequestHandler` ----
# Match: http.server.BaseHTTPRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
# Match: http.server.BaseHTTPRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.server.BaseHTTPRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: http.server.BaseHTTPRequestHandler.finish: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.finish == socketserver.StreamRequestHandler.finish
# Match: http.server.BaseHTTPRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.handle == socketserver.BaseRequestHandler.handle
# Match: http.server.BaseHTTPRequestHandler.setup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.setup == socketserver.StreamRequestHandler.setup

# ---- Search class `http.server.BaseHTTPRequestHandler` ----
# Match: http.server.BaseHTTPRequestHandler.MessageClass: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.MessageClass == http.client.HTTPMessage
# Match: http.server.BaseHTTPRequestHandler.address_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.address_string
# Match: http.server.BaseHTTPRequestHandler.date_time_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.date_time_string
# Match: http.server.BaseHTTPRequestHandler.end_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.end_headers
# Match: http.server.BaseHTTPRequestHandler.flush_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.flush_headers
# Match: http.server.BaseHTTPRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.handle
# Match: http.server.BaseHTTPRequestHandler.handle_expect_100: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.handle_expect_100
# Match: http.server.BaseHTTPRequestHandler.handle_one_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.handle_one_request
# Match: http.server.BaseHTTPRequestHandler.log_date_time_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.log_date_time_string
# Match: http.server.BaseHTTPRequestHandler.log_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.log_error
# Match: http.server.BaseHTTPRequestHandler.log_message: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.log_message
# Match: http.server.BaseHTTPRequestHandler.log_request: {'regex': True, 'spec_arg': {'hide_below'}, 'spec_uri': '.+[.]log_request'}
@: http.server.BaseHTTPRequestHandler.log_request
# Match: http.server.BaseHTTPRequestHandler.parse_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.parse_request
# Match: http.server.BaseHTTPRequestHandler.send_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.send_error
# Match: http.server.BaseHTTPRequestHandler.send_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.send_header
# Match: http.server.BaseHTTPRequestHandler.send_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.send_response
# Match: http.server.BaseHTTPRequestHandler.send_response_only: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.send_response_only
# Match: http.server.BaseHTTPRequestHandler.version_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.BaseHTTPRequestHandler.version_string

# ---- Wrap class `http.server.BaseHTTPRequestHandler`'s attributes ----
@: http.server.BaseHTTPRequestHandler.MessageClass == http.client.HTTPMessage
@: http.server.BaseHTTPRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
@: http.server.BaseHTTPRequestHandler.__setattr__ == builtins.object.__setattr__
@: http.server.BaseHTTPRequestHandler.address_string
@: http.server.BaseHTTPRequestHandler.date_time_string
@: http.server.BaseHTTPRequestHandler.end_headers
@: http.server.BaseHTTPRequestHandler.finish == socketserver.StreamRequestHandler.finish
@: http.server.BaseHTTPRequestHandler.flush_headers
@: http.server.BaseHTTPRequestHandler.handle
@: http.server.BaseHTTPRequestHandler.handle_expect_100
@: http.server.BaseHTTPRequestHandler.handle_one_request
@: http.server.BaseHTTPRequestHandler.log_date_time_string
@: http.server.BaseHTTPRequestHandler.log_error
@: http.server.BaseHTTPRequestHandler.log_message
@: http.server.BaseHTTPRequestHandler.log_request
@: http.server.BaseHTTPRequestHandler.parse_request
@: http.server.BaseHTTPRequestHandler.send_error
@: http.server.BaseHTTPRequestHandler.send_header
@: http.server.BaseHTTPRequestHandler.send_response
@: http.server.BaseHTTPRequestHandler.send_response_only
@: http.server.BaseHTTPRequestHandler.setup == socketserver.StreamRequestHandler.setup
@: http.server.BaseHTTPRequestHandler.version_string
# ===== Process class `http.server.BaseHTTPRequestHandler` =====


# ----- Process callable `http.server._url_collapse_path` -----
# Match: http.server._url_collapse_path: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server._url_collapse_path

# ----- Process class `http.server.CGIHTTPRequestHandler` -----
# Match: http.server.CGIHTTPRequestHandler: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler

# ---- Search base class `builtins.object` ----
# Match: http.server.CGIHTTPRequestHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__delattr__ == builtins.object.__delattr__
# Match: http.server.CGIHTTPRequestHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__dir__ == builtins.object.__dir__
# Match: http.server.CGIHTTPRequestHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__eq__ == builtins.object.__eq__
# Match: http.server.CGIHTTPRequestHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__format__ == builtins.object.__format__
# Match: http.server.CGIHTTPRequestHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__ge__ == builtins.object.__ge__
# Match: http.server.CGIHTTPRequestHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__getattribute__ == builtins.object.__getattribute__
# Match: http.server.CGIHTTPRequestHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__gt__ == builtins.object.__gt__
# Match: http.server.CGIHTTPRequestHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__hash__ == builtins.object.__hash__
# Match: http.server.CGIHTTPRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.__init__ == builtins.object.__init__
# Match: http.server.CGIHTTPRequestHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__le__ == builtins.object.__le__
# Match: http.server.CGIHTTPRequestHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__lt__ == builtins.object.__lt__
# Match: http.server.CGIHTTPRequestHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__ne__ == builtins.object.__ne__
# Match: http.server.CGIHTTPRequestHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__new__ == builtins.object.__new__
# Match: http.server.CGIHTTPRequestHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__reduce__ == builtins.object.__reduce__
# Match: http.server.CGIHTTPRequestHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: http.server.CGIHTTPRequestHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__repr__ == builtins.object.__repr__
# Match: http.server.CGIHTTPRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.server.CGIHTTPRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: http.server.CGIHTTPRequestHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__sizeof__ == builtins.object.__sizeof__
# Match: http.server.CGIHTTPRequestHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__str__ == builtins.object.__str__
# Match: http.server.CGIHTTPRequestHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.CGIHTTPRequestHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseRequestHandler` ----
# Match: http.server.CGIHTTPRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
# Match: http.server.CGIHTTPRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.server.CGIHTTPRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: http.server.CGIHTTPRequestHandler.finish: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.finish == socketserver.BaseRequestHandler.finish
# Match: http.server.CGIHTTPRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.handle == socketserver.BaseRequestHandler.handle
# Match: http.server.CGIHTTPRequestHandler.setup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.setup == socketserver.BaseRequestHandler.setup

# ---- Search base class `socketserver.StreamRequestHandler` ----
# Match: http.server.CGIHTTPRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
# Match: http.server.CGIHTTPRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.server.CGIHTTPRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: http.server.CGIHTTPRequestHandler.finish: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.finish == socketserver.StreamRequestHandler.finish
# Match: http.server.CGIHTTPRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.handle == socketserver.BaseRequestHandler.handle
# Match: http.server.CGIHTTPRequestHandler.setup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.setup == socketserver.StreamRequestHandler.setup

# ---- Search base class `http.server.BaseHTTPRequestHandler` ----
# Match: http.server.CGIHTTPRequestHandler.MessageClass: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.MessageClass == http.server.BaseHTTPRequestHandler.MessageClass
# Match: http.server.CGIHTTPRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
# Match: http.server.CGIHTTPRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.server.CGIHTTPRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: http.server.CGIHTTPRequestHandler.address_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.address_string == http.server.BaseHTTPRequestHandler.address_string
# Match: http.server.CGIHTTPRequestHandler.date_time_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.date_time_string == http.server.BaseHTTPRequestHandler.date_time_string
# Match: http.server.CGIHTTPRequestHandler.end_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.end_headers == http.server.BaseHTTPRequestHandler.end_headers
# Match: http.server.CGIHTTPRequestHandler.finish: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.finish == socketserver.StreamRequestHandler.finish
# Match: http.server.CGIHTTPRequestHandler.flush_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.flush_headers == http.server.BaseHTTPRequestHandler.flush_headers
# Match: http.server.CGIHTTPRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.handle == http.server.BaseHTTPRequestHandler.handle
# Match: http.server.CGIHTTPRequestHandler.handle_expect_100: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.handle_expect_100 == http.server.BaseHTTPRequestHandler.handle_expect_100
# Match: http.server.CGIHTTPRequestHandler.handle_one_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.handle_one_request == http.server.BaseHTTPRequestHandler.handle_one_request
# Match: http.server.CGIHTTPRequestHandler.log_date_time_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.log_date_time_string == http.server.BaseHTTPRequestHandler.log_date_time_string
# Match: http.server.CGIHTTPRequestHandler.log_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.log_error == http.server.BaseHTTPRequestHandler.log_error
# Match: http.server.CGIHTTPRequestHandler.log_message: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.log_message == http.server.BaseHTTPRequestHandler.log_message
# Match: http.server.CGIHTTPRequestHandler.log_request: {'regex': True, 'spec_arg': {'hide_below'}, 'spec_uri': '.+[.]log_request'}
@: http.server.CGIHTTPRequestHandler.log_request == http.server.BaseHTTPRequestHandler.log_request
# Match: http.server.CGIHTTPRequestHandler.parse_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.parse_request == http.server.BaseHTTPRequestHandler.parse_request
# Match: http.server.CGIHTTPRequestHandler.send_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.send_error == http.server.BaseHTTPRequestHandler.send_error
# Match: http.server.CGIHTTPRequestHandler.send_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.send_header == http.server.BaseHTTPRequestHandler.send_header
# Match: http.server.CGIHTTPRequestHandler.send_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.send_response == http.server.BaseHTTPRequestHandler.send_response
# Match: http.server.CGIHTTPRequestHandler.send_response_only: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.send_response_only == http.server.BaseHTTPRequestHandler.send_response_only
# Match: http.server.CGIHTTPRequestHandler.setup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.setup == socketserver.StreamRequestHandler.setup
# Match: http.server.CGIHTTPRequestHandler.version_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.version_string == http.server.BaseHTTPRequestHandler.version_string

# ---- Search base class `http.server.SimpleHTTPRequestHandler` ----
# Match: http.server.CGIHTTPRequestHandler.MessageClass: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.MessageClass == http.server.SimpleHTTPRequestHandler.MessageClass
# Match: http.server.CGIHTTPRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
# Match: http.server.CGIHTTPRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.server.CGIHTTPRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: http.server.CGIHTTPRequestHandler.address_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.address_string == http.server.BaseHTTPRequestHandler.address_string
# Match: http.server.CGIHTTPRequestHandler.copyfile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.copyfile == http.server.SimpleHTTPRequestHandler.copyfile
# Match: http.server.CGIHTTPRequestHandler.date_time_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.date_time_string == http.server.BaseHTTPRequestHandler.date_time_string
# Match: http.server.CGIHTTPRequestHandler.do_GET: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.do_GET == http.server.SimpleHTTPRequestHandler.do_GET
# Match: http.server.CGIHTTPRequestHandler.do_HEAD: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.do_HEAD == http.server.SimpleHTTPRequestHandler.do_HEAD
# Match: http.server.CGIHTTPRequestHandler.end_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.end_headers == http.server.BaseHTTPRequestHandler.end_headers
# Match: http.server.CGIHTTPRequestHandler.finish: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.finish == socketserver.StreamRequestHandler.finish
# Match: http.server.CGIHTTPRequestHandler.flush_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.flush_headers == http.server.BaseHTTPRequestHandler.flush_headers
# Match: http.server.CGIHTTPRequestHandler.guess_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.guess_type == http.server.SimpleHTTPRequestHandler.guess_type
# Match: http.server.CGIHTTPRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.handle == http.server.BaseHTTPRequestHandler.handle
# Match: http.server.CGIHTTPRequestHandler.handle_expect_100: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.handle_expect_100 == http.server.BaseHTTPRequestHandler.handle_expect_100
# Match: http.server.CGIHTTPRequestHandler.handle_one_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.handle_one_request == http.server.BaseHTTPRequestHandler.handle_one_request
# Match: http.server.CGIHTTPRequestHandler.list_directory: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.list_directory == http.server.SimpleHTTPRequestHandler.list_directory
# Match: http.server.CGIHTTPRequestHandler.log_date_time_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.log_date_time_string == http.server.BaseHTTPRequestHandler.log_date_time_string
# Match: http.server.CGIHTTPRequestHandler.log_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.log_error == http.server.BaseHTTPRequestHandler.log_error
# Match: http.server.CGIHTTPRequestHandler.log_message: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.log_message == http.server.BaseHTTPRequestHandler.log_message
# Match: http.server.CGIHTTPRequestHandler.log_request: {'regex': True, 'spec_arg': {'hide_below'}, 'spec_uri': '.+[.]log_request'}
@: http.server.CGIHTTPRequestHandler.log_request == http.server.BaseHTTPRequestHandler.log_request
# Match: http.server.CGIHTTPRequestHandler.parse_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.parse_request == http.server.BaseHTTPRequestHandler.parse_request
# Match: http.server.CGIHTTPRequestHandler.send_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.send_error == http.server.BaseHTTPRequestHandler.send_error
# Match: http.server.CGIHTTPRequestHandler.send_head: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.send_head == http.server.SimpleHTTPRequestHandler.send_head
# Match: http.server.CGIHTTPRequestHandler.send_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.send_header == http.server.BaseHTTPRequestHandler.send_header
# Match: http.server.CGIHTTPRequestHandler.send_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.send_response == http.server.BaseHTTPRequestHandler.send_response
# Match: http.server.CGIHTTPRequestHandler.send_response_only: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.send_response_only == http.server.BaseHTTPRequestHandler.send_response_only
# Match: http.server.CGIHTTPRequestHandler.setup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.setup == socketserver.StreamRequestHandler.setup
# Match: http.server.CGIHTTPRequestHandler.translate_path: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.translate_path == http.server.SimpleHTTPRequestHandler.translate_path
# Match: http.server.CGIHTTPRequestHandler.version_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.version_string == http.server.BaseHTTPRequestHandler.version_string

# ---- Search class `http.server.CGIHTTPRequestHandler` ----
# Match: http.server.CGIHTTPRequestHandler.do_POST: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.do_POST
# Match: http.server.CGIHTTPRequestHandler.is_cgi: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.is_cgi
# Match: http.server.CGIHTTPRequestHandler.is_executable: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.is_executable
# Match: http.server.CGIHTTPRequestHandler.is_python: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.is_python
# Match: http.server.CGIHTTPRequestHandler.run_cgi: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.run_cgi
# Match: http.server.CGIHTTPRequestHandler.send_head: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.CGIHTTPRequestHandler.send_head

# ---- Wrap class `http.server.CGIHTTPRequestHandler`'s attributes ----
@: http.server.CGIHTTPRequestHandler.MessageClass == http.server.SimpleHTTPRequestHandler.MessageClass
@: http.server.CGIHTTPRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
@: http.server.CGIHTTPRequestHandler.__setattr__ == builtins.object.__setattr__
@: http.server.CGIHTTPRequestHandler.address_string == http.server.BaseHTTPRequestHandler.address_string
@: http.server.CGIHTTPRequestHandler.copyfile == http.server.SimpleHTTPRequestHandler.copyfile
@: http.server.CGIHTTPRequestHandler.date_time_string == http.server.BaseHTTPRequestHandler.date_time_string
@: http.server.CGIHTTPRequestHandler.do_GET == http.server.SimpleHTTPRequestHandler.do_GET
@: http.server.CGIHTTPRequestHandler.do_HEAD == http.server.SimpleHTTPRequestHandler.do_HEAD
@: http.server.CGIHTTPRequestHandler.do_POST
@: http.server.CGIHTTPRequestHandler.end_headers == http.server.BaseHTTPRequestHandler.end_headers
@: http.server.CGIHTTPRequestHandler.finish == socketserver.StreamRequestHandler.finish
@: http.server.CGIHTTPRequestHandler.flush_headers == http.server.BaseHTTPRequestHandler.flush_headers
@: http.server.CGIHTTPRequestHandler.guess_type == http.server.SimpleHTTPRequestHandler.guess_type
@: http.server.CGIHTTPRequestHandler.handle == http.server.BaseHTTPRequestHandler.handle
@: http.server.CGIHTTPRequestHandler.handle_expect_100 == http.server.BaseHTTPRequestHandler.handle_expect_100
@: http.server.CGIHTTPRequestHandler.handle_one_request == http.server.BaseHTTPRequestHandler.handle_one_request
@: http.server.CGIHTTPRequestHandler.is_cgi
@: http.server.CGIHTTPRequestHandler.is_executable
@: http.server.CGIHTTPRequestHandler.is_python
@: http.server.CGIHTTPRequestHandler.list_directory == http.server.SimpleHTTPRequestHandler.list_directory
@: http.server.CGIHTTPRequestHandler.log_date_time_string == http.server.BaseHTTPRequestHandler.log_date_time_string
@: http.server.CGIHTTPRequestHandler.log_error == http.server.BaseHTTPRequestHandler.log_error
@: http.server.CGIHTTPRequestHandler.log_message == http.server.BaseHTTPRequestHandler.log_message
@: http.server.CGIHTTPRequestHandler.log_request == http.server.BaseHTTPRequestHandler.log_request
@: http.server.CGIHTTPRequestHandler.parse_request == http.server.BaseHTTPRequestHandler.parse_request
@: http.server.CGIHTTPRequestHandler.run_cgi
@: http.server.CGIHTTPRequestHandler.send_error == http.server.BaseHTTPRequestHandler.send_error
@: http.server.CGIHTTPRequestHandler.send_head
@: http.server.CGIHTTPRequestHandler.send_header == http.server.BaseHTTPRequestHandler.send_header
@: http.server.CGIHTTPRequestHandler.send_response == http.server.BaseHTTPRequestHandler.send_response
@: http.server.CGIHTTPRequestHandler.send_response_only == http.server.BaseHTTPRequestHandler.send_response_only
@: http.server.CGIHTTPRequestHandler.setup == socketserver.StreamRequestHandler.setup
@: http.server.CGIHTTPRequestHandler.translate_path == http.server.SimpleHTTPRequestHandler.translate_path
@: http.server.CGIHTTPRequestHandler.version_string == http.server.BaseHTTPRequestHandler.version_string
# ===== Process class `http.server.CGIHTTPRequestHandler` =====


# ----- Process callable `http.server.test` -----
# Match: http.server.test: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.test

# ----- Process class `http.server.HTTPStatus` -----
!: http.server.HTTPStatus == http.HTTPStatus

# ----- Process class `http.server.HTTPServer` -----
# Match: http.server.HTTPServer: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer

# ---- Search base class `builtins.object` ----
# Match: http.server.HTTPServer.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__delattr__ == builtins.object.__delattr__
# Match: http.server.HTTPServer.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__dir__ == builtins.object.__dir__
# Match: http.server.HTTPServer.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__eq__ == builtins.object.__eq__
# Match: http.server.HTTPServer.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__format__ == builtins.object.__format__
# Match: http.server.HTTPServer.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__ge__ == builtins.object.__ge__
# Match: http.server.HTTPServer.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__getattribute__ == builtins.object.__getattribute__
# Match: http.server.HTTPServer.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__gt__ == builtins.object.__gt__
# Match: http.server.HTTPServer.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__hash__ == builtins.object.__hash__
# Match: http.server.HTTPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.__init__ == builtins.object.__init__
# Match: http.server.HTTPServer.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__le__ == builtins.object.__le__
# Match: http.server.HTTPServer.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__lt__ == builtins.object.__lt__
# Match: http.server.HTTPServer.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__ne__ == builtins.object.__ne__
# Match: http.server.HTTPServer.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__new__ == builtins.object.__new__
# Match: http.server.HTTPServer.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__reduce__ == builtins.object.__reduce__
# Match: http.server.HTTPServer.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: http.server.HTTPServer.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__repr__ == builtins.object.__repr__
# Match: http.server.HTTPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.server.HTTPServer.__setattr__ == builtins.object.__setattr__
# Match: http.server.HTTPServer.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__sizeof__ == builtins.object.__sizeof__
# Match: http.server.HTTPServer.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__str__ == builtins.object.__str__
# Match: http.server.HTTPServer.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'http[.].+[.]__(?!init)[^.]+__'}
!: http.server.HTTPServer.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseServer` ----
# Match: http.server.HTTPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.__init__ == socketserver.BaseServer.__init__
# Match: http.server.HTTPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.server.HTTPServer.__setattr__ == builtins.object.__setattr__
# Match: http.server.HTTPServer._handle_request_noblock: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: http.server.HTTPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.close_request == socketserver.BaseServer.close_request
# Match: http.server.HTTPServer.finish_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.finish_request == socketserver.BaseServer.finish_request
# Match: http.server.HTTPServer.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.handle_error == socketserver.BaseServer.handle_error
# Match: http.server.HTTPServer.handle_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.handle_request == socketserver.BaseServer.handle_request
# Match: http.server.HTTPServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: http.server.HTTPServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.process_request == socketserver.BaseServer.process_request
# Match: http.server.HTTPServer.serve_forever: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: http.server.HTTPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.server_activate == socketserver.BaseServer.server_activate
# Match: http.server.HTTPServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.server_close == socketserver.BaseServer.server_close
# Match: http.server.HTTPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]service_actions'}
!: http.server.HTTPServer.service_actions == socketserver.BaseServer.service_actions
# Match: http.server.HTTPServer.shutdown: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.shutdown == socketserver.BaseServer.shutdown
# Match: http.server.HTTPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.shutdown_request == socketserver.BaseServer.shutdown_request
# Match: http.server.HTTPServer.verify_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `socketserver.TCPServer` ----
# Match: http.server.HTTPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.__init__ == socketserver.TCPServer.__init__
# Match: http.server.HTTPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: http.server.HTTPServer.__setattr__ == builtins.object.__setattr__
# Match: http.server.HTTPServer._handle_request_noblock: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: http.server.HTTPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.close_request == socketserver.TCPServer.close_request
# Match: http.server.HTTPServer.fileno: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.fileno == socketserver.TCPServer.fileno
# Match: http.server.HTTPServer.finish_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.finish_request == socketserver.BaseServer.finish_request
# Match: http.server.HTTPServer.get_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.get_request == socketserver.TCPServer.get_request
# Match: http.server.HTTPServer.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.handle_error == socketserver.BaseServer.handle_error
# Match: http.server.HTTPServer.handle_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.handle_request == socketserver.BaseServer.handle_request
# Match: http.server.HTTPServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: http.server.HTTPServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.process_request == socketserver.BaseServer.process_request
# Match: http.server.HTTPServer.serve_forever: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: http.server.HTTPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.server_activate == socketserver.TCPServer.server_activate
# Match: http.server.HTTPServer.server_bind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.server_bind == socketserver.TCPServer.server_bind
# Match: http.server.HTTPServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.server_close == socketserver.TCPServer.server_close
# Match: http.server.HTTPServer.shutdown: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.shutdown == socketserver.BaseServer.shutdown
# Match: http.server.HTTPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.shutdown_request == socketserver.TCPServer.shutdown_request
# Match: http.server.HTTPServer.verify_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search class `http.server.HTTPServer` ----
# Match: http.server.HTTPServer.server_bind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'http([.].+)?'}
@: http.server.HTTPServer.server_bind

# ---- Wrap class `http.server.HTTPServer`'s attributes ----
@: http.server.HTTPServer.__init__ == socketserver.TCPServer.__init__
@: http.server.HTTPServer.__setattr__ == builtins.object.__setattr__
@: http.server.HTTPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
@: http.server.HTTPServer.close_request == socketserver.TCPServer.close_request
@: http.server.HTTPServer.fileno == socketserver.TCPServer.fileno
@: http.server.HTTPServer.finish_request == socketserver.BaseServer.finish_request
@: http.server.HTTPServer.get_request == socketserver.TCPServer.get_request
@: http.server.HTTPServer.handle_error == socketserver.BaseServer.handle_error
@: http.server.HTTPServer.handle_request == socketserver.BaseServer.handle_request
@: http.server.HTTPServer.handle_timeout == socketserver.BaseServer.handle_timeout
@: http.server.HTTPServer.process_request == socketserver.BaseServer.process_request
@: http.server.HTTPServer.serve_forever == socketserver.BaseServer.serve_forever
@: http.server.HTTPServer.server_activate == socketserver.TCPServer.server_activate
@: http.server.HTTPServer.server_bind
@: http.server.HTTPServer.server_close == socketserver.TCPServer.server_close
@: http.server.HTTPServer.shutdown == socketserver.BaseServer.shutdown
@: http.server.HTTPServer.shutdown_request == socketserver.TCPServer.shutdown_request
@: http.server.HTTPServer.verify_request == socketserver.BaseServer.verify_request
# ===== Process class `http.server.HTTPServer` =====

# ===== Process module `http.server` =====

        + T0 + * wsgiref.handlers +
                + T0 + * wsgiref.util +
                - T0 - * wsgiref.util -

# ----- Process module `wsgiref.util` -----
# Match: wsgiref.util: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.util

# ----- Process callable `wsgiref.util.request_uri` -----
# Match: wsgiref.util.request_uri: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.util.request_uri

# ----- Process callable `wsgiref.util.guess_scheme` -----
# Match: wsgiref.util.guess_scheme: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.util.guess_scheme

# ----- Process callable `wsgiref.util.shift_path_info` -----
# Match: wsgiref.util.shift_path_info: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.util.shift_path_info

# ----- Process callable `wsgiref.util.application_uri` -----
# Match: wsgiref.util.application_uri: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.util.application_uri

# ----- Process class `wsgiref.util.FileWrapper` -----
# Match: wsgiref.util.FileWrapper: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.util.FileWrapper

# ---- Search base class `builtins.object` ----
# Match: wsgiref.util.FileWrapper.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__delattr__ == builtins.object.__delattr__
# Match: wsgiref.util.FileWrapper.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__dir__ == builtins.object.__dir__
# Match: wsgiref.util.FileWrapper.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__eq__ == builtins.object.__eq__
# Match: wsgiref.util.FileWrapper.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__format__ == builtins.object.__format__
# Match: wsgiref.util.FileWrapper.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__ge__ == builtins.object.__ge__
# Match: wsgiref.util.FileWrapper.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__getattribute__ == builtins.object.__getattribute__
# Match: wsgiref.util.FileWrapper.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__gt__ == builtins.object.__gt__
# Match: wsgiref.util.FileWrapper.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__hash__ == builtins.object.__hash__
# Match: wsgiref.util.FileWrapper.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.util.FileWrapper.__init__ == builtins.object.__init__
# Match: wsgiref.util.FileWrapper.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__le__ == builtins.object.__le__
# Match: wsgiref.util.FileWrapper.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__lt__ == builtins.object.__lt__
# Match: wsgiref.util.FileWrapper.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__ne__ == builtins.object.__ne__
# Match: wsgiref.util.FileWrapper.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__new__ == builtins.object.__new__
# Match: wsgiref.util.FileWrapper.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__reduce__ == builtins.object.__reduce__
# Match: wsgiref.util.FileWrapper.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: wsgiref.util.FileWrapper.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__repr__ == builtins.object.__repr__
# Match: wsgiref.util.FileWrapper.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.util.FileWrapper.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.util.FileWrapper.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__sizeof__ == builtins.object.__sizeof__
# Match: wsgiref.util.FileWrapper.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__str__ == builtins.object.__str__
# Match: wsgiref.util.FileWrapper.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `wsgiref.util.FileWrapper` ----
# Match: wsgiref.util.FileWrapper.__getitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__getitem__
# Match: wsgiref.util.FileWrapper.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.util.FileWrapper.__init__
# Match: wsgiref.util.FileWrapper.__iter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__iter__
# Match: wsgiref.util.FileWrapper.__next__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.util.FileWrapper.__next__

# ---- Wrap class `wsgiref.util.FileWrapper`'s attributes ----
@: wsgiref.util.FileWrapper.__init__
@: wsgiref.util.FileWrapper.__setattr__ == builtins.object.__setattr__
# ===== Process class `wsgiref.util.FileWrapper` =====


# ----- Process callable `wsgiref.util.setup_testing_defaults` -----
# Match: wsgiref.util.setup_testing_defaults: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.util.setup_testing_defaults

# ----- Process callable `wsgiref.util.is_hop_by_hop` -----
# Match: wsgiref.util.is_hop_by_hop: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.util.is_hop_by_hop

# ----- Process callable `wsgiref.util._hoppish` -----
!: wsgiref.util._hoppish == None._hoppish
# ===== Process module `wsgiref.util` =====

                + T0 + * wsgiref.headers +
                - T0 - * wsgiref.headers -

# ----- Process module `wsgiref.headers` -----
# Match: wsgiref.headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.headers

# ----- Process callable `wsgiref.headers._formatparam` -----
# Match: wsgiref.headers._formatparam: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.headers._formatparam

# ----- Process class `wsgiref.headers.Headers` -----
# Match: wsgiref.headers.Headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.headers.Headers

# ---- Search base class `builtins.object` ----
# Match: wsgiref.headers.Headers.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__delattr__ == builtins.object.__delattr__
# Match: wsgiref.headers.Headers.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__dir__ == builtins.object.__dir__
# Match: wsgiref.headers.Headers.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__eq__ == builtins.object.__eq__
# Match: wsgiref.headers.Headers.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__format__ == builtins.object.__format__
# Match: wsgiref.headers.Headers.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__ge__ == builtins.object.__ge__
# Match: wsgiref.headers.Headers.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__getattribute__ == builtins.object.__getattribute__
# Match: wsgiref.headers.Headers.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__gt__ == builtins.object.__gt__
# Match: wsgiref.headers.Headers.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__hash__ == builtins.object.__hash__
# Match: wsgiref.headers.Headers.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.headers.Headers.__init__ == builtins.object.__init__
# Match: wsgiref.headers.Headers.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__le__ == builtins.object.__le__
# Match: wsgiref.headers.Headers.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__lt__ == builtins.object.__lt__
# Match: wsgiref.headers.Headers.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__ne__ == builtins.object.__ne__
# Match: wsgiref.headers.Headers.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__new__ == builtins.object.__new__
# Match: wsgiref.headers.Headers.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__reduce__ == builtins.object.__reduce__
# Match: wsgiref.headers.Headers.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: wsgiref.headers.Headers.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__repr__ == builtins.object.__repr__
# Match: wsgiref.headers.Headers.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.headers.Headers.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.headers.Headers.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__sizeof__ == builtins.object.__sizeof__
# Match: wsgiref.headers.Headers.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__str__ == builtins.object.__str__
# Match: wsgiref.headers.Headers.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `wsgiref.headers.Headers` ----
# Match: wsgiref.headers.Headers.__bytes__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__bytes__
# Match: wsgiref.headers.Headers.__contains__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__contains__
# Match: wsgiref.headers.Headers.__delitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__delitem__
# Match: wsgiref.headers.Headers.__getitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__getitem__
# Match: wsgiref.headers.Headers.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.headers.Headers.__init__
# Match: wsgiref.headers.Headers.__len__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__len__
# Match: wsgiref.headers.Headers.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__repr__
# Match: wsgiref.headers.Headers.__setitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__setitem__
# Match: wsgiref.headers.Headers.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.headers.Headers.__str__
# Match: wsgiref.headers.Headers._convert_string_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.headers.Headers._convert_string_type
# Match: wsgiref.headers.Headers.add_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.headers.Headers.add_header
# Match: wsgiref.headers.Headers.get: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.headers.Headers.get
# Match: wsgiref.headers.Headers.get_all: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.headers.Headers.get_all
# Match: wsgiref.headers.Headers.items: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.headers.Headers.items
# Match: wsgiref.headers.Headers.keys: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.headers.Headers.keys
# Match: wsgiref.headers.Headers.setdefault: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.headers.Headers.setdefault
# Match: wsgiref.headers.Headers.values: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.headers.Headers.values

# ---- Wrap class `wsgiref.headers.Headers`'s attributes ----
@: wsgiref.headers.Headers.__init__
@: wsgiref.headers.Headers.__setattr__ == builtins.object.__setattr__
@: wsgiref.headers.Headers._convert_string_type
@: wsgiref.headers.Headers.add_header
@: wsgiref.headers.Headers.get
@: wsgiref.headers.Headers.get_all
@: wsgiref.headers.Headers.items
@: wsgiref.headers.Headers.keys
@: wsgiref.headers.Headers.setdefault
@: wsgiref.headers.Headers.values
# ===== Process class `wsgiref.headers.Headers` =====

# ===== Process module `wsgiref.headers` =====

        - T0 - * wsgiref.handlers -

# ----- Process module `wsgiref.handlers` -----
# Match: wsgiref.handlers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers

# ----- Process callable `wsgiref.handlers.read_environ` -----
# Match: wsgiref.handlers.read_environ: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.read_environ

# ----- Process callable `wsgiref.handlers.guess_scheme` -----
!: wsgiref.handlers.guess_scheme == wsgiref.util.guess_scheme

# ----- Process class `wsgiref.handlers.Headers` -----
!: wsgiref.handlers.Headers == wsgiref.headers.Headers

# ----- Process class `wsgiref.handlers.BaseHandler` -----
# Match: wsgiref.handlers.BaseHandler: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler

# ---- Search base class `builtins.object` ----
# Match: wsgiref.handlers.BaseHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__delattr__ == builtins.object.__delattr__
# Match: wsgiref.handlers.BaseHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__dir__ == builtins.object.__dir__
# Match: wsgiref.handlers.BaseHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__eq__ == builtins.object.__eq__
# Match: wsgiref.handlers.BaseHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__format__ == builtins.object.__format__
# Match: wsgiref.handlers.BaseHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__ge__ == builtins.object.__ge__
# Match: wsgiref.handlers.BaseHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__getattribute__ == builtins.object.__getattribute__
# Match: wsgiref.handlers.BaseHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__gt__ == builtins.object.__gt__
# Match: wsgiref.handlers.BaseHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__hash__ == builtins.object.__hash__
# Match: wsgiref.handlers.BaseHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.__init__ == builtins.object.__init__
# Match: wsgiref.handlers.BaseHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__le__ == builtins.object.__le__
# Match: wsgiref.handlers.BaseHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__lt__ == builtins.object.__lt__
# Match: wsgiref.handlers.BaseHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__ne__ == builtins.object.__ne__
# Match: wsgiref.handlers.BaseHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__new__ == builtins.object.__new__
# Match: wsgiref.handlers.BaseHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__reduce__ == builtins.object.__reduce__
# Match: wsgiref.handlers.BaseHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: wsgiref.handlers.BaseHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__repr__ == builtins.object.__repr__
# Match: wsgiref.handlers.BaseHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.handlers.BaseHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.handlers.BaseHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__sizeof__ == builtins.object.__sizeof__
# Match: wsgiref.handlers.BaseHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__str__ == builtins.object.__str__
# Match: wsgiref.handlers.BaseHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `wsgiref.handlers.BaseHandler` ----
# Match: wsgiref.handlers.BaseHandler._convert_string_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler._convert_string_type
# Match: wsgiref.handlers.BaseHandler._flush: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler._flush
# Match: wsgiref.handlers.BaseHandler._write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler._write
# Match: wsgiref.handlers.BaseHandler.add_cgi_vars: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.add_cgi_vars
# Match: wsgiref.handlers.BaseHandler.cleanup_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.cleanup_headers
# Match: wsgiref.handlers.BaseHandler.client_is_modern: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.client_is_modern
# Match: wsgiref.handlers.BaseHandler.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.close
# Match: wsgiref.handlers.BaseHandler.error_output: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.error_output
# Match: wsgiref.handlers.BaseHandler.finish_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.finish_content
# Match: wsgiref.handlers.BaseHandler.finish_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.finish_response
# Match: wsgiref.handlers.BaseHandler.get_scheme: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.get_scheme
# Match: wsgiref.handlers.BaseHandler.get_stderr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.get_stderr
# Match: wsgiref.handlers.BaseHandler.get_stdin: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.get_stdin
# Match: wsgiref.handlers.BaseHandler.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.handle_error
# Match: wsgiref.handlers.BaseHandler.headers_class: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.headers_class == wsgiref.headers.Headers
# Match: wsgiref.handlers.BaseHandler.log_exception: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.log_exception
# Match: wsgiref.handlers.BaseHandler.result_is_file: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.result_is_file
# Match: wsgiref.handlers.BaseHandler.run: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.run
# Match: wsgiref.handlers.BaseHandler.send_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.send_headers
# Match: wsgiref.handlers.BaseHandler.send_preamble: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.send_preamble
# Match: wsgiref.handlers.BaseHandler.sendfile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.sendfile
# Match: wsgiref.handlers.BaseHandler.set_content_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.set_content_length
# Match: wsgiref.handlers.BaseHandler.setup_environ: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.setup_environ
# Match: wsgiref.handlers.BaseHandler.start_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.start_response
# Match: wsgiref.handlers.BaseHandler.write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.write
# Match: wsgiref.handlers.BaseHandler.wsgi_file_wrapper: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseHandler.wsgi_file_wrapper == wsgiref.util.FileWrapper

# ---- Wrap class `wsgiref.handlers.BaseHandler`'s attributes ----
@: wsgiref.handlers.BaseHandler.__init__ == builtins.object.__init__
@: wsgiref.handlers.BaseHandler.__setattr__ == builtins.object.__setattr__
@: wsgiref.handlers.BaseHandler._convert_string_type
@: wsgiref.handlers.BaseHandler._flush
@: wsgiref.handlers.BaseHandler._write
@: wsgiref.handlers.BaseHandler.add_cgi_vars
@: wsgiref.handlers.BaseHandler.cleanup_headers
@: wsgiref.handlers.BaseHandler.client_is_modern
@: wsgiref.handlers.BaseHandler.close
@: wsgiref.handlers.BaseHandler.error_output
@: wsgiref.handlers.BaseHandler.finish_content
@: wsgiref.handlers.BaseHandler.finish_response
@: wsgiref.handlers.BaseHandler.get_scheme
@: wsgiref.handlers.BaseHandler.get_stderr
@: wsgiref.handlers.BaseHandler.get_stdin
@: wsgiref.handlers.BaseHandler.handle_error
@: wsgiref.handlers.BaseHandler.headers_class == wsgiref.headers.Headers
@: wsgiref.handlers.BaseHandler.log_exception
@: wsgiref.handlers.BaseHandler.result_is_file
@: wsgiref.handlers.BaseHandler.run
@: wsgiref.handlers.BaseHandler.send_headers
@: wsgiref.handlers.BaseHandler.send_preamble
@: wsgiref.handlers.BaseHandler.sendfile
@: wsgiref.handlers.BaseHandler.set_content_length
@: wsgiref.handlers.BaseHandler.setup_environ
@: wsgiref.handlers.BaseHandler.start_response
@: wsgiref.handlers.BaseHandler.write
@: wsgiref.handlers.BaseHandler.wsgi_file_wrapper == wsgiref.util.FileWrapper
# ===== Process class `wsgiref.handlers.BaseHandler` =====


# ----- Process callable `wsgiref.handlers.is_hop_by_hop` -----
!: wsgiref.handlers.is_hop_by_hop == wsgiref.util.is_hop_by_hop

# ----- Process callable `wsgiref.handlers._needs_transcode` -----
# Match: wsgiref.handlers._needs_transcode: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers._needs_transcode

# ----- Process class `wsgiref.handlers.SimpleHandler` -----
# Match: wsgiref.handlers.SimpleHandler: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler

# ---- Search base class `builtins.object` ----
# Match: wsgiref.handlers.SimpleHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__delattr__ == builtins.object.__delattr__
# Match: wsgiref.handlers.SimpleHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__dir__ == builtins.object.__dir__
# Match: wsgiref.handlers.SimpleHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__eq__ == builtins.object.__eq__
# Match: wsgiref.handlers.SimpleHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__format__ == builtins.object.__format__
# Match: wsgiref.handlers.SimpleHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__ge__ == builtins.object.__ge__
# Match: wsgiref.handlers.SimpleHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__getattribute__ == builtins.object.__getattribute__
# Match: wsgiref.handlers.SimpleHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__gt__ == builtins.object.__gt__
# Match: wsgiref.handlers.SimpleHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__hash__ == builtins.object.__hash__
# Match: wsgiref.handlers.SimpleHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.__init__ == builtins.object.__init__
# Match: wsgiref.handlers.SimpleHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__le__ == builtins.object.__le__
# Match: wsgiref.handlers.SimpleHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__lt__ == builtins.object.__lt__
# Match: wsgiref.handlers.SimpleHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__ne__ == builtins.object.__ne__
# Match: wsgiref.handlers.SimpleHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__new__ == builtins.object.__new__
# Match: wsgiref.handlers.SimpleHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__reduce__ == builtins.object.__reduce__
# Match: wsgiref.handlers.SimpleHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: wsgiref.handlers.SimpleHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__repr__ == builtins.object.__repr__
# Match: wsgiref.handlers.SimpleHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.handlers.SimpleHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.handlers.SimpleHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__sizeof__ == builtins.object.__sizeof__
# Match: wsgiref.handlers.SimpleHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__str__ == builtins.object.__str__
# Match: wsgiref.handlers.SimpleHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.SimpleHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `wsgiref.handlers.BaseHandler` ----
# Match: wsgiref.handlers.SimpleHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.__init__ == builtins.object.__init__
# Match: wsgiref.handlers.SimpleHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.handlers.SimpleHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.handlers.SimpleHandler._convert_string_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler._convert_string_type == wsgiref.handlers.BaseHandler._convert_string_type
# Match: wsgiref.handlers.SimpleHandler._flush: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler._flush == wsgiref.handlers.BaseHandler._flush
# Match: wsgiref.handlers.SimpleHandler._write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler._write == wsgiref.handlers.BaseHandler._write
# Match: wsgiref.handlers.SimpleHandler.add_cgi_vars: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.add_cgi_vars == wsgiref.handlers.BaseHandler.add_cgi_vars
# Match: wsgiref.handlers.SimpleHandler.cleanup_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.cleanup_headers == wsgiref.handlers.BaseHandler.cleanup_headers
# Match: wsgiref.handlers.SimpleHandler.client_is_modern: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.client_is_modern == wsgiref.handlers.BaseHandler.client_is_modern
# Match: wsgiref.handlers.SimpleHandler.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.close == wsgiref.handlers.BaseHandler.close
# Match: wsgiref.handlers.SimpleHandler.error_output: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.error_output == wsgiref.handlers.BaseHandler.error_output
# Match: wsgiref.handlers.SimpleHandler.finish_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.finish_content == wsgiref.handlers.BaseHandler.finish_content
# Match: wsgiref.handlers.SimpleHandler.finish_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.finish_response == wsgiref.handlers.BaseHandler.finish_response
# Match: wsgiref.handlers.SimpleHandler.get_scheme: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.get_scheme == wsgiref.handlers.BaseHandler.get_scheme
# Match: wsgiref.handlers.SimpleHandler.get_stderr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.get_stderr == wsgiref.handlers.BaseHandler.get_stderr
# Match: wsgiref.handlers.SimpleHandler.get_stdin: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.get_stdin == wsgiref.handlers.BaseHandler.get_stdin
# Match: wsgiref.handlers.SimpleHandler.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.handle_error == wsgiref.handlers.BaseHandler.handle_error
# Match: wsgiref.handlers.SimpleHandler.headers_class: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.headers_class == wsgiref.handlers.BaseHandler.headers_class
# Match: wsgiref.handlers.SimpleHandler.log_exception: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.log_exception == wsgiref.handlers.BaseHandler.log_exception
# Match: wsgiref.handlers.SimpleHandler.result_is_file: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.result_is_file == wsgiref.handlers.BaseHandler.result_is_file
# Match: wsgiref.handlers.SimpleHandler.run: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.run == wsgiref.handlers.BaseHandler.run
# Match: wsgiref.handlers.SimpleHandler.send_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.send_headers == wsgiref.handlers.BaseHandler.send_headers
# Match: wsgiref.handlers.SimpleHandler.send_preamble: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.send_preamble == wsgiref.handlers.BaseHandler.send_preamble
# Match: wsgiref.handlers.SimpleHandler.sendfile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.sendfile == wsgiref.handlers.BaseHandler.sendfile
# Match: wsgiref.handlers.SimpleHandler.set_content_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.set_content_length == wsgiref.handlers.BaseHandler.set_content_length
# Match: wsgiref.handlers.SimpleHandler.setup_environ: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.setup_environ == wsgiref.handlers.BaseHandler.setup_environ
# Match: wsgiref.handlers.SimpleHandler.start_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.start_response == wsgiref.handlers.BaseHandler.start_response
# Match: wsgiref.handlers.SimpleHandler.write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.write == wsgiref.handlers.BaseHandler.write
# Match: wsgiref.handlers.SimpleHandler.wsgi_file_wrapper: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.wsgi_file_wrapper == wsgiref.handlers.BaseHandler.wsgi_file_wrapper

# ---- Search class `wsgiref.handlers.SimpleHandler` ----
# Match: wsgiref.handlers.SimpleHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.__init__
# Match: wsgiref.handlers.SimpleHandler._flush: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler._flush
# Match: wsgiref.handlers.SimpleHandler._write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler._write
# Match: wsgiref.handlers.SimpleHandler.add_cgi_vars: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.add_cgi_vars
# Match: wsgiref.handlers.SimpleHandler.get_stderr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.get_stderr
# Match: wsgiref.handlers.SimpleHandler.get_stdin: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.SimpleHandler.get_stdin

# ---- Wrap class `wsgiref.handlers.SimpleHandler`'s attributes ----
@: wsgiref.handlers.SimpleHandler.__init__
@: wsgiref.handlers.SimpleHandler.__setattr__ == builtins.object.__setattr__
@: wsgiref.handlers.SimpleHandler._convert_string_type == wsgiref.handlers.BaseHandler._convert_string_type
@: wsgiref.handlers.SimpleHandler._flush
@: wsgiref.handlers.SimpleHandler._write
@: wsgiref.handlers.SimpleHandler.add_cgi_vars
@: wsgiref.handlers.SimpleHandler.cleanup_headers == wsgiref.handlers.BaseHandler.cleanup_headers
@: wsgiref.handlers.SimpleHandler.client_is_modern == wsgiref.handlers.BaseHandler.client_is_modern
@: wsgiref.handlers.SimpleHandler.close == wsgiref.handlers.BaseHandler.close
@: wsgiref.handlers.SimpleHandler.error_output == wsgiref.handlers.BaseHandler.error_output
@: wsgiref.handlers.SimpleHandler.finish_content == wsgiref.handlers.BaseHandler.finish_content
@: wsgiref.handlers.SimpleHandler.finish_response == wsgiref.handlers.BaseHandler.finish_response
@: wsgiref.handlers.SimpleHandler.get_scheme == wsgiref.handlers.BaseHandler.get_scheme
@: wsgiref.handlers.SimpleHandler.get_stderr
@: wsgiref.handlers.SimpleHandler.get_stdin
@: wsgiref.handlers.SimpleHandler.handle_error == wsgiref.handlers.BaseHandler.handle_error
@: wsgiref.handlers.SimpleHandler.headers_class == wsgiref.handlers.BaseHandler.headers_class
@: wsgiref.handlers.SimpleHandler.log_exception == wsgiref.handlers.BaseHandler.log_exception
@: wsgiref.handlers.SimpleHandler.result_is_file == wsgiref.handlers.BaseHandler.result_is_file
@: wsgiref.handlers.SimpleHandler.run == wsgiref.handlers.BaseHandler.run
@: wsgiref.handlers.SimpleHandler.send_headers == wsgiref.handlers.BaseHandler.send_headers
@: wsgiref.handlers.SimpleHandler.send_preamble == wsgiref.handlers.BaseHandler.send_preamble
@: wsgiref.handlers.SimpleHandler.sendfile == wsgiref.handlers.BaseHandler.sendfile
@: wsgiref.handlers.SimpleHandler.set_content_length == wsgiref.handlers.BaseHandler.set_content_length
@: wsgiref.handlers.SimpleHandler.setup_environ == wsgiref.handlers.BaseHandler.setup_environ
@: wsgiref.handlers.SimpleHandler.start_response == wsgiref.handlers.BaseHandler.start_response
@: wsgiref.handlers.SimpleHandler.write == wsgiref.handlers.BaseHandler.write
@: wsgiref.handlers.SimpleHandler.wsgi_file_wrapper == wsgiref.handlers.BaseHandler.wsgi_file_wrapper
# ===== Process class `wsgiref.handlers.SimpleHandler` =====


# ----- Process callable `wsgiref.handlers._is_request` -----
!: wsgiref.handlers._is_request == None._is_request

# ----- Process callable `wsgiref.handlers.format_date_time` -----
# Match: wsgiref.handlers.format_date_time: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.format_date_time

# ----- Process class `wsgiref.handlers.FileWrapper` -----
!: wsgiref.handlers.FileWrapper == wsgiref.util.FileWrapper

# ----- Process class `wsgiref.handlers.IISCGIHandler` -----
# Match: wsgiref.handlers.IISCGIHandler: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler

# ---- Search base class `builtins.object` ----
# Match: wsgiref.handlers.IISCGIHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__delattr__ == builtins.object.__delattr__
# Match: wsgiref.handlers.IISCGIHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__dir__ == builtins.object.__dir__
# Match: wsgiref.handlers.IISCGIHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__eq__ == builtins.object.__eq__
# Match: wsgiref.handlers.IISCGIHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__format__ == builtins.object.__format__
# Match: wsgiref.handlers.IISCGIHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__ge__ == builtins.object.__ge__
# Match: wsgiref.handlers.IISCGIHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__getattribute__ == builtins.object.__getattribute__
# Match: wsgiref.handlers.IISCGIHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__gt__ == builtins.object.__gt__
# Match: wsgiref.handlers.IISCGIHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__hash__ == builtins.object.__hash__
# Match: wsgiref.handlers.IISCGIHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.__init__ == builtins.object.__init__
# Match: wsgiref.handlers.IISCGIHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__le__ == builtins.object.__le__
# Match: wsgiref.handlers.IISCGIHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__lt__ == builtins.object.__lt__
# Match: wsgiref.handlers.IISCGIHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__ne__ == builtins.object.__ne__
# Match: wsgiref.handlers.IISCGIHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__new__ == builtins.object.__new__
# Match: wsgiref.handlers.IISCGIHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__reduce__ == builtins.object.__reduce__
# Match: wsgiref.handlers.IISCGIHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: wsgiref.handlers.IISCGIHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__repr__ == builtins.object.__repr__
# Match: wsgiref.handlers.IISCGIHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.handlers.IISCGIHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.handlers.IISCGIHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__sizeof__ == builtins.object.__sizeof__
# Match: wsgiref.handlers.IISCGIHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__str__ == builtins.object.__str__
# Match: wsgiref.handlers.IISCGIHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.IISCGIHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `wsgiref.handlers.BaseHandler` ----
# Match: wsgiref.handlers.IISCGIHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.__init__ == builtins.object.__init__
# Match: wsgiref.handlers.IISCGIHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.handlers.IISCGIHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.handlers.IISCGIHandler._convert_string_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler._convert_string_type == wsgiref.handlers.BaseHandler._convert_string_type
# Match: wsgiref.handlers.IISCGIHandler._flush: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler._flush == wsgiref.handlers.BaseHandler._flush
# Match: wsgiref.handlers.IISCGIHandler._write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler._write == wsgiref.handlers.BaseHandler._write
# Match: wsgiref.handlers.IISCGIHandler.add_cgi_vars: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.add_cgi_vars == wsgiref.handlers.BaseHandler.add_cgi_vars
# Match: wsgiref.handlers.IISCGIHandler.cleanup_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.cleanup_headers == wsgiref.handlers.BaseHandler.cleanup_headers
# Match: wsgiref.handlers.IISCGIHandler.client_is_modern: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.client_is_modern == wsgiref.handlers.BaseHandler.client_is_modern
# Match: wsgiref.handlers.IISCGIHandler.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.close == wsgiref.handlers.BaseHandler.close
# Match: wsgiref.handlers.IISCGIHandler.error_output: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.error_output == wsgiref.handlers.BaseHandler.error_output
# Match: wsgiref.handlers.IISCGIHandler.finish_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.finish_content == wsgiref.handlers.BaseHandler.finish_content
# Match: wsgiref.handlers.IISCGIHandler.finish_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.finish_response == wsgiref.handlers.BaseHandler.finish_response
# Match: wsgiref.handlers.IISCGIHandler.get_scheme: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.get_scheme == wsgiref.handlers.BaseHandler.get_scheme
# Match: wsgiref.handlers.IISCGIHandler.get_stderr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.get_stderr == wsgiref.handlers.BaseHandler.get_stderr
# Match: wsgiref.handlers.IISCGIHandler.get_stdin: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.get_stdin == wsgiref.handlers.BaseHandler.get_stdin
# Match: wsgiref.handlers.IISCGIHandler.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.handle_error == wsgiref.handlers.BaseHandler.handle_error
# Match: wsgiref.handlers.IISCGIHandler.headers_class: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.headers_class == wsgiref.handlers.BaseHandler.headers_class
# Match: wsgiref.handlers.IISCGIHandler.log_exception: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.log_exception == wsgiref.handlers.BaseHandler.log_exception
# Match: wsgiref.handlers.IISCGIHandler.result_is_file: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.result_is_file == wsgiref.handlers.BaseHandler.result_is_file
# Match: wsgiref.handlers.IISCGIHandler.run: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.run == wsgiref.handlers.BaseHandler.run
# Match: wsgiref.handlers.IISCGIHandler.send_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.send_headers == wsgiref.handlers.BaseHandler.send_headers
# Match: wsgiref.handlers.IISCGIHandler.send_preamble: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.send_preamble == wsgiref.handlers.BaseHandler.send_preamble
# Match: wsgiref.handlers.IISCGIHandler.sendfile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.sendfile == wsgiref.handlers.BaseHandler.sendfile
# Match: wsgiref.handlers.IISCGIHandler.set_content_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.set_content_length == wsgiref.handlers.BaseHandler.set_content_length
# Match: wsgiref.handlers.IISCGIHandler.setup_environ: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.setup_environ == wsgiref.handlers.BaseHandler.setup_environ
# Match: wsgiref.handlers.IISCGIHandler.start_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.start_response == wsgiref.handlers.BaseHandler.start_response
# Match: wsgiref.handlers.IISCGIHandler.write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.write == wsgiref.handlers.BaseHandler.write
# Match: wsgiref.handlers.IISCGIHandler.wsgi_file_wrapper: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.wsgi_file_wrapper == wsgiref.handlers.BaseHandler.wsgi_file_wrapper

# ---- Search base class `wsgiref.handlers.SimpleHandler` ----
# Match: wsgiref.handlers.IISCGIHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.__init__ == wsgiref.handlers.SimpleHandler.__init__
# Match: wsgiref.handlers.IISCGIHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.handlers.IISCGIHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.handlers.IISCGIHandler._convert_string_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler._convert_string_type == wsgiref.handlers.BaseHandler._convert_string_type
# Match: wsgiref.handlers.IISCGIHandler._flush: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler._flush == wsgiref.handlers.SimpleHandler._flush
# Match: wsgiref.handlers.IISCGIHandler._write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler._write == wsgiref.handlers.SimpleHandler._write
# Match: wsgiref.handlers.IISCGIHandler.add_cgi_vars: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.add_cgi_vars == wsgiref.handlers.SimpleHandler.add_cgi_vars
# Match: wsgiref.handlers.IISCGIHandler.cleanup_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.cleanup_headers == wsgiref.handlers.BaseHandler.cleanup_headers
# Match: wsgiref.handlers.IISCGIHandler.client_is_modern: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.client_is_modern == wsgiref.handlers.BaseHandler.client_is_modern
# Match: wsgiref.handlers.IISCGIHandler.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.close == wsgiref.handlers.BaseHandler.close
# Match: wsgiref.handlers.IISCGIHandler.error_output: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.error_output == wsgiref.handlers.BaseHandler.error_output
# Match: wsgiref.handlers.IISCGIHandler.finish_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.finish_content == wsgiref.handlers.BaseHandler.finish_content
# Match: wsgiref.handlers.IISCGIHandler.finish_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.finish_response == wsgiref.handlers.BaseHandler.finish_response
# Match: wsgiref.handlers.IISCGIHandler.get_scheme: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.get_scheme == wsgiref.handlers.BaseHandler.get_scheme
# Match: wsgiref.handlers.IISCGIHandler.get_stderr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.get_stderr == wsgiref.handlers.SimpleHandler.get_stderr
# Match: wsgiref.handlers.IISCGIHandler.get_stdin: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.get_stdin == wsgiref.handlers.SimpleHandler.get_stdin
# Match: wsgiref.handlers.IISCGIHandler.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.handle_error == wsgiref.handlers.BaseHandler.handle_error
# Match: wsgiref.handlers.IISCGIHandler.headers_class: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.headers_class == wsgiref.handlers.SimpleHandler.headers_class
# Match: wsgiref.handlers.IISCGIHandler.log_exception: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.log_exception == wsgiref.handlers.BaseHandler.log_exception
# Match: wsgiref.handlers.IISCGIHandler.result_is_file: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.result_is_file == wsgiref.handlers.BaseHandler.result_is_file
# Match: wsgiref.handlers.IISCGIHandler.run: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.run == wsgiref.handlers.BaseHandler.run
# Match: wsgiref.handlers.IISCGIHandler.send_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.send_headers == wsgiref.handlers.BaseHandler.send_headers
# Match: wsgiref.handlers.IISCGIHandler.send_preamble: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.send_preamble == wsgiref.handlers.BaseHandler.send_preamble
# Match: wsgiref.handlers.IISCGIHandler.sendfile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.sendfile == wsgiref.handlers.BaseHandler.sendfile
# Match: wsgiref.handlers.IISCGIHandler.set_content_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.set_content_length == wsgiref.handlers.BaseHandler.set_content_length
# Match: wsgiref.handlers.IISCGIHandler.setup_environ: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.setup_environ == wsgiref.handlers.BaseHandler.setup_environ
# Match: wsgiref.handlers.IISCGIHandler.start_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.start_response == wsgiref.handlers.BaseHandler.start_response
# Match: wsgiref.handlers.IISCGIHandler.write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.write == wsgiref.handlers.BaseHandler.write
# Match: wsgiref.handlers.IISCGIHandler.wsgi_file_wrapper: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.wsgi_file_wrapper == wsgiref.handlers.SimpleHandler.wsgi_file_wrapper

# ---- Search base class `wsgiref.handlers.BaseCGIHandler` ----

# ---- Search class `wsgiref.handlers.IISCGIHandler` ----
# Match: wsgiref.handlers.IISCGIHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.IISCGIHandler.__init__

# ---- Wrap class `wsgiref.handlers.IISCGIHandler`'s attributes ----
@: wsgiref.handlers.IISCGIHandler.__init__
@: wsgiref.handlers.IISCGIHandler.__setattr__ == builtins.object.__setattr__
@: wsgiref.handlers.IISCGIHandler._convert_string_type == wsgiref.handlers.BaseHandler._convert_string_type
@: wsgiref.handlers.IISCGIHandler._flush == wsgiref.handlers.SimpleHandler._flush
@: wsgiref.handlers.IISCGIHandler._write == wsgiref.handlers.SimpleHandler._write
@: wsgiref.handlers.IISCGIHandler.add_cgi_vars == wsgiref.handlers.SimpleHandler.add_cgi_vars
@: wsgiref.handlers.IISCGIHandler.cleanup_headers == wsgiref.handlers.BaseHandler.cleanup_headers
@: wsgiref.handlers.IISCGIHandler.client_is_modern == wsgiref.handlers.BaseHandler.client_is_modern
@: wsgiref.handlers.IISCGIHandler.close == wsgiref.handlers.BaseHandler.close
@: wsgiref.handlers.IISCGIHandler.error_output == wsgiref.handlers.BaseHandler.error_output
@: wsgiref.handlers.IISCGIHandler.finish_content == wsgiref.handlers.BaseHandler.finish_content
@: wsgiref.handlers.IISCGIHandler.finish_response == wsgiref.handlers.BaseHandler.finish_response
@: wsgiref.handlers.IISCGIHandler.get_scheme == wsgiref.handlers.BaseHandler.get_scheme
@: wsgiref.handlers.IISCGIHandler.get_stderr == wsgiref.handlers.SimpleHandler.get_stderr
@: wsgiref.handlers.IISCGIHandler.get_stdin == wsgiref.handlers.SimpleHandler.get_stdin
@: wsgiref.handlers.IISCGIHandler.handle_error == wsgiref.handlers.BaseHandler.handle_error
@: wsgiref.handlers.IISCGIHandler.headers_class == wsgiref.handlers.SimpleHandler.headers_class
@: wsgiref.handlers.IISCGIHandler.log_exception == wsgiref.handlers.BaseHandler.log_exception
@: wsgiref.handlers.IISCGIHandler.result_is_file == wsgiref.handlers.BaseHandler.result_is_file
@: wsgiref.handlers.IISCGIHandler.run == wsgiref.handlers.BaseHandler.run
@: wsgiref.handlers.IISCGIHandler.send_headers == wsgiref.handlers.BaseHandler.send_headers
@: wsgiref.handlers.IISCGIHandler.send_preamble == wsgiref.handlers.BaseHandler.send_preamble
@: wsgiref.handlers.IISCGIHandler.sendfile == wsgiref.handlers.BaseHandler.sendfile
@: wsgiref.handlers.IISCGIHandler.set_content_length == wsgiref.handlers.BaseHandler.set_content_length
@: wsgiref.handlers.IISCGIHandler.setup_environ == wsgiref.handlers.BaseHandler.setup_environ
@: wsgiref.handlers.IISCGIHandler.start_response == wsgiref.handlers.BaseHandler.start_response
@: wsgiref.handlers.IISCGIHandler.write == wsgiref.handlers.BaseHandler.write
@: wsgiref.handlers.IISCGIHandler.wsgi_file_wrapper == wsgiref.handlers.SimpleHandler.wsgi_file_wrapper
# ===== Process class `wsgiref.handlers.IISCGIHandler` =====


# ----- Process class `wsgiref.handlers.CGIHandler` -----
# Match: wsgiref.handlers.CGIHandler: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler

# ---- Search base class `builtins.object` ----
# Match: wsgiref.handlers.CGIHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__delattr__ == builtins.object.__delattr__
# Match: wsgiref.handlers.CGIHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__dir__ == builtins.object.__dir__
# Match: wsgiref.handlers.CGIHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__eq__ == builtins.object.__eq__
# Match: wsgiref.handlers.CGIHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__format__ == builtins.object.__format__
# Match: wsgiref.handlers.CGIHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__ge__ == builtins.object.__ge__
# Match: wsgiref.handlers.CGIHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__getattribute__ == builtins.object.__getattribute__
# Match: wsgiref.handlers.CGIHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__gt__ == builtins.object.__gt__
# Match: wsgiref.handlers.CGIHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__hash__ == builtins.object.__hash__
# Match: wsgiref.handlers.CGIHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.__init__ == builtins.object.__init__
# Match: wsgiref.handlers.CGIHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__le__ == builtins.object.__le__
# Match: wsgiref.handlers.CGIHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__lt__ == builtins.object.__lt__
# Match: wsgiref.handlers.CGIHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__ne__ == builtins.object.__ne__
# Match: wsgiref.handlers.CGIHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__new__ == builtins.object.__new__
# Match: wsgiref.handlers.CGIHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__reduce__ == builtins.object.__reduce__
# Match: wsgiref.handlers.CGIHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: wsgiref.handlers.CGIHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__repr__ == builtins.object.__repr__
# Match: wsgiref.handlers.CGIHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.handlers.CGIHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.handlers.CGIHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__sizeof__ == builtins.object.__sizeof__
# Match: wsgiref.handlers.CGIHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__str__ == builtins.object.__str__
# Match: wsgiref.handlers.CGIHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.CGIHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `wsgiref.handlers.BaseHandler` ----
# Match: wsgiref.handlers.CGIHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.__init__ == builtins.object.__init__
# Match: wsgiref.handlers.CGIHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.handlers.CGIHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.handlers.CGIHandler._convert_string_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler._convert_string_type == wsgiref.handlers.BaseHandler._convert_string_type
# Match: wsgiref.handlers.CGIHandler._flush: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler._flush == wsgiref.handlers.BaseHandler._flush
# Match: wsgiref.handlers.CGIHandler._write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler._write == wsgiref.handlers.BaseHandler._write
# Match: wsgiref.handlers.CGIHandler.add_cgi_vars: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.add_cgi_vars == wsgiref.handlers.BaseHandler.add_cgi_vars
# Match: wsgiref.handlers.CGIHandler.cleanup_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.cleanup_headers == wsgiref.handlers.BaseHandler.cleanup_headers
# Match: wsgiref.handlers.CGIHandler.client_is_modern: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.client_is_modern == wsgiref.handlers.BaseHandler.client_is_modern
# Match: wsgiref.handlers.CGIHandler.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.close == wsgiref.handlers.BaseHandler.close
# Match: wsgiref.handlers.CGIHandler.error_output: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.error_output == wsgiref.handlers.BaseHandler.error_output
# Match: wsgiref.handlers.CGIHandler.finish_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.finish_content == wsgiref.handlers.BaseHandler.finish_content
# Match: wsgiref.handlers.CGIHandler.finish_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.finish_response == wsgiref.handlers.BaseHandler.finish_response
# Match: wsgiref.handlers.CGIHandler.get_scheme: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.get_scheme == wsgiref.handlers.BaseHandler.get_scheme
# Match: wsgiref.handlers.CGIHandler.get_stderr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.get_stderr == wsgiref.handlers.BaseHandler.get_stderr
# Match: wsgiref.handlers.CGIHandler.get_stdin: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.get_stdin == wsgiref.handlers.BaseHandler.get_stdin
# Match: wsgiref.handlers.CGIHandler.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.handle_error == wsgiref.handlers.BaseHandler.handle_error
# Match: wsgiref.handlers.CGIHandler.headers_class: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.headers_class == wsgiref.handlers.BaseHandler.headers_class
# Match: wsgiref.handlers.CGIHandler.log_exception: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.log_exception == wsgiref.handlers.BaseHandler.log_exception
# Match: wsgiref.handlers.CGIHandler.result_is_file: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.result_is_file == wsgiref.handlers.BaseHandler.result_is_file
# Match: wsgiref.handlers.CGIHandler.run: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.run == wsgiref.handlers.BaseHandler.run
# Match: wsgiref.handlers.CGIHandler.send_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.send_headers == wsgiref.handlers.BaseHandler.send_headers
# Match: wsgiref.handlers.CGIHandler.send_preamble: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.send_preamble == wsgiref.handlers.BaseHandler.send_preamble
# Match: wsgiref.handlers.CGIHandler.sendfile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.sendfile == wsgiref.handlers.BaseHandler.sendfile
# Match: wsgiref.handlers.CGIHandler.set_content_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.set_content_length == wsgiref.handlers.BaseHandler.set_content_length
# Match: wsgiref.handlers.CGIHandler.setup_environ: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.setup_environ == wsgiref.handlers.BaseHandler.setup_environ
# Match: wsgiref.handlers.CGIHandler.start_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.start_response == wsgiref.handlers.BaseHandler.start_response
# Match: wsgiref.handlers.CGIHandler.write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.write == wsgiref.handlers.BaseHandler.write
# Match: wsgiref.handlers.CGIHandler.wsgi_file_wrapper: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.wsgi_file_wrapper == wsgiref.handlers.BaseHandler.wsgi_file_wrapper

# ---- Search base class `wsgiref.handlers.SimpleHandler` ----
# Match: wsgiref.handlers.CGIHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.__init__ == wsgiref.handlers.SimpleHandler.__init__
# Match: wsgiref.handlers.CGIHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.handlers.CGIHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.handlers.CGIHandler._convert_string_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler._convert_string_type == wsgiref.handlers.BaseHandler._convert_string_type
# Match: wsgiref.handlers.CGIHandler._flush: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler._flush == wsgiref.handlers.SimpleHandler._flush
# Match: wsgiref.handlers.CGIHandler._write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler._write == wsgiref.handlers.SimpleHandler._write
# Match: wsgiref.handlers.CGIHandler.add_cgi_vars: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.add_cgi_vars == wsgiref.handlers.SimpleHandler.add_cgi_vars
# Match: wsgiref.handlers.CGIHandler.cleanup_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.cleanup_headers == wsgiref.handlers.BaseHandler.cleanup_headers
# Match: wsgiref.handlers.CGIHandler.client_is_modern: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.client_is_modern == wsgiref.handlers.BaseHandler.client_is_modern
# Match: wsgiref.handlers.CGIHandler.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.close == wsgiref.handlers.BaseHandler.close
# Match: wsgiref.handlers.CGIHandler.error_output: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.error_output == wsgiref.handlers.BaseHandler.error_output
# Match: wsgiref.handlers.CGIHandler.finish_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.finish_content == wsgiref.handlers.BaseHandler.finish_content
# Match: wsgiref.handlers.CGIHandler.finish_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.finish_response == wsgiref.handlers.BaseHandler.finish_response
# Match: wsgiref.handlers.CGIHandler.get_scheme: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.get_scheme == wsgiref.handlers.BaseHandler.get_scheme
# Match: wsgiref.handlers.CGIHandler.get_stderr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.get_stderr == wsgiref.handlers.SimpleHandler.get_stderr
# Match: wsgiref.handlers.CGIHandler.get_stdin: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.get_stdin == wsgiref.handlers.SimpleHandler.get_stdin
# Match: wsgiref.handlers.CGIHandler.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.handle_error == wsgiref.handlers.BaseHandler.handle_error
# Match: wsgiref.handlers.CGIHandler.headers_class: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.headers_class == wsgiref.handlers.SimpleHandler.headers_class
# Match: wsgiref.handlers.CGIHandler.log_exception: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.log_exception == wsgiref.handlers.BaseHandler.log_exception
# Match: wsgiref.handlers.CGIHandler.result_is_file: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.result_is_file == wsgiref.handlers.BaseHandler.result_is_file
# Match: wsgiref.handlers.CGIHandler.run: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.run == wsgiref.handlers.BaseHandler.run
# Match: wsgiref.handlers.CGIHandler.send_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.send_headers == wsgiref.handlers.BaseHandler.send_headers
# Match: wsgiref.handlers.CGIHandler.send_preamble: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.send_preamble == wsgiref.handlers.BaseHandler.send_preamble
# Match: wsgiref.handlers.CGIHandler.sendfile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.sendfile == wsgiref.handlers.BaseHandler.sendfile
# Match: wsgiref.handlers.CGIHandler.set_content_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.set_content_length == wsgiref.handlers.BaseHandler.set_content_length
# Match: wsgiref.handlers.CGIHandler.setup_environ: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.setup_environ == wsgiref.handlers.BaseHandler.setup_environ
# Match: wsgiref.handlers.CGIHandler.start_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.start_response == wsgiref.handlers.BaseHandler.start_response
# Match: wsgiref.handlers.CGIHandler.write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.write == wsgiref.handlers.BaseHandler.write
# Match: wsgiref.handlers.CGIHandler.wsgi_file_wrapper: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.wsgi_file_wrapper == wsgiref.handlers.SimpleHandler.wsgi_file_wrapper

# ---- Search base class `wsgiref.handlers.BaseCGIHandler` ----

# ---- Search class `wsgiref.handlers.CGIHandler` ----
# Match: wsgiref.handlers.CGIHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.CGIHandler.__init__

# ---- Wrap class `wsgiref.handlers.CGIHandler`'s attributes ----
@: wsgiref.handlers.CGIHandler.__init__
@: wsgiref.handlers.CGIHandler.__setattr__ == builtins.object.__setattr__
@: wsgiref.handlers.CGIHandler._convert_string_type == wsgiref.handlers.BaseHandler._convert_string_type
@: wsgiref.handlers.CGIHandler._flush == wsgiref.handlers.SimpleHandler._flush
@: wsgiref.handlers.CGIHandler._write == wsgiref.handlers.SimpleHandler._write
@: wsgiref.handlers.CGIHandler.add_cgi_vars == wsgiref.handlers.SimpleHandler.add_cgi_vars
@: wsgiref.handlers.CGIHandler.cleanup_headers == wsgiref.handlers.BaseHandler.cleanup_headers
@: wsgiref.handlers.CGIHandler.client_is_modern == wsgiref.handlers.BaseHandler.client_is_modern
@: wsgiref.handlers.CGIHandler.close == wsgiref.handlers.BaseHandler.close
@: wsgiref.handlers.CGIHandler.error_output == wsgiref.handlers.BaseHandler.error_output
@: wsgiref.handlers.CGIHandler.finish_content == wsgiref.handlers.BaseHandler.finish_content
@: wsgiref.handlers.CGIHandler.finish_response == wsgiref.handlers.BaseHandler.finish_response
@: wsgiref.handlers.CGIHandler.get_scheme == wsgiref.handlers.BaseHandler.get_scheme
@: wsgiref.handlers.CGIHandler.get_stderr == wsgiref.handlers.SimpleHandler.get_stderr
@: wsgiref.handlers.CGIHandler.get_stdin == wsgiref.handlers.SimpleHandler.get_stdin
@: wsgiref.handlers.CGIHandler.handle_error == wsgiref.handlers.BaseHandler.handle_error
@: wsgiref.handlers.CGIHandler.headers_class == wsgiref.handlers.SimpleHandler.headers_class
@: wsgiref.handlers.CGIHandler.log_exception == wsgiref.handlers.BaseHandler.log_exception
@: wsgiref.handlers.CGIHandler.result_is_file == wsgiref.handlers.BaseHandler.result_is_file
@: wsgiref.handlers.CGIHandler.run == wsgiref.handlers.BaseHandler.run
@: wsgiref.handlers.CGIHandler.send_headers == wsgiref.handlers.BaseHandler.send_headers
@: wsgiref.handlers.CGIHandler.send_preamble == wsgiref.handlers.BaseHandler.send_preamble
@: wsgiref.handlers.CGIHandler.sendfile == wsgiref.handlers.BaseHandler.sendfile
@: wsgiref.handlers.CGIHandler.set_content_length == wsgiref.handlers.BaseHandler.set_content_length
@: wsgiref.handlers.CGIHandler.setup_environ == wsgiref.handlers.BaseHandler.setup_environ
@: wsgiref.handlers.CGIHandler.start_response == wsgiref.handlers.BaseHandler.start_response
@: wsgiref.handlers.CGIHandler.write == wsgiref.handlers.BaseHandler.write
@: wsgiref.handlers.CGIHandler.wsgi_file_wrapper == wsgiref.handlers.SimpleHandler.wsgi_file_wrapper
# ===== Process class `wsgiref.handlers.CGIHandler` =====


# ----- Process class `wsgiref.handlers.BaseCGIHandler` -----
# Match: wsgiref.handlers.BaseCGIHandler: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler

# ---- Search base class `builtins.object` ----
# Match: wsgiref.handlers.BaseCGIHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__delattr__ == builtins.object.__delattr__
# Match: wsgiref.handlers.BaseCGIHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__dir__ == builtins.object.__dir__
# Match: wsgiref.handlers.BaseCGIHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__eq__ == builtins.object.__eq__
# Match: wsgiref.handlers.BaseCGIHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__format__ == builtins.object.__format__
# Match: wsgiref.handlers.BaseCGIHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__ge__ == builtins.object.__ge__
# Match: wsgiref.handlers.BaseCGIHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__getattribute__ == builtins.object.__getattribute__
# Match: wsgiref.handlers.BaseCGIHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__gt__ == builtins.object.__gt__
# Match: wsgiref.handlers.BaseCGIHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__hash__ == builtins.object.__hash__
# Match: wsgiref.handlers.BaseCGIHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.__init__ == builtins.object.__init__
# Match: wsgiref.handlers.BaseCGIHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__le__ == builtins.object.__le__
# Match: wsgiref.handlers.BaseCGIHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__lt__ == builtins.object.__lt__
# Match: wsgiref.handlers.BaseCGIHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__ne__ == builtins.object.__ne__
# Match: wsgiref.handlers.BaseCGIHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__new__ == builtins.object.__new__
# Match: wsgiref.handlers.BaseCGIHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__reduce__ == builtins.object.__reduce__
# Match: wsgiref.handlers.BaseCGIHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: wsgiref.handlers.BaseCGIHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__repr__ == builtins.object.__repr__
# Match: wsgiref.handlers.BaseCGIHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.handlers.BaseCGIHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.handlers.BaseCGIHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__sizeof__ == builtins.object.__sizeof__
# Match: wsgiref.handlers.BaseCGIHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__str__ == builtins.object.__str__
# Match: wsgiref.handlers.BaseCGIHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.handlers.BaseCGIHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `wsgiref.handlers.BaseHandler` ----
# Match: wsgiref.handlers.BaseCGIHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.__init__ == builtins.object.__init__
# Match: wsgiref.handlers.BaseCGIHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.handlers.BaseCGIHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.handlers.BaseCGIHandler._convert_string_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler._convert_string_type == wsgiref.handlers.BaseHandler._convert_string_type
# Match: wsgiref.handlers.BaseCGIHandler._flush: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler._flush == wsgiref.handlers.BaseHandler._flush
# Match: wsgiref.handlers.BaseCGIHandler._write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler._write == wsgiref.handlers.BaseHandler._write
# Match: wsgiref.handlers.BaseCGIHandler.add_cgi_vars: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.add_cgi_vars == wsgiref.handlers.BaseHandler.add_cgi_vars
# Match: wsgiref.handlers.BaseCGIHandler.cleanup_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.cleanup_headers == wsgiref.handlers.BaseHandler.cleanup_headers
# Match: wsgiref.handlers.BaseCGIHandler.client_is_modern: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.client_is_modern == wsgiref.handlers.BaseHandler.client_is_modern
# Match: wsgiref.handlers.BaseCGIHandler.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.close == wsgiref.handlers.BaseHandler.close
# Match: wsgiref.handlers.BaseCGIHandler.error_output: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.error_output == wsgiref.handlers.BaseHandler.error_output
# Match: wsgiref.handlers.BaseCGIHandler.finish_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.finish_content == wsgiref.handlers.BaseHandler.finish_content
# Match: wsgiref.handlers.BaseCGIHandler.finish_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.finish_response == wsgiref.handlers.BaseHandler.finish_response
# Match: wsgiref.handlers.BaseCGIHandler.get_scheme: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.get_scheme == wsgiref.handlers.BaseHandler.get_scheme
# Match: wsgiref.handlers.BaseCGIHandler.get_stderr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.get_stderr == wsgiref.handlers.BaseHandler.get_stderr
# Match: wsgiref.handlers.BaseCGIHandler.get_stdin: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.get_stdin == wsgiref.handlers.BaseHandler.get_stdin
# Match: wsgiref.handlers.BaseCGIHandler.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.handle_error == wsgiref.handlers.BaseHandler.handle_error
# Match: wsgiref.handlers.BaseCGIHandler.headers_class: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.headers_class == wsgiref.handlers.BaseHandler.headers_class
# Match: wsgiref.handlers.BaseCGIHandler.log_exception: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.log_exception == wsgiref.handlers.BaseHandler.log_exception
# Match: wsgiref.handlers.BaseCGIHandler.result_is_file: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.result_is_file == wsgiref.handlers.BaseHandler.result_is_file
# Match: wsgiref.handlers.BaseCGIHandler.run: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.run == wsgiref.handlers.BaseHandler.run
# Match: wsgiref.handlers.BaseCGIHandler.send_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.send_headers == wsgiref.handlers.BaseHandler.send_headers
# Match: wsgiref.handlers.BaseCGIHandler.send_preamble: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.send_preamble == wsgiref.handlers.BaseHandler.send_preamble
# Match: wsgiref.handlers.BaseCGIHandler.sendfile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.sendfile == wsgiref.handlers.BaseHandler.sendfile
# Match: wsgiref.handlers.BaseCGIHandler.set_content_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.set_content_length == wsgiref.handlers.BaseHandler.set_content_length
# Match: wsgiref.handlers.BaseCGIHandler.setup_environ: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.setup_environ == wsgiref.handlers.BaseHandler.setup_environ
# Match: wsgiref.handlers.BaseCGIHandler.start_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.start_response == wsgiref.handlers.BaseHandler.start_response
# Match: wsgiref.handlers.BaseCGIHandler.write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.write == wsgiref.handlers.BaseHandler.write
# Match: wsgiref.handlers.BaseCGIHandler.wsgi_file_wrapper: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.wsgi_file_wrapper == wsgiref.handlers.BaseHandler.wsgi_file_wrapper

# ---- Search base class `wsgiref.handlers.SimpleHandler` ----
# Match: wsgiref.handlers.BaseCGIHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.__init__ == wsgiref.handlers.SimpleHandler.__init__
# Match: wsgiref.handlers.BaseCGIHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.handlers.BaseCGIHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.handlers.BaseCGIHandler._convert_string_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler._convert_string_type == wsgiref.handlers.BaseHandler._convert_string_type
# Match: wsgiref.handlers.BaseCGIHandler._flush: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler._flush == wsgiref.handlers.SimpleHandler._flush
# Match: wsgiref.handlers.BaseCGIHandler._write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler._write == wsgiref.handlers.SimpleHandler._write
# Match: wsgiref.handlers.BaseCGIHandler.add_cgi_vars: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.add_cgi_vars == wsgiref.handlers.SimpleHandler.add_cgi_vars
# Match: wsgiref.handlers.BaseCGIHandler.cleanup_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.cleanup_headers == wsgiref.handlers.BaseHandler.cleanup_headers
# Match: wsgiref.handlers.BaseCGIHandler.client_is_modern: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.client_is_modern == wsgiref.handlers.BaseHandler.client_is_modern
# Match: wsgiref.handlers.BaseCGIHandler.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.close == wsgiref.handlers.BaseHandler.close
# Match: wsgiref.handlers.BaseCGIHandler.error_output: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.error_output == wsgiref.handlers.BaseHandler.error_output
# Match: wsgiref.handlers.BaseCGIHandler.finish_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.finish_content == wsgiref.handlers.BaseHandler.finish_content
# Match: wsgiref.handlers.BaseCGIHandler.finish_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.finish_response == wsgiref.handlers.BaseHandler.finish_response
# Match: wsgiref.handlers.BaseCGIHandler.get_scheme: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.get_scheme == wsgiref.handlers.BaseHandler.get_scheme
# Match: wsgiref.handlers.BaseCGIHandler.get_stderr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.get_stderr == wsgiref.handlers.SimpleHandler.get_stderr
# Match: wsgiref.handlers.BaseCGIHandler.get_stdin: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.get_stdin == wsgiref.handlers.SimpleHandler.get_stdin
# Match: wsgiref.handlers.BaseCGIHandler.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.handle_error == wsgiref.handlers.BaseHandler.handle_error
# Match: wsgiref.handlers.BaseCGIHandler.headers_class: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.headers_class == wsgiref.handlers.SimpleHandler.headers_class
# Match: wsgiref.handlers.BaseCGIHandler.log_exception: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.log_exception == wsgiref.handlers.BaseHandler.log_exception
# Match: wsgiref.handlers.BaseCGIHandler.result_is_file: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.result_is_file == wsgiref.handlers.BaseHandler.result_is_file
# Match: wsgiref.handlers.BaseCGIHandler.run: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.run == wsgiref.handlers.BaseHandler.run
# Match: wsgiref.handlers.BaseCGIHandler.send_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.send_headers == wsgiref.handlers.BaseHandler.send_headers
# Match: wsgiref.handlers.BaseCGIHandler.send_preamble: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.send_preamble == wsgiref.handlers.BaseHandler.send_preamble
# Match: wsgiref.handlers.BaseCGIHandler.sendfile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.sendfile == wsgiref.handlers.BaseHandler.sendfile
# Match: wsgiref.handlers.BaseCGIHandler.set_content_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.set_content_length == wsgiref.handlers.BaseHandler.set_content_length
# Match: wsgiref.handlers.BaseCGIHandler.setup_environ: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.setup_environ == wsgiref.handlers.BaseHandler.setup_environ
# Match: wsgiref.handlers.BaseCGIHandler.start_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.start_response == wsgiref.handlers.BaseHandler.start_response
# Match: wsgiref.handlers.BaseCGIHandler.write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.write == wsgiref.handlers.BaseHandler.write
# Match: wsgiref.handlers.BaseCGIHandler.wsgi_file_wrapper: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.handlers.BaseCGIHandler.wsgi_file_wrapper == wsgiref.handlers.SimpleHandler.wsgi_file_wrapper

# ---- Search class `wsgiref.handlers.BaseCGIHandler` ----

# ---- Wrap class `wsgiref.handlers.BaseCGIHandler`'s attributes ----
@: wsgiref.handlers.BaseCGIHandler.__init__ == wsgiref.handlers.SimpleHandler.__init__
@: wsgiref.handlers.BaseCGIHandler.__setattr__ == builtins.object.__setattr__
@: wsgiref.handlers.BaseCGIHandler._convert_string_type == wsgiref.handlers.BaseHandler._convert_string_type
@: wsgiref.handlers.BaseCGIHandler._flush == wsgiref.handlers.SimpleHandler._flush
@: wsgiref.handlers.BaseCGIHandler._write == wsgiref.handlers.SimpleHandler._write
@: wsgiref.handlers.BaseCGIHandler.add_cgi_vars == wsgiref.handlers.SimpleHandler.add_cgi_vars
@: wsgiref.handlers.BaseCGIHandler.cleanup_headers == wsgiref.handlers.BaseHandler.cleanup_headers
@: wsgiref.handlers.BaseCGIHandler.client_is_modern == wsgiref.handlers.BaseHandler.client_is_modern
@: wsgiref.handlers.BaseCGIHandler.close == wsgiref.handlers.BaseHandler.close
@: wsgiref.handlers.BaseCGIHandler.error_output == wsgiref.handlers.BaseHandler.error_output
@: wsgiref.handlers.BaseCGIHandler.finish_content == wsgiref.handlers.BaseHandler.finish_content
@: wsgiref.handlers.BaseCGIHandler.finish_response == wsgiref.handlers.BaseHandler.finish_response
@: wsgiref.handlers.BaseCGIHandler.get_scheme == wsgiref.handlers.BaseHandler.get_scheme
@: wsgiref.handlers.BaseCGIHandler.get_stderr == wsgiref.handlers.SimpleHandler.get_stderr
@: wsgiref.handlers.BaseCGIHandler.get_stdin == wsgiref.handlers.SimpleHandler.get_stdin
@: wsgiref.handlers.BaseCGIHandler.handle_error == wsgiref.handlers.BaseHandler.handle_error
@: wsgiref.handlers.BaseCGIHandler.headers_class == wsgiref.handlers.SimpleHandler.headers_class
@: wsgiref.handlers.BaseCGIHandler.log_exception == wsgiref.handlers.BaseHandler.log_exception
@: wsgiref.handlers.BaseCGIHandler.result_is_file == wsgiref.handlers.BaseHandler.result_is_file
@: wsgiref.handlers.BaseCGIHandler.run == wsgiref.handlers.BaseHandler.run
@: wsgiref.handlers.BaseCGIHandler.send_headers == wsgiref.handlers.BaseHandler.send_headers
@: wsgiref.handlers.BaseCGIHandler.send_preamble == wsgiref.handlers.BaseHandler.send_preamble
@: wsgiref.handlers.BaseCGIHandler.sendfile == wsgiref.handlers.BaseHandler.sendfile
@: wsgiref.handlers.BaseCGIHandler.set_content_length == wsgiref.handlers.BaseHandler.set_content_length
@: wsgiref.handlers.BaseCGIHandler.setup_environ == wsgiref.handlers.BaseHandler.setup_environ
@: wsgiref.handlers.BaseCGIHandler.start_response == wsgiref.handlers.BaseHandler.start_response
@: wsgiref.handlers.BaseCGIHandler.write == wsgiref.handlers.BaseHandler.write
@: wsgiref.handlers.BaseCGIHandler.wsgi_file_wrapper == wsgiref.handlers.SimpleHandler.wsgi_file_wrapper
# ===== Process class `wsgiref.handlers.BaseCGIHandler` =====

# ===== Process module `wsgiref.handlers` =====

- T0 - * wsgiref.simple_server -

# ----- Process module `wsgiref.simple_server` -----
# Match: wsgiref.simple_server: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server

# ----- Process class `wsgiref.simple_server.WSGIRequestHandler` -----
# Match: wsgiref.simple_server.WSGIRequestHandler: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler

# ---- Search base class `builtins.object` ----
# Match: wsgiref.simple_server.WSGIRequestHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__delattr__ == builtins.object.__delattr__
# Match: wsgiref.simple_server.WSGIRequestHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__dir__ == builtins.object.__dir__
# Match: wsgiref.simple_server.WSGIRequestHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__eq__ == builtins.object.__eq__
# Match: wsgiref.simple_server.WSGIRequestHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__format__ == builtins.object.__format__
# Match: wsgiref.simple_server.WSGIRequestHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__ge__ == builtins.object.__ge__
# Match: wsgiref.simple_server.WSGIRequestHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__getattribute__ == builtins.object.__getattribute__
# Match: wsgiref.simple_server.WSGIRequestHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__gt__ == builtins.object.__gt__
# Match: wsgiref.simple_server.WSGIRequestHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__hash__ == builtins.object.__hash__
# Match: wsgiref.simple_server.WSGIRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.__init__ == builtins.object.__init__
# Match: wsgiref.simple_server.WSGIRequestHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__le__ == builtins.object.__le__
# Match: wsgiref.simple_server.WSGIRequestHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__lt__ == builtins.object.__lt__
# Match: wsgiref.simple_server.WSGIRequestHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__ne__ == builtins.object.__ne__
# Match: wsgiref.simple_server.WSGIRequestHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__new__ == builtins.object.__new__
# Match: wsgiref.simple_server.WSGIRequestHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__reduce__ == builtins.object.__reduce__
# Match: wsgiref.simple_server.WSGIRequestHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: wsgiref.simple_server.WSGIRequestHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__repr__ == builtins.object.__repr__
# Match: wsgiref.simple_server.WSGIRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.simple_server.WSGIRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.simple_server.WSGIRequestHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__sizeof__ == builtins.object.__sizeof__
# Match: wsgiref.simple_server.WSGIRequestHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__str__ == builtins.object.__str__
# Match: wsgiref.simple_server.WSGIRequestHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIRequestHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseRequestHandler` ----
# Match: wsgiref.simple_server.WSGIRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
# Match: wsgiref.simple_server.WSGIRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.simple_server.WSGIRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.simple_server.WSGIRequestHandler.finish: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.finish == socketserver.BaseRequestHandler.finish
# Match: wsgiref.simple_server.WSGIRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.handle == socketserver.BaseRequestHandler.handle
# Match: wsgiref.simple_server.WSGIRequestHandler.setup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.setup == socketserver.BaseRequestHandler.setup

# ---- Search base class `socketserver.StreamRequestHandler` ----
# Match: wsgiref.simple_server.WSGIRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
# Match: wsgiref.simple_server.WSGIRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.simple_server.WSGIRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.simple_server.WSGIRequestHandler.finish: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.finish == socketserver.StreamRequestHandler.finish
# Match: wsgiref.simple_server.WSGIRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.handle == socketserver.BaseRequestHandler.handle
# Match: wsgiref.simple_server.WSGIRequestHandler.setup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.setup == socketserver.StreamRequestHandler.setup

# ---- Search base class `http.server.BaseHTTPRequestHandler` ----
# Match: wsgiref.simple_server.WSGIRequestHandler.MessageClass: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.MessageClass == http.server.BaseHTTPRequestHandler.MessageClass
# Match: wsgiref.simple_server.WSGIRequestHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
# Match: wsgiref.simple_server.WSGIRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.simple_server.WSGIRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.simple_server.WSGIRequestHandler.address_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.address_string == http.server.BaseHTTPRequestHandler.address_string
# Match: wsgiref.simple_server.WSGIRequestHandler.date_time_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.date_time_string == http.server.BaseHTTPRequestHandler.date_time_string
# Match: wsgiref.simple_server.WSGIRequestHandler.end_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.end_headers == http.server.BaseHTTPRequestHandler.end_headers
# Match: wsgiref.simple_server.WSGIRequestHandler.finish: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.finish == socketserver.StreamRequestHandler.finish
# Match: wsgiref.simple_server.WSGIRequestHandler.flush_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.flush_headers == http.server.BaseHTTPRequestHandler.flush_headers
# Match: wsgiref.simple_server.WSGIRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.handle == http.server.BaseHTTPRequestHandler.handle
# Match: wsgiref.simple_server.WSGIRequestHandler.handle_expect_100: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.handle_expect_100 == http.server.BaseHTTPRequestHandler.handle_expect_100
# Match: wsgiref.simple_server.WSGIRequestHandler.handle_one_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.handle_one_request == http.server.BaseHTTPRequestHandler.handle_one_request
# Match: wsgiref.simple_server.WSGIRequestHandler.log_date_time_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.log_date_time_string == http.server.BaseHTTPRequestHandler.log_date_time_string
# Match: wsgiref.simple_server.WSGIRequestHandler.log_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.log_error == http.server.BaseHTTPRequestHandler.log_error
# Match: wsgiref.simple_server.WSGIRequestHandler.log_message: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.log_message == http.server.BaseHTTPRequestHandler.log_message
# Match: wsgiref.simple_server.WSGIRequestHandler.log_request: {'regex': True, 'spec_arg': {'hide_below'}, 'spec_uri': '.+[.]log_request'}
@: wsgiref.simple_server.WSGIRequestHandler.log_request == http.server.BaseHTTPRequestHandler.log_request
# Match: wsgiref.simple_server.WSGIRequestHandler.parse_request: {'regex': False, 'spec_arg': {'hide_below', 'highlight'}, 'spec_uri': 'wsgiref.simple_server.WSGIRequestHandler.parse_request'}
@: wsgiref.simple_server.WSGIRequestHandler.parse_request == http.server.BaseHTTPRequestHandler.parse_request
# Match: wsgiref.simple_server.WSGIRequestHandler.send_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.send_error == http.server.BaseHTTPRequestHandler.send_error
# Match: wsgiref.simple_server.WSGIRequestHandler.send_header: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.send_header == http.server.BaseHTTPRequestHandler.send_header
# Match: wsgiref.simple_server.WSGIRequestHandler.send_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.send_response == http.server.BaseHTTPRequestHandler.send_response
# Match: wsgiref.simple_server.WSGIRequestHandler.send_response_only: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.send_response_only == http.server.BaseHTTPRequestHandler.send_response_only
# Match: wsgiref.simple_server.WSGIRequestHandler.setup: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.setup == socketserver.StreamRequestHandler.setup
# Match: wsgiref.simple_server.WSGIRequestHandler.version_string: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.version_string == http.server.BaseHTTPRequestHandler.version_string

# ---- Search class `wsgiref.simple_server.WSGIRequestHandler` ----
# Match: wsgiref.simple_server.WSGIRequestHandler.get_environ: {'regex': False, 'spec_arg': {'hide_below', 'highlight'}, 'spec_uri': 'wsgiref.simple_server.WSGIRequestHandler.get_environ'}
@: wsgiref.simple_server.WSGIRequestHandler.get_environ
# Match: wsgiref.simple_server.WSGIRequestHandler.get_stderr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.get_stderr
# Match: wsgiref.simple_server.WSGIRequestHandler.handle: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIRequestHandler.handle

# ---- Wrap class `wsgiref.simple_server.WSGIRequestHandler`'s attributes ----
@: wsgiref.simple_server.WSGIRequestHandler.MessageClass == http.server.BaseHTTPRequestHandler.MessageClass
@: wsgiref.simple_server.WSGIRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
@: wsgiref.simple_server.WSGIRequestHandler.__setattr__ == builtins.object.__setattr__
@: wsgiref.simple_server.WSGIRequestHandler.address_string == http.server.BaseHTTPRequestHandler.address_string
@: wsgiref.simple_server.WSGIRequestHandler.date_time_string == http.server.BaseHTTPRequestHandler.date_time_string
@: wsgiref.simple_server.WSGIRequestHandler.end_headers == http.server.BaseHTTPRequestHandler.end_headers
@: wsgiref.simple_server.WSGIRequestHandler.finish == socketserver.StreamRequestHandler.finish
@: wsgiref.simple_server.WSGIRequestHandler.flush_headers == http.server.BaseHTTPRequestHandler.flush_headers
@: wsgiref.simple_server.WSGIRequestHandler.get_environ
@: wsgiref.simple_server.WSGIRequestHandler.get_stderr
@: wsgiref.simple_server.WSGIRequestHandler.handle
@: wsgiref.simple_server.WSGIRequestHandler.handle_expect_100 == http.server.BaseHTTPRequestHandler.handle_expect_100
@: wsgiref.simple_server.WSGIRequestHandler.handle_one_request == http.server.BaseHTTPRequestHandler.handle_one_request
@: wsgiref.simple_server.WSGIRequestHandler.log_date_time_string == http.server.BaseHTTPRequestHandler.log_date_time_string
@: wsgiref.simple_server.WSGIRequestHandler.log_error == http.server.BaseHTTPRequestHandler.log_error
@: wsgiref.simple_server.WSGIRequestHandler.log_message == http.server.BaseHTTPRequestHandler.log_message
@: wsgiref.simple_server.WSGIRequestHandler.log_request == http.server.BaseHTTPRequestHandler.log_request
@: wsgiref.simple_server.WSGIRequestHandler.parse_request == http.server.BaseHTTPRequestHandler.parse_request
@: wsgiref.simple_server.WSGIRequestHandler.send_error == http.server.BaseHTTPRequestHandler.send_error
@: wsgiref.simple_server.WSGIRequestHandler.send_header == http.server.BaseHTTPRequestHandler.send_header
@: wsgiref.simple_server.WSGIRequestHandler.send_response == http.server.BaseHTTPRequestHandler.send_response
@: wsgiref.simple_server.WSGIRequestHandler.send_response_only == http.server.BaseHTTPRequestHandler.send_response_only
@: wsgiref.simple_server.WSGIRequestHandler.setup == socketserver.StreamRequestHandler.setup
@: wsgiref.simple_server.WSGIRequestHandler.version_string == http.server.BaseHTTPRequestHandler.version_string
# ===== Process class `wsgiref.simple_server.WSGIRequestHandler` =====


# ----- Process class `wsgiref.simple_server.ServerHandler` -----
# Match: wsgiref.simple_server.ServerHandler: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler

# ---- Search base class `builtins.object` ----
# Match: wsgiref.simple_server.ServerHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__delattr__ == builtins.object.__delattr__
# Match: wsgiref.simple_server.ServerHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__dir__ == builtins.object.__dir__
# Match: wsgiref.simple_server.ServerHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__eq__ == builtins.object.__eq__
# Match: wsgiref.simple_server.ServerHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__format__ == builtins.object.__format__
# Match: wsgiref.simple_server.ServerHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__ge__ == builtins.object.__ge__
# Match: wsgiref.simple_server.ServerHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__getattribute__ == builtins.object.__getattribute__
# Match: wsgiref.simple_server.ServerHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__gt__ == builtins.object.__gt__
# Match: wsgiref.simple_server.ServerHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__hash__ == builtins.object.__hash__
# Match: wsgiref.simple_server.ServerHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.__init__ == builtins.object.__init__
# Match: wsgiref.simple_server.ServerHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__le__ == builtins.object.__le__
# Match: wsgiref.simple_server.ServerHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__lt__ == builtins.object.__lt__
# Match: wsgiref.simple_server.ServerHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__ne__ == builtins.object.__ne__
# Match: wsgiref.simple_server.ServerHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__new__ == builtins.object.__new__
# Match: wsgiref.simple_server.ServerHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__reduce__ == builtins.object.__reduce__
# Match: wsgiref.simple_server.ServerHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: wsgiref.simple_server.ServerHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__repr__ == builtins.object.__repr__
# Match: wsgiref.simple_server.ServerHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.simple_server.ServerHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.simple_server.ServerHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__sizeof__ == builtins.object.__sizeof__
# Match: wsgiref.simple_server.ServerHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__str__ == builtins.object.__str__
# Match: wsgiref.simple_server.ServerHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.ServerHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `wsgiref.handlers.BaseHandler` ----
# Match: wsgiref.simple_server.ServerHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.__init__ == builtins.object.__init__
# Match: wsgiref.simple_server.ServerHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.simple_server.ServerHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.simple_server.ServerHandler._convert_string_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler._convert_string_type == wsgiref.handlers.BaseHandler._convert_string_type
# Match: wsgiref.simple_server.ServerHandler._flush: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler._flush == wsgiref.handlers.BaseHandler._flush
# Match: wsgiref.simple_server.ServerHandler._write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler._write == wsgiref.handlers.BaseHandler._write
# Match: wsgiref.simple_server.ServerHandler.add_cgi_vars: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.add_cgi_vars == wsgiref.handlers.BaseHandler.add_cgi_vars
# Match: wsgiref.simple_server.ServerHandler.cleanup_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.cleanup_headers == wsgiref.handlers.BaseHandler.cleanup_headers
# Match: wsgiref.simple_server.ServerHandler.client_is_modern: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.client_is_modern == wsgiref.handlers.BaseHandler.client_is_modern
# Match: wsgiref.simple_server.ServerHandler.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.close == wsgiref.handlers.BaseHandler.close
# Match: wsgiref.simple_server.ServerHandler.error_output: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.error_output == wsgiref.handlers.BaseHandler.error_output
# Match: wsgiref.simple_server.ServerHandler.finish_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.finish_content == wsgiref.handlers.BaseHandler.finish_content
# Match: wsgiref.simple_server.ServerHandler.finish_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.finish_response == wsgiref.handlers.BaseHandler.finish_response
# Match: wsgiref.simple_server.ServerHandler.get_scheme: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.get_scheme == wsgiref.handlers.BaseHandler.get_scheme
# Match: wsgiref.simple_server.ServerHandler.get_stderr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.get_stderr == wsgiref.handlers.BaseHandler.get_stderr
# Match: wsgiref.simple_server.ServerHandler.get_stdin: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.get_stdin == wsgiref.handlers.BaseHandler.get_stdin
# Match: wsgiref.simple_server.ServerHandler.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.handle_error == wsgiref.handlers.BaseHandler.handle_error
# Match: wsgiref.simple_server.ServerHandler.headers_class: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.headers_class == wsgiref.handlers.BaseHandler.headers_class
# Match: wsgiref.simple_server.ServerHandler.log_exception: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.log_exception == wsgiref.handlers.BaseHandler.log_exception
# Match: wsgiref.simple_server.ServerHandler.result_is_file: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.result_is_file == wsgiref.handlers.BaseHandler.result_is_file
# Match: wsgiref.simple_server.ServerHandler.run: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.run == wsgiref.handlers.BaseHandler.run
# Match: wsgiref.simple_server.ServerHandler.send_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.send_headers == wsgiref.handlers.BaseHandler.send_headers
# Match: wsgiref.simple_server.ServerHandler.send_preamble: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.send_preamble == wsgiref.handlers.BaseHandler.send_preamble
# Match: wsgiref.simple_server.ServerHandler.sendfile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.sendfile == wsgiref.handlers.BaseHandler.sendfile
# Match: wsgiref.simple_server.ServerHandler.set_content_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.set_content_length == wsgiref.handlers.BaseHandler.set_content_length
# Match: wsgiref.simple_server.ServerHandler.setup_environ: {'regex': False, 'spec_arg': {'hide_below', 'highlight'}, 'spec_uri': 'wsgiref.simple_server.ServerHandler.setup_environ'}
@: wsgiref.simple_server.ServerHandler.setup_environ == wsgiref.handlers.BaseHandler.setup_environ
# Match: wsgiref.simple_server.ServerHandler.start_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.start_response == wsgiref.handlers.BaseHandler.start_response
# Match: wsgiref.simple_server.ServerHandler.write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.write == wsgiref.handlers.BaseHandler.write
# Match: wsgiref.simple_server.ServerHandler.wsgi_file_wrapper: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.wsgi_file_wrapper == wsgiref.handlers.BaseHandler.wsgi_file_wrapper

# ---- Search base class `wsgiref.handlers.SimpleHandler` ----
# Match: wsgiref.simple_server.ServerHandler.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.__init__ == wsgiref.handlers.SimpleHandler.__init__
# Match: wsgiref.simple_server.ServerHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.simple_server.ServerHandler.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.simple_server.ServerHandler._convert_string_type: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler._convert_string_type == wsgiref.handlers.BaseHandler._convert_string_type
# Match: wsgiref.simple_server.ServerHandler._flush: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler._flush == wsgiref.handlers.SimpleHandler._flush
# Match: wsgiref.simple_server.ServerHandler._write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler._write == wsgiref.handlers.SimpleHandler._write
# Match: wsgiref.simple_server.ServerHandler.add_cgi_vars: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.add_cgi_vars == wsgiref.handlers.SimpleHandler.add_cgi_vars
# Match: wsgiref.simple_server.ServerHandler.cleanup_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.cleanup_headers == wsgiref.handlers.BaseHandler.cleanup_headers
# Match: wsgiref.simple_server.ServerHandler.client_is_modern: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.client_is_modern == wsgiref.handlers.BaseHandler.client_is_modern
# Match: wsgiref.simple_server.ServerHandler.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.close == wsgiref.handlers.BaseHandler.close
# Match: wsgiref.simple_server.ServerHandler.error_output: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.error_output == wsgiref.handlers.BaseHandler.error_output
# Match: wsgiref.simple_server.ServerHandler.finish_content: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.finish_content == wsgiref.handlers.BaseHandler.finish_content
# Match: wsgiref.simple_server.ServerHandler.finish_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.finish_response == wsgiref.handlers.BaseHandler.finish_response
# Match: wsgiref.simple_server.ServerHandler.get_scheme: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.get_scheme == wsgiref.handlers.BaseHandler.get_scheme
# Match: wsgiref.simple_server.ServerHandler.get_stderr: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.get_stderr == wsgiref.handlers.SimpleHandler.get_stderr
# Match: wsgiref.simple_server.ServerHandler.get_stdin: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.get_stdin == wsgiref.handlers.SimpleHandler.get_stdin
# Match: wsgiref.simple_server.ServerHandler.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.handle_error == wsgiref.handlers.BaseHandler.handle_error
# Match: wsgiref.simple_server.ServerHandler.headers_class: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.headers_class == wsgiref.handlers.SimpleHandler.headers_class
# Match: wsgiref.simple_server.ServerHandler.log_exception: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.log_exception == wsgiref.handlers.BaseHandler.log_exception
# Match: wsgiref.simple_server.ServerHandler.result_is_file: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.result_is_file == wsgiref.handlers.BaseHandler.result_is_file
# Match: wsgiref.simple_server.ServerHandler.run: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.run == wsgiref.handlers.BaseHandler.run
# Match: wsgiref.simple_server.ServerHandler.send_headers: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.send_headers == wsgiref.handlers.BaseHandler.send_headers
# Match: wsgiref.simple_server.ServerHandler.send_preamble: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.send_preamble == wsgiref.handlers.BaseHandler.send_preamble
# Match: wsgiref.simple_server.ServerHandler.sendfile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.sendfile == wsgiref.handlers.BaseHandler.sendfile
# Match: wsgiref.simple_server.ServerHandler.set_content_length: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.set_content_length == wsgiref.handlers.BaseHandler.set_content_length
# Match: wsgiref.simple_server.ServerHandler.setup_environ: {'regex': False, 'spec_arg': {'hide_below', 'highlight'}, 'spec_uri': 'wsgiref.simple_server.ServerHandler.setup_environ'}
@: wsgiref.simple_server.ServerHandler.setup_environ == wsgiref.handlers.BaseHandler.setup_environ
# Match: wsgiref.simple_server.ServerHandler.start_response: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.start_response == wsgiref.handlers.BaseHandler.start_response
# Match: wsgiref.simple_server.ServerHandler.write: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.write == wsgiref.handlers.BaseHandler.write
# Match: wsgiref.simple_server.ServerHandler.wsgi_file_wrapper: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.wsgi_file_wrapper == wsgiref.handlers.SimpleHandler.wsgi_file_wrapper

# ---- Search class `wsgiref.simple_server.ServerHandler` ----
# Match: wsgiref.simple_server.ServerHandler.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.ServerHandler.close

# ---- Wrap class `wsgiref.simple_server.ServerHandler`'s attributes ----
@: wsgiref.simple_server.ServerHandler.__init__ == wsgiref.handlers.SimpleHandler.__init__
@: wsgiref.simple_server.ServerHandler.__setattr__ == builtins.object.__setattr__
@: wsgiref.simple_server.ServerHandler._convert_string_type == wsgiref.handlers.BaseHandler._convert_string_type
@: wsgiref.simple_server.ServerHandler._flush == wsgiref.handlers.SimpleHandler._flush
@: wsgiref.simple_server.ServerHandler._write == wsgiref.handlers.SimpleHandler._write
@: wsgiref.simple_server.ServerHandler.add_cgi_vars == wsgiref.handlers.SimpleHandler.add_cgi_vars
@: wsgiref.simple_server.ServerHandler.cleanup_headers == wsgiref.handlers.BaseHandler.cleanup_headers
@: wsgiref.simple_server.ServerHandler.client_is_modern == wsgiref.handlers.BaseHandler.client_is_modern
@: wsgiref.simple_server.ServerHandler.close
@: wsgiref.simple_server.ServerHandler.error_output == wsgiref.handlers.BaseHandler.error_output
@: wsgiref.simple_server.ServerHandler.finish_content == wsgiref.handlers.BaseHandler.finish_content
@: wsgiref.simple_server.ServerHandler.finish_response == wsgiref.handlers.BaseHandler.finish_response
@: wsgiref.simple_server.ServerHandler.get_scheme == wsgiref.handlers.BaseHandler.get_scheme
@: wsgiref.simple_server.ServerHandler.get_stderr == wsgiref.handlers.SimpleHandler.get_stderr
@: wsgiref.simple_server.ServerHandler.get_stdin == wsgiref.handlers.SimpleHandler.get_stdin
@: wsgiref.simple_server.ServerHandler.handle_error == wsgiref.handlers.BaseHandler.handle_error
@: wsgiref.simple_server.ServerHandler.headers_class == wsgiref.handlers.SimpleHandler.headers_class
@: wsgiref.simple_server.ServerHandler.log_exception == wsgiref.handlers.BaseHandler.log_exception
@: wsgiref.simple_server.ServerHandler.result_is_file == wsgiref.handlers.BaseHandler.result_is_file
@: wsgiref.simple_server.ServerHandler.run == wsgiref.handlers.BaseHandler.run
@: wsgiref.simple_server.ServerHandler.send_headers == wsgiref.handlers.BaseHandler.send_headers
@: wsgiref.simple_server.ServerHandler.send_preamble == wsgiref.handlers.BaseHandler.send_preamble
@: wsgiref.simple_server.ServerHandler.sendfile == wsgiref.handlers.BaseHandler.sendfile
@: wsgiref.simple_server.ServerHandler.set_content_length == wsgiref.handlers.BaseHandler.set_content_length
@: wsgiref.simple_server.ServerHandler.setup_environ == wsgiref.handlers.BaseHandler.setup_environ
@: wsgiref.simple_server.ServerHandler.start_response == wsgiref.handlers.BaseHandler.start_response
@: wsgiref.simple_server.ServerHandler.write == wsgiref.handlers.BaseHandler.write
@: wsgiref.simple_server.ServerHandler.wsgi_file_wrapper == wsgiref.handlers.SimpleHandler.wsgi_file_wrapper
# ===== Process class `wsgiref.simple_server.ServerHandler` =====


# ----- Process callable `wsgiref.simple_server.make_server` -----
# Match: wsgiref.simple_server.make_server: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.make_server

# ----- Process class `wsgiref.simple_server.WSGIServer` -----
# Match: wsgiref.simple_server.WSGIServer: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer

# ---- Search base class `builtins.object` ----
# Match: wsgiref.simple_server.WSGIServer.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__delattr__ == builtins.object.__delattr__
# Match: wsgiref.simple_server.WSGIServer.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__dir__ == builtins.object.__dir__
# Match: wsgiref.simple_server.WSGIServer.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__eq__ == builtins.object.__eq__
# Match: wsgiref.simple_server.WSGIServer.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__format__ == builtins.object.__format__
# Match: wsgiref.simple_server.WSGIServer.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__ge__ == builtins.object.__ge__
# Match: wsgiref.simple_server.WSGIServer.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__getattribute__ == builtins.object.__getattribute__
# Match: wsgiref.simple_server.WSGIServer.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__gt__ == builtins.object.__gt__
# Match: wsgiref.simple_server.WSGIServer.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__hash__ == builtins.object.__hash__
# Match: wsgiref.simple_server.WSGIServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.__init__ == builtins.object.__init__
# Match: wsgiref.simple_server.WSGIServer.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__le__ == builtins.object.__le__
# Match: wsgiref.simple_server.WSGIServer.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__lt__ == builtins.object.__lt__
# Match: wsgiref.simple_server.WSGIServer.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__ne__ == builtins.object.__ne__
# Match: wsgiref.simple_server.WSGIServer.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__new__ == builtins.object.__new__
# Match: wsgiref.simple_server.WSGIServer.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__reduce__ == builtins.object.__reduce__
# Match: wsgiref.simple_server.WSGIServer.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: wsgiref.simple_server.WSGIServer.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__repr__ == builtins.object.__repr__
# Match: wsgiref.simple_server.WSGIServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.simple_server.WSGIServer.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.simple_server.WSGIServer.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__sizeof__ == builtins.object.__sizeof__
# Match: wsgiref.simple_server.WSGIServer.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__str__ == builtins.object.__str__
# Match: wsgiref.simple_server.WSGIServer.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'wsgiref[.].+[.]__(?!init)[^.]+__'}
!: wsgiref.simple_server.WSGIServer.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseServer` ----
# Match: wsgiref.simple_server.WSGIServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.__init__ == socketserver.BaseServer.__init__
# Match: wsgiref.simple_server.WSGIServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.simple_server.WSGIServer.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.simple_server.WSGIServer._handle_request_noblock: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: wsgiref.simple_server.WSGIServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.close_request == socketserver.BaseServer.close_request
# Match: wsgiref.simple_server.WSGIServer.finish_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.finish_request == socketserver.BaseServer.finish_request
# Match: wsgiref.simple_server.WSGIServer.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.handle_error == socketserver.BaseServer.handle_error
# Match: wsgiref.simple_server.WSGIServer.handle_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.handle_request == socketserver.BaseServer.handle_request
# Match: wsgiref.simple_server.WSGIServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: wsgiref.simple_server.WSGIServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.process_request == socketserver.BaseServer.process_request
# Match: wsgiref.simple_server.WSGIServer.serve_forever: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: wsgiref.simple_server.WSGIServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.server_activate == socketserver.BaseServer.server_activate
# Match: wsgiref.simple_server.WSGIServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.server_close == socketserver.BaseServer.server_close
# Match: wsgiref.simple_server.WSGIServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]service_actions'}
!: wsgiref.simple_server.WSGIServer.service_actions == socketserver.BaseServer.service_actions
# Match: wsgiref.simple_server.WSGIServer.shutdown: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.shutdown == socketserver.BaseServer.shutdown
# Match: wsgiref.simple_server.WSGIServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.shutdown_request == socketserver.BaseServer.shutdown_request
# Match: wsgiref.simple_server.WSGIServer.verify_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `socketserver.TCPServer` ----
# Match: wsgiref.simple_server.WSGIServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.__init__ == socketserver.TCPServer.__init__
# Match: wsgiref.simple_server.WSGIServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.simple_server.WSGIServer.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.simple_server.WSGIServer._handle_request_noblock: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: wsgiref.simple_server.WSGIServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.close_request == socketserver.TCPServer.close_request
# Match: wsgiref.simple_server.WSGIServer.fileno: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.fileno == socketserver.TCPServer.fileno
# Match: wsgiref.simple_server.WSGIServer.finish_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.finish_request == socketserver.BaseServer.finish_request
# Match: wsgiref.simple_server.WSGIServer.get_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.get_request == socketserver.TCPServer.get_request
# Match: wsgiref.simple_server.WSGIServer.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.handle_error == socketserver.BaseServer.handle_error
# Match: wsgiref.simple_server.WSGIServer.handle_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.handle_request == socketserver.BaseServer.handle_request
# Match: wsgiref.simple_server.WSGIServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: wsgiref.simple_server.WSGIServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.process_request == socketserver.BaseServer.process_request
# Match: wsgiref.simple_server.WSGIServer.serve_forever: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: wsgiref.simple_server.WSGIServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.server_activate == socketserver.TCPServer.server_activate
# Match: wsgiref.simple_server.WSGIServer.server_bind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.server_bind == socketserver.TCPServer.server_bind
# Match: wsgiref.simple_server.WSGIServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.server_close == socketserver.TCPServer.server_close
# Match: wsgiref.simple_server.WSGIServer.shutdown: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.shutdown == socketserver.BaseServer.shutdown
# Match: wsgiref.simple_server.WSGIServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.shutdown_request == socketserver.TCPServer.shutdown_request
# Match: wsgiref.simple_server.WSGIServer.verify_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `http.server.HTTPServer` ----
# Match: wsgiref.simple_server.WSGIServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.__init__ == socketserver.TCPServer.__init__
# Match: wsgiref.simple_server.WSGIServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: wsgiref.simple_server.WSGIServer.__setattr__ == builtins.object.__setattr__
# Match: wsgiref.simple_server.WSGIServer._handle_request_noblock: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: wsgiref.simple_server.WSGIServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.close_request == socketserver.TCPServer.close_request
# Match: wsgiref.simple_server.WSGIServer.fileno: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.fileno == socketserver.TCPServer.fileno
# Match: wsgiref.simple_server.WSGIServer.finish_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.finish_request == socketserver.BaseServer.finish_request
# Match: wsgiref.simple_server.WSGIServer.get_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.get_request == socketserver.TCPServer.get_request
# Match: wsgiref.simple_server.WSGIServer.handle_error: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.handle_error == socketserver.BaseServer.handle_error
# Match: wsgiref.simple_server.WSGIServer.handle_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.handle_request == socketserver.BaseServer.handle_request
# Match: wsgiref.simple_server.WSGIServer.handle_timeout: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: wsgiref.simple_server.WSGIServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.process_request == socketserver.BaseServer.process_request
# Match: wsgiref.simple_server.WSGIServer.serve_forever: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: wsgiref.simple_server.WSGIServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.server_activate == socketserver.TCPServer.server_activate
# Match: wsgiref.simple_server.WSGIServer.server_bind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.server_bind == http.server.HTTPServer.server_bind
# Match: wsgiref.simple_server.WSGIServer.server_close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.server_close == socketserver.TCPServer.server_close
# Match: wsgiref.simple_server.WSGIServer.shutdown: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.shutdown == socketserver.BaseServer.shutdown
# Match: wsgiref.simple_server.WSGIServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.shutdown_request == socketserver.TCPServer.shutdown_request
# Match: wsgiref.simple_server.WSGIServer.verify_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search class `wsgiref.simple_server.WSGIServer` ----
# Match: wsgiref.simple_server.WSGIServer.get_app: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.get_app
# Match: wsgiref.simple_server.WSGIServer.server_bind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.server_bind
# Match: wsgiref.simple_server.WSGIServer.set_app: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.set_app
# Match: wsgiref.simple_server.WSGIServer.setup_environ: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.WSGIServer.setup_environ

# ---- Wrap class `wsgiref.simple_server.WSGIServer`'s attributes ----
@: wsgiref.simple_server.WSGIServer.__init__ == socketserver.TCPServer.__init__
@: wsgiref.simple_server.WSGIServer.__setattr__ == builtins.object.__setattr__
@: wsgiref.simple_server.WSGIServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
@: wsgiref.simple_server.WSGIServer.close_request == socketserver.TCPServer.close_request
@: wsgiref.simple_server.WSGIServer.fileno == socketserver.TCPServer.fileno
@: wsgiref.simple_server.WSGIServer.finish_request == socketserver.BaseServer.finish_request
@: wsgiref.simple_server.WSGIServer.get_app
@: wsgiref.simple_server.WSGIServer.get_request == socketserver.TCPServer.get_request
@: wsgiref.simple_server.WSGIServer.handle_error == socketserver.BaseServer.handle_error
@: wsgiref.simple_server.WSGIServer.handle_request == socketserver.BaseServer.handle_request
@: wsgiref.simple_server.WSGIServer.handle_timeout == socketserver.BaseServer.handle_timeout
@: wsgiref.simple_server.WSGIServer.process_request == socketserver.BaseServer.process_request
@: wsgiref.simple_server.WSGIServer.serve_forever == socketserver.BaseServer.serve_forever
@: wsgiref.simple_server.WSGIServer.server_activate == socketserver.TCPServer.server_activate
@: wsgiref.simple_server.WSGIServer.server_bind
@: wsgiref.simple_server.WSGIServer.server_close == socketserver.TCPServer.server_close
@: wsgiref.simple_server.WSGIServer.set_app
@: wsgiref.simple_server.WSGIServer.setup_environ
@: wsgiref.simple_server.WSGIServer.shutdown == socketserver.BaseServer.shutdown
@: wsgiref.simple_server.WSGIServer.shutdown_request == socketserver.TCPServer.shutdown_request
@: wsgiref.simple_server.WSGIServer.verify_request == socketserver.BaseServer.verify_request
# ===== Process class `wsgiref.simple_server.WSGIServer` =====


# ----- Process class `wsgiref.simple_server.BaseHTTPRequestHandler` -----
!: wsgiref.simple_server.BaseHTTPRequestHandler == http.server.BaseHTTPRequestHandler

# ----- Process class `wsgiref.simple_server.SimpleHandler` -----
!: wsgiref.simple_server.SimpleHandler == wsgiref.handlers.SimpleHandler

# ----- Process callable `wsgiref.simple_server.python_implementation` -----
!: wsgiref.simple_server.python_implementation == platform.python_implementation

# ----- Process class `wsgiref.simple_server.HTTPServer` -----
!: wsgiref.simple_server.HTTPServer == http.server.HTTPServer

# ----- Process callable `wsgiref.simple_server.demo_app` -----
# Match: wsgiref.simple_server.demo_app: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'wsgiref([.].+)?'}
@: wsgiref.simple_server.demo_app
# ===== Process module `wsgiref.simple_server` =====


# ----- Process module `__main__` -----
# Match: __main__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '__main__([.].+)?'}
@: __main__

# ----- Process class `__main__.WSGIRequestHandler` -----
!: __main__.WSGIRequestHandler == wsgiref.simple_server.WSGIRequestHandler

# ----- Process callable `__main__.main` -----
# Match: __main__.main: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '__main__([.].+)?'}
@: __main__.main

# ----- Process callable `__main__.make_server` -----
!: __main__.make_server == wsgiref.simple_server.make_server

# ----- Process class `__main__.WSGIServer` -----
!: __main__.WSGIServer == wsgiref.simple_server.WSGIServer

# ----- Process callable `__main__.CustomApp` -----
# Match: __main__.CustomApp: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '__main__([.].+)?'}
@: __main__.CustomApp
# ===== Process module `__main__` =====

         _____ ___            _                           _               
   _    |_   _/ _ \     _    / |    _     _ __ ___   __ _(_)_ __      _   
 _| |_    | || | | |  _| |_  | |  _| |_  | '_ ` _ \ / _` | | '_ \   _| |_ 
|_   _|   | || |_| | |_   _| | | |_   _| | | | | | | (_| | | | | | |_   _|
  |_|     |_| \___/    |_|   |_|   |_|   |_| |_| |_|\__,_|_|_| |_|   |_|  
                                                                          

+ T0: 1: __main__.main => 
                 _____ ___            ____                            _                                                 
           _    |_   _/ _ \     _    |___ \     _     _ __ ___   __ _| | _____     ___  ___ _ ____   _____ _ __     _   
         _| |_    | || | | |  _| |_    __) |  _| |_  | '_ ` _ \ / _` | |/ / _ \   / __|/ _ \ '__\ \ / / _ \ '__|  _| |_ 
        |_   _|   | || |_| | |_   _|  / __/  |_   _| | | | | | | (_| |   <  __/   \__ \  __/ |   \ V /  __/ |    |_   _|
          |_|     |_| \___/    |_|   |_____|   |_|   |_| |_| |_|\__,_|_|\_\___|___|___/\___|_|    \_/ \___|_|      |_|  
                                                                             |_____|                                    
        
        + T0: 2: wsgiref.simple_server.make_server => ( host='127.0.0.1', port=8000, app=<aoiktracecall.wrap.CallWrapper object at 0x00000151E8D47550>, server_class=<class 'wsgiref.simple_server.WSGIServer'>, handler_class=<class 'wsgiref.simple_server.WSGIRequestHandler'> )
                         _____ ___            _____           _____ ____ ____  ____                                     _       _ _                      
                   _    |_   _/ _ \     _    |___ /     _    |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __          (_)_ __ (_) |_                _   
                 _| |_    | || | | |  _| |_    |_ \   _| |_    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__|         | | '_ \| | __|             _| |_ 
                |_   _|   | || |_| | |_   _|  ___) | |_   _|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _          | | | | | | |_             |_   _|
                  |_|     |_| \___/    |_|   |____/    |_|     |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)____ ____|_|_| |_|_|\__|____ _____    |_|  
                                                                                                            |_____|_____|           |_____|_____|        
                
                + T0: 3: wsgiref.simple_server.WSGIServer.__init__ -> socketserver.TCPServer.__init__ => ( server_address=('127.0.0.1', 8000), RequestHandlerClass=<class 'wsgiref.simple_server.WSGIRequestHandler'>, bind_and_activate=True )
                                 _____ ___            _  _             ____                 ____                                     _       _ _                      
                           _    |_   _/ _ \     _    | || |      _    | __ )  __ _ ___  ___/ ___|  ___ _ ____   _____ _ __          (_)_ __ (_) |_                _   
                         _| |_    | || | | |  _| |_  | || |_   _| |_  |  _ \ / _` / __|/ _ \___ \ / _ \ '__\ \ / / _ \ '__|         | | '_ \| | __|             _| |_ 
                        |_   _|   | || |_| | |_   _| |__   _| |_   _| | |_) | (_| \__ \  __/___) |  __/ |   \ V /  __/ | _          | | | | | | |_             |_   _|
                          |_|     |_| \___/    |_|      |_|     |_|   |____/ \__,_|___/\___|____/ \___|_|    \_/ \___|_|(_)____ ____|_|_| |_|_|\__|____ _____    |_|  
                                                                                                                         |_____|_____|           |_____|_____|        
                        
                        + T0: 4: wsgiref.simple_server.WSGIServer.__init__ -> socketserver.BaseServer.__init__ => ( server_address=('127.0.0.1', 8000), RequestHandlerClass=<class 'wsgiref.simple_server.WSGIRequestHandler'> )
                                + T0: 5: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ => ( name='server_address', value=('127.0.0.1', 8000) )
                                - T0: 5: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ <= None
                                + T0: 6: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ => ( name='RequestHandlerClass', value=<class 'wsgiref.simple_server.WSGIRequestHandler'> )
                                - T0: 6: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ <= None
                                + T0: 7: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ => ( name='_BaseServer__is_shut_down', value=<threading.Event object at 0x00000151E8D9B8D0> )
                                - T0: 7: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ <= None
                                + T0: 8: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ => ( name='_BaseServer__shutdown_request', value=False )
                                - T0: 8: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ <= None
                        - T0: 4: wsgiref.simple_server.WSGIServer.__init__ -> socketserver.BaseServer.__init__ <= None
                                 _____ ___            _  _             ____                 ____                                     _       _ _                      
                                |_   _/ _ \          | || |           | __ )  __ _ ___  ___/ ___|  ___ _ ____   _____ _ __          (_)_ __ (_) |_                    
                         _____    | || | | |  _____  | || |_   _____  |  _ \ / _` / __|/ _ \___ \ / _ \ '__\ \ / / _ \ '__|         | | '_ \| | __|             _____ 
                        |_____|   | || |_| | |_____| |__   _| |_____| | |_) | (_| \__ \  __/___) |  __/ |   \ V /  __/ | _          | | | | | | |_             |_____|
                                  |_| \___/             |_|           |____/ \__,_|___/\___|____/ \___|_|    \_/ \___|_|(_)____ ____|_|_| |_|_|\__|____ _____         
                                                                                                                         |_____|_____|           |_____|_____|        
                        
                                 _____ ___             ___                           _        _               _       _ _                      
                           _    |_   _/ _ \     _     / _ \     _     ___  ___   ___| | _____| |_            (_)_ __ (_) |_                _   
                         _| |_    | || | | |  _| |_  | (_) |  _| |_  / __|/ _ \ / __| |/ / _ \ __|           | | '_ \| | __|             _| |_ 
                        |_   _|   | || |_| | |_   _|  \__, | |_   _| \__ \ (_) | (__|   <  __/ |_ _          | | | | | | |_             |_   _|
                          |_|     |_| \___/    |_|      /_/    |_|   |___/\___/ \___|_|\_\___|\__(_)____ ____|_|_| |_|_|\__|____ _____    |_|  
                                                                                                  |_____|_____|           |_____|_____|        
                        
                        + T0: 9: socket.socket.__init__ => ( family=<AddressFamily.AF_INET: 2>, type=<SocketKind.SOCK_STREAM: 1>, proto=0, fileno=None )
                                + T0: 10: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_io_refs', value=0 )
                                - T0: 10: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                                + T0: 11: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_closed', value=False )
                                - T0: 11: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                        - T0: 9: socket.socket.__init__ <= None
                                 _____ ___             ___                           _        _               _       _ _                      
                                |_   _/ _ \           / _ \           ___  ___   ___| | _____| |_            (_)_ __ (_) |_                    
                         _____    | || | | |  _____  | (_) |  _____  / __|/ _ \ / __| |/ / _ \ __|           | | '_ \| | __|             _____ 
                        |_____|   | || |_| | |_____|  \__, | |_____| \__ \ (_) | (__|   <  __/ |_ _          | | | | | | |_             |_____|
                                  |_| \___/             /_/          |___/\___/ \___|_|\_\___|\__(_)____ ____|_|_| |_|_|\__|____ _____         
                                                                                                  |_____|_____|           |_____|_____|        
                        
                        + T0: 12: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ => ( name='socket', value=<socket.socket fd=1140, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0> )
                        - T0: 12: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ <= None
                                 _____ ___            _ _____         
                           _    |_   _/ _ \     _    / |___ /     _   
                         _| |_    | || | | |  _| |_  | | |_ \   _| |_ 
                        |_   _|   | || |_| | |_   _| | |___) | |_   _|
                          |_|     |_| \___/    |_|   |_|____/    |_|  
                                                                      
                        __        ______   ____ ___ ____                                                         _     _           _         
                        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___  ___ _ ____   _____ _ __ | |__ (_)_ __   __| |    _   
                         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ '__\ \ / / _ \ '__|| '_ \| | '_ \ / _` |  _| |_ 
                          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _\__ \  __/ |   \ V /  __/ |   | |_) | | | | | (_| | |_   _|
                           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___/\___|_|    \_/ \___|_|___|_.__/|_|_| |_|\__,_|   |_|  
                                                                                                           |_____|                           
                        
                        + T0: 13: wsgiref.simple_server.WSGIServer.server_bind => 
                                         _____ ___            _ _  _           
                                   _    |_   _/ _ \     _    / | || |      _   
                                 _| |_    | || | | |  _| |_  | | || |_   _| |_ 
                                |_   _|   | || |_| | |_   _| | |__   _| |_   _|
                                  |_|     |_| \___/    |_|   |_|  |_|     |_|  
                                                                               
                                __        ______   ____ ___ ____                                                         _     _           _         
                                \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___  ___ _ ____   _____ _ __ | |__ (_)_ __   __| |    _   
                                 \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ '__\ \ / / _ \ '__|| '_ \| | '_ \ / _` |  _| |_ 
                                  \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _\__ \  __/ |   \ V /  __/ |   | |_) | | | | | (_| | |_   _|
                                   \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___/\___|_|    \_/ \___|_|___|_.__/|_|_| |_|\__,_|   |_|  
                                                                                                                   |_____|                           
                                
                                + T0: 14: wsgiref.simple_server.WSGIServer.server_bind -> http.server.HTTPServer.server_bind => 
                                                 _____ ___            _ ____          
                                           _    |_   _/ _ \     _    / | ___|     _   
                                         _| |_    | || | | |  _| |_  | |___ \   _| |_ 
                                        |_   _|   | || |_| | |_   _| | |___) | |_   _|
                                          |_|     |_| \___/    |_|   |_|____/    |_|  
                                                                                      
                                        __        ______   ____ ___ ____                                                         _     _           _         
                                        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___  ___ _ ____   _____ _ __ | |__ (_)_ __   __| |    _   
                                         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ '__\ \ / / _ \ '__|| '_ \| | '_ \ / _` |  _| |_ 
                                          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _\__ \  __/ |   \ V /  __/ |   | |_) | | | | | (_| | |_   _|
                                           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___/\___|_|    \_/ \___|_|___|_.__/|_|_| |_|\__,_|   |_|  
                                                                                                                           |_____|                           
                                        
                                        + T0: 15: wsgiref.simple_server.WSGIServer.server_bind -> socketserver.TCPServer.server_bind => 
                                                         _____ ___            _  __                            _        _              _                  _               _           
                                                   _    |_   _/ _ \     _    / |/ /_      _     ___  ___   ___| | _____| |_   ___  ___| |_ ___  ___   ___| | _____  _ __ | |_     _   
                                                 _| |_    | || | | |  _| |_  | | '_ \   _| |_  / __|/ _ \ / __| |/ / _ \ __| / __|/ _ \ __/ __|/ _ \ / __| |/ / _ \| '_ \| __|  _| |_ 
                                                |_   _|   | || |_| | |_   _| | | (_) | |_   _| \__ \ (_) | (__|   <  __/ |_ _\__ \  __/ |_\__ \ (_) | (__|   < (_) | |_) | |_  |_   _|
                                                  |_|     |_| \___/    |_|   |_|\___/    |_|   |___/\___/ \___|_|\_\___|\__(_)___/\___|\__|___/\___/ \___|_|\_\___/| .__/ \__|   |_|  
                                                                                                                                                                   |_|                
                                                
                                                + T0: 16: socket.socket.setsockopt -> _socket.socket.setsockopt => ( <socket.socket fd=1140, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0>, 65535, 4, 1 )
                                                - T0: 16: socket.socket.setsockopt -> _socket.socket.setsockopt <= None
                                                         _____ ___            _  __                            _        _              _                  _               _           
                                                        |_   _/ _ \          / |/ /_            ___  ___   ___| | _____| |_   ___  ___| |_ ___  ___   ___| | _____  _ __ | |_         
                                                 _____    | || | | |  _____  | | '_ \   _____  / __|/ _ \ / __| |/ / _ \ __| / __|/ _ \ __/ __|/ _ \ / __| |/ / _ \| '_ \| __|  _____ 
                                                |_____|   | || |_| | |_____| | | (_) | |_____| \__ \ (_) | (__|   <  __/ |_ _\__ \  __/ |_\__ \ (_) | (__|   < (_) | |_) | |_  |_____|
                                                          |_| \___/          |_|\___/          |___/\___/ \___|_|\_\___|\__(_)___/\___|\__|___/\___/ \___|_|\_\___/| .__/ \__|        
                                                                                                                                                                   |_|                
                                                
                                                         _____ ___            _ _____                          _        _     _     _           _         
                                                   _    |_   _/ _ \     _    / |___  |    _     ___  ___   ___| | _____| |_  | |__ (_)_ __   __| |    _   
                                                 _| |_    | || | | |  _| |_  | |  / /   _| |_  / __|/ _ \ / __| |/ / _ \ __| | '_ \| | '_ \ / _` |  _| |_ 
                                                |_   _|   | || |_| | |_   _| | | / /   |_   _| \__ \ (_) | (__|   <  __/ |_ _| |_) | | | | | (_| | |_   _|
                                                  |_|     |_| \___/    |_|   |_|/_/      |_|   |___/\___/ \___|_|\_\___|\__(_)_.__/|_|_| |_|\__,_|   |_|  
                                                                                                                                                          
                                                
                                                + T0: 17: socket.socket.bind -> _socket.socket.bind => ( <socket.socket fd=1140, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0>, ('127.0.0.1', 8000) )
                                                - T0: 17: socket.socket.bind -> _socket.socket.bind <= None
                                                         _____ ___            _ _____                          _        _     _     _           _         
                                                        |_   _/ _ \          / |___  |          ___  ___   ___| | _____| |_  | |__ (_)_ __   __| |        
                                                 _____    | || | | |  _____  | |  / /   _____  / __|/ _ \ / __| |/ / _ \ __| | '_ \| | '_ \ / _` |  _____ 
                                                |_____|   | || |_| | |_____| | | / /   |_____| \__ \ (_) | (__|   <  __/ |_ _| |_) | | | | | (_| | |_____|
                                                          |_| \___/          |_|/_/            |___/\___/ \___|_|\_\___|\__(_)_.__/|_|_| |_|\__,_|        
                                                                                                                                                          
                                                
                                                + T0: 18: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ => ( name='server_address', value=('127.0.0.1', 8000) )
                                                - T0: 18: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ <= None
                                        - T0: 15: wsgiref.simple_server.WSGIServer.server_bind -> socketserver.TCPServer.server_bind <= None
                                                 _____ ___            _ ____          
                                                |_   _/ _ \          / | ___|         
                                         _____    | || | | |  _____  | |___ \   _____ 
                                        |_____|   | || |_| | |_____| | |___) | |_____|
                                                  |_| \___/          |_|____/         
                                                                                      
                                        __        ______   ____ ___ ____                                                         _     _           _         
                                        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___  ___ _ ____   _____ _ __ | |__ (_)_ __   __| |        
                                         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ '__\ \ / / _ \ '__|| '_ \| | '_ \ / _` |  _____ 
                                          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _\__ \  __/ |   \ V /  __/ |   | |_) | | | | | (_| | |_____|
                                           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___/\___|_|    \_/ \___|_|___|_.__/|_|_| |_|\__,_|        
                                                                                                                           |_____|                           
                                        
                                                 _____ ___            _  ___                       _    __           _               
                                           _    |_   _/ _ \     _    / |/ _ \     _      __ _  ___| |_ / _| __ _  __| |_ __      _   
                                         _| |_    | || | | |  _| |_  | | (_) |  _| |_   / _` |/ _ \ __| |_ / _` |/ _` | '_ \   _| |_ 
                                        |_   _|   | || |_| | |_   _| | |\__, | |_   _| | (_| |  __/ |_|  _| (_| | (_| | | | | |_   _|
                                          |_|     |_| \___/    |_|   |_|  /_/    |_|    \__, |\___|\__|_|  \__, |\__,_|_| |_|   |_|  
                                                                                        |___/                 |_|                    
                                        
                                        + T0: 19: socket.getfqdn => ( name='127.0.0.1' )
                                                + T0 + * encodings.idna +
                                                        + T0 + * stringprep +
                                                                + T0 + * unicodedata +
                                                                - T0 - * unicodedata -

# ----- Process module `unicodedata` -----
# Match: unicodedata: None
!: unicodedata
                                                        - T0 - * stringprep -

# ----- Process module `stringprep` -----
# Match: stringprep: None
!: stringprep
                                                - T0 - * encodings.idna -

# ----- Process module `encodings.idna` -----
# Match: encodings.idna: None
!: encodings.idna
                                        - T0: 19: socket.getfqdn <= 'vm-desktop'
                                                 _____ ___            _  ___                       _    __           _               
                                                |_   _/ _ \          / |/ _ \            __ _  ___| |_ / _| __ _  __| |_ __          
                                         _____    | || | | |  _____  | | (_) |  _____   / _` |/ _ \ __| |_ / _` |/ _` | '_ \   _____ 
                                        |_____|   | || |_| | |_____| | |\__, | |_____| | (_| |  __/ |_|  _| (_| | (_| | | | | |_____|
                                                  |_| \___/          |_|  /_/           \__, |\___|\__|_|  \__, |\__,_|_| |_|        
                                                                                        |___/                 |_|                    
                                        
                                        + T0: 20: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ => ( name='server_name', value='vm-desktop' )
                                        - T0: 20: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ <= None
                                        + T0: 21: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ => ( name='server_port', value=8000 )
                                        - T0: 21: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ <= None
                                - T0: 14: wsgiref.simple_server.WSGIServer.server_bind -> http.server.HTTPServer.server_bind <= None
                                         _____ ___            _ _  _           
                                        |_   _/ _ \          / | || |          
                                 _____    | || | | |  _____  | | || |_   _____ 
                                |_____|   | || |_| | |_____| | |__   _| |_____|
                                          |_| \___/          |_|  |_|          
                                                                               
                                __        ______   ____ ___ ____                                                         _     _           _         
                                \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___  ___ _ ____   _____ _ __ | |__ (_)_ __   __| |        
                                 \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ '__\ \ / / _ \ '__|| '_ \| | '_ \ / _` |  _____ 
                                  \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _\__ \  __/ |   \ V /  __/ |   | |_) | | | | | (_| | |_____|
                                   \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___/\___|_|    \_/ \___|_|___|_.__/|_|_| |_|\__,_|        
                                                                                                                   |_____|                           
                                
                                         _____ ___            ____  ____          
                                   _    |_   _/ _ \     _    |___ \|___ \     _   
                                 _| |_    | || | | |  _| |_    __) | __) |  _| |_ 
                                |_   _|   | || |_| | |_   _|  / __/ / __/  |_   _|
                                  |_|     |_| \___/    |_|   |_____|_____|   |_|  
                                                                                  
                                __        ______   ____ ___ ____                                    _                                 _                         
                                \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___  ___| |_ _   _ _ __     ___ _ ____   _(_)_ __ ___  _ __      _   
                                 \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ __| | | | '_ \   / _ \ '_ \ \ / / | '__/ _ \| '_ \   _| |_ 
                                  \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _\__ \  __/ |_| |_| | |_) | |  __/ | | \ V /| | | | (_) | | | | |_   _|
                                   \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___/\___|\__|\__,_| .__/___\___|_| |_|\_/ |_|_|  \___/|_| |_|   |_|  
                                                                                                             |_| |_____|                                        
                                
                                + T0: 22: wsgiref.simple_server.WSGIServer.setup_environ => 
                                        + T0: 23: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ => ( name='base_environ', value={} )
                                        - T0: 23: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ <= None
                                - T0: 22: wsgiref.simple_server.WSGIServer.setup_environ <= None
                                         _____ ___            ____  ____          
                                        |_   _/ _ \          |___ \|___ \         
                                 _____    | || | | |  _____    __) | __) |  _____ 
                                |_____|   | || |_| | |_____|  / __/ / __/  |_____|
                                          |_| \___/          |_____|_____|        
                                                                                  
                                __        ______   ____ ___ ____                                    _                                 _                         
                                \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___  ___| |_ _   _ _ __     ___ _ ____   _(_)_ __ ___  _ __          
                                 \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ __| | | | '_ \   / _ \ '_ \ \ / / | '__/ _ \| '_ \   _____ 
                                  \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _\__ \  __/ |_| |_| | |_) | |  __/ | | \ V /| | | | (_) | | | | |_____|
                                   \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___/\___|\__|\__,_| .__/___\___|_| |_|\_/ |_|_|  \___/|_| |_|        
                                                                                                             |_| |_____|                                        
                                
                        - T0: 13: wsgiref.simple_server.WSGIServer.server_bind <= None
                                 _____ ___            _ _____         
                                |_   _/ _ \          / |___ /         
                         _____    | || | | |  _____  | | |_ \   _____ 
                        |_____|   | || |_| | |_____| | |___) | |_____|
                                  |_| \___/          |_|____/         
                                                                      
                        __        ______   ____ ___ ____                                                         _     _           _         
                        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___  ___ _ ____   _____ _ __ | |__ (_)_ __   __| |        
                         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ '__\ \ / / _ \ '__|| '_ \| | '_ \ / _` |  _____ 
                          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _\__ \  __/ |   \ V /  __/ |   | |_) | | | | | (_| | |_____|
                           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___/\___|_|    \_/ \___|_|___|_.__/|_|_| |_|\__,_|        
                                                                                                           |_____|                           
                        
                                 _____ ___            ____  _  _           
                           _    |_   _/ _ \     _    |___ \| || |      _   
                         _| |_    | || | | |  _| |_    __) | || |_   _| |_ 
                        |_   _|   | || |_| | |_   _|  / __/|__   _| |_   _|
                          |_|     |_| \___/    |_|   |_____|  |_|     |_|  
                                                                           
                        __        ______   ____ ___ ____                                                                   _   _            _               
                        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___  ___ _ ____   _____ _ __  __ _  ___| |_(_)_   ____ _| |_ ___     _   
                         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ '__\ \ / / _ \ '__|/ _` |/ __| __| \ \ / / _` | __/ _ \  _| |_ 
                          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _\__ \  __/ |   \ V /  __/ |  | (_| | (__| |_| |\ V / (_| | ||  __/ |_   _|
                           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___/\___|_|    \_/ \___|_|___\__,_|\___|\__|_| \_/ \__,_|\__\___|   |_|  
                                                                                                           |_____|                                          
                        
                        + T0: 24: wsgiref.simple_server.WSGIServer.server_activate -> socketserver.TCPServer.server_activate => 
                                         _____ ___            ____  ____                           _        _     _ _     _                     
                                   _    |_   _/ _ \     _    |___ \| ___|     _     ___  ___   ___| | _____| |_  | (_)___| |_ ___ _ __      _   
                                 _| |_    | || | | |  _| |_    __) |___ \   _| |_  / __|/ _ \ / __| |/ / _ \ __| | | / __| __/ _ \ '_ \   _| |_ 
                                |_   _|   | || |_| | |_   _|  / __/ ___) | |_   _| \__ \ (_) | (__|   <  __/ |_ _| | \__ \ ||  __/ | | | |_   _|
                                  |_|     |_| \___/    |_|   |_____|____/    |_|   |___/\___/ \___|_|\_\___|\__(_)_|_|___/\__\___|_| |_|   |_|  
                                                                                                                                                
                                
                                + T0: 25: socket.socket.listen -> _socket.socket.listen => ( <socket.socket fd=1140, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000)>, 5 )
                                - T0: 25: socket.socket.listen -> _socket.socket.listen <= None
                                         _____ ___            ____  ____                           _        _     _ _     _                     
                                        |_   _/ _ \          |___ \| ___|           ___  ___   ___| | _____| |_  | (_)___| |_ ___ _ __          
                                 _____    | || | | |  _____    __) |___ \   _____  / __|/ _ \ / __| |/ / _ \ __| | | / __| __/ _ \ '_ \   _____ 
                                |_____|   | || |_| | |_____|  / __/ ___) | |_____| \__ \ (_) | (__|   <  __/ |_ _| | \__ \ ||  __/ | | | |_____|
                                          |_| \___/          |_____|____/          |___/\___/ \___|_|\_\___|\__(_)_|_|___/\__\___|_| |_|        
                                                                                                                                                
                                
                        - T0: 24: wsgiref.simple_server.WSGIServer.server_activate -> socketserver.TCPServer.server_activate <= None
                                 _____ ___            ____  _  _           
                                |_   _/ _ \          |___ \| || |          
                         _____    | || | | |  _____    __) | || |_   _____ 
                        |_____|   | || |_| | |_____|  / __/|__   _| |_____|
                                  |_| \___/          |_____|  |_|          
                                                                           
                        __        ______   ____ ___ ____                                                                   _   _            _               
                        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___  ___ _ ____   _____ _ __  __ _  ___| |_(_)_   ____ _| |_ ___         
                         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ '__\ \ / / _ \ '__|/ _` |/ __| __| \ \ / / _` | __/ _ \  _____ 
                          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _\__ \  __/ |   \ V /  __/ |  | (_| | (__| |_| |\ V / (_| | ||  __/ |_____|
                           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___/\___|_|    \_/ \___|_|___\__,_|\___|\__|_| \_/ \__,_|\__\___|        
                                                                                                           |_____|                                          
                        
                - T0: 3: wsgiref.simple_server.WSGIServer.__init__ -> socketserver.TCPServer.__init__ <= None
                         _____ ___            _____           _____ ____ ____  ____                                     _       _ _                      
                        |_   _/ _ \          |___ /          |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __          (_)_ __ (_) |_                    
                 _____    | || | | |  _____    |_ \   _____    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__|         | | '_ \| | __|             _____ 
                |_____|   | || |_| | |_____|  ___) | |_____|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _          | | | | | | |_             |_____|
                          |_| \___/          |____/            |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)____ ____|_|_| |_|_|\__|____ _____         
                                                                                                            |_____|_____|           |_____|_____|        
                
                         _____ ___            ____   __            __        ______   ____ ___ ____                                    _                        
                   _    |_   _/ _ \     _    |___ \ / /_      _    \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___  ___| |_     __ _ _ __  _ __  
                 _| |_    | || | | |  _| |_    __) | '_ \   _| |_   \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ __|   / _` | '_ \| '_ \ 
                |_   _|   | || |_| | |_   _|  / __/| (_) | |_   _|   \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _\__ \  __/ |_   | (_| | |_) | |_) |
                  |_|     |_| \___/    |_|   |_____|\___/    |_|      \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___/\___|\__|___\__,_| .__/| .__/ 
                                                                                                                                         |_____|   |_|   |_|    
                       
                   _   
                 _| |_ 
                |_   _|
                  |_|  
                       
                
                + T0: 26: wsgiref.simple_server.WSGIServer.set_app => ( application=<aoiktracecall.wrap.CallWrapper object at 0x00000151E8D47550> )
                        + T0: 27: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ => ( name='application', value=<aoiktracecall.wrap.CallWrapper object at 0x00000151E8D47550> )
                        - T0: 27: wsgiref.simple_server.WSGIServer.__setattr__ -> builtins.object.__setattr__ <= None
                - T0: 26: wsgiref.simple_server.WSGIServer.set_app <= None
                         _____ ___            ____   __            __        ______   ____ ___ ____                                    _                        
                        |_   _/ _ \          |___ \ / /_           \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___  ___| |_     __ _ _ __  _ __  
                 _____    | || | | |  _____    __) | '_ \   _____   \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ __|   / _` | '_ \| '_ \ 
                |_____|   | || |_| | |_____|  / __/| (_) | |_____|   \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _\__ \  __/ |_   | (_| | |_) | |_) |
                          |_| \___/          |_____|\___/             \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___/\___|\__|___\__,_| .__/| .__/ 
                                                                                                                                         |_____|   |_|   |_|    
                       
                       
                 _____ 
                |_____|
                       
                       
                
        - T0: 2: wsgiref.simple_server.make_server <= <wsgiref.simple_server.WSGIServer object at 0x00000151E8D9B860>
                 _____ ___            ____                            _                                                 
                |_   _/ _ \          |___ \           _ __ ___   __ _| | _____     ___  ___ _ ____   _____ _ __         
         _____    | || | | |  _____    __) |  _____  | '_ ` _ \ / _` | |/ / _ \   / __|/ _ \ '__\ \ / / _ \ '__|  _____ 
        |_____|   | || |_| | |_____|  / __/  |_____| | | | | | | (_| |   <  __/   \__ \  __/ |   \ V /  __/ |    |_____|
                  |_| \___/          |_____|         |_| |_| |_|\__,_|_|\_\___|___|___/\___|_|    \_/ \___|_|           
                                                                             |_____|                                    
        
                 _____ ___            ____  ___          
           _    |_   _/ _ \     _    |___ \( _ )     _   
         _| |_    | || | | |  _| |_    __) / _ \   _| |_ 
        |_   _|   | || |_| | |_   _|  / __/ (_) | |_   _|
          |_|     |_| \___/    |_|   |_____\___/    |_|  
                                                         
        __        ______   ____ ___ ____                                                        __                                       
        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___  ___ _ ____   _____     / _| ___  _ __ _____   _____ _ __     _   
         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ '__\ \ / / _ \   | |_ / _ \| '__/ _ \ \ / / _ \ '__|  _| |_ 
          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _\__ \  __/ |   \ V /  __/   |  _| (_) | | |  __/\ V /  __/ |    |_   _|
           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___/\___|_|    \_/ \___|___|_|  \___/|_|  \___| \_/ \___|_|      |_|  
                                                                                         |_____|                                         
        
        + T0: 28: wsgiref.simple_server.WSGIServer.serve_forever -> socketserver.BaseServer.serve_forever => ( poll_interval=0.5 )
                         _____ ___            ____   ___          
                   _    |_   _/ _ \     _    |___ \ / _ \     _   
                 _| |_    | || | | |  _| |_    __) | (_) |  _| |_ 
                |_   _|   | || |_| | |_   _|  / __/ \__, | |_   _|
                  |_|     |_| \___/    |_|   |_____|  /_/    |_|  
                                                                  
                 ____       _           _   ____       _           _                       _       _ _                      
                / ___|  ___| | ___  ___| |_/ ___|  ___| | ___  ___| |_ ___  _ __          (_)_ __ (_) |_                _   
                \___ \ / _ \ |/ _ \/ __| __\___ \ / _ \ |/ _ \/ __| __/ _ \| '__|         | | '_ \| | __|             _| |_ 
                 ___) |  __/ |  __/ (__| |_ ___) |  __/ |  __/ (__| || (_) | | _          | | | | | | |_             |_   _|
                |____/ \___|_|\___|\___|\__|____/ \___|_|\___|\___|\__\___/|_|(_)____ ____|_|_| |_|_|\__|____ _____    |_|  
                                                                               |_____|_____|           |_____|_____|        
                
                + T0: 29: selectors.SelectSelector.__init__ => 
                        + T0: 30: selectors.SelectSelector.__setattr__ -> builtins.object.__setattr__ => ( name='_fd_to_key', value={} )
                        - T0: 30: selectors.SelectSelector.__setattr__ -> builtins.object.__setattr__ <= None
                        + T0: 31: selectors._SelectorMapping.__setattr__ -> builtins.object.__setattr__ => ( name='_selector', value=<selectors.SelectSelector object at 0x00000151E8E97C50> )
                        - T0: 31: selectors._SelectorMapping.__setattr__ -> builtins.object.__setattr__ <= None
                        + T0: 32: selectors.SelectSelector.__setattr__ -> builtins.object.__setattr__ => ( name='_map', value=<selectors._SelectorMapping object at 0x00000151E8E6CE10> )
                        - T0: 32: selectors.SelectSelector.__setattr__ -> builtins.object.__setattr__ <= None
                        + T0: 33: selectors.SelectSelector.__setattr__ -> builtins.object.__setattr__ => ( name='_readers', value=set() )
                        - T0: 33: selectors.SelectSelector.__setattr__ -> builtins.object.__setattr__ <= None
                        + T0: 34: selectors.SelectSelector.__setattr__ -> builtins.object.__setattr__ => ( name='_writers', value=set() )
                        - T0: 34: selectors.SelectSelector.__setattr__ -> builtins.object.__setattr__ <= None
                - T0: 29: selectors.SelectSelector.__init__ <= None
                         _____ ___            ____   ___          
                        |_   _/ _ \          |___ \ / _ \         
                 _____    | || | | |  _____    __) | (_) |  _____ 
                |_____|   | || |_| | |_____|  / __/ \__, | |_____|
                          |_| \___/          |_____|  /_/         
                                                                  
                 ____       _           _   ____       _           _                       _       _ _                      
                / ___|  ___| | ___  ___| |_/ ___|  ___| | ___  ___| |_ ___  _ __          (_)_ __ (_) |_                    
                \___ \ / _ \ |/ _ \/ __| __\___ \ / _ \ |/ _ \/ __| __/ _ \| '__|         | | '_ \| | __|             _____ 
                 ___) |  __/ |  __/ (__| |_ ___) |  __/ |  __/ (__| || (_) | | _          | | | | | | |_             |_____|
                |____/ \___|_|\___|\___|\__|____/ \___|_|\___|\___|\__\___/|_|(_)____ ____|_|_| |_|_|\__|____ _____         
                                                                               |_____|_____|           |_____|_____|        
                
                         _____ ___            _________            ____       _           _   ____       _           _                            _     _            
                   _    |_   _/ _ \     _    |___ / ___|     _    / ___|  ___| | ___  ___| |_/ ___|  ___| | ___  ___| |_ ___  _ __ _ __ ___  __ _(_)___| |_ ___ _ __ 
                 _| |_    | || | | |  _| |_    |_ \___ \   _| |_  \___ \ / _ \ |/ _ \/ __| __\___ \ / _ \ |/ _ \/ __| __/ _ \| '__| '__/ _ \/ _` | / __| __/ _ \ '__|
                |_   _|   | || |_| | |_   _|  ___) |__) | |_   _|  ___) |  __/ |  __/ (__| |_ ___) |  __/ |  __/ (__| || (_) | | _| | |  __/ (_| | \__ \ ||  __/ |   
                  |_|     |_| \___/    |_|   |____/____/    |_|   |____/ \___|_|\___|\___|\__|____/ \___|_|\___|\___|\__\___/|_|(_)_|  \___|\__, |_|___/\__\___|_|   
                                                                                                                                            |___/                    
                       
                   _   
                 _| |_ 
                |_   _|
                  |_|  
                       
                
                + T0: 35: selectors.SelectSelector.register => ( fileobj=<wsgiref.simple_server.WSGIServer object at 0x00000151E8D9B860>, events=1, data=None )
                        + T0: 36: selectors.SelectSelector.register -> selectors._BaseSelectorImpl.register => ( fileobj=<wsgiref.simple_server.WSGIServer object at 0x00000151E8D9B860>, events=1, data=None )
                                + T0: 37: selectors.SelectSelector._fileobj_lookup -> selectors._BaseSelectorImpl._fileobj_lookup => ( fileobj=<wsgiref.simple_server.WSGIServer object at 0x00000151E8D9B860> )
                                        + T0: 38: selectors._fileobj_to_fd => ( fileobj=<wsgiref.simple_server.WSGIServer object at 0x00000151E8D9B860> )
                                                         _____ ___            _____ ___           __        ______   ____ ___ ____                            __ _ _                          
                                                   _    |_   _/ _ \     _    |___ // _ \     _    \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ / _(_) | ___ _ __   ___      _   
                                                 _| |_    | || | | |  _| |_    |_ \ (_) |  _| |_   \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__| |_| | |/ _ \ '_ \ / _ \   _| |_ 
                                                |_   _|   | || |_| | |_   _|  ___) \__, | |_   _|   \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _|  _| | |  __/ | | | (_) | |_   _|
                                                  |_|     |_| \___/    |_|   |____/  /_/    |_|      \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)_| |_|_|\___|_| |_|\___/    |_|  
                                                                                                                                                                                              
                                                
                                                + T0: 39: wsgiref.simple_server.WSGIServer.fileno -> socketserver.TCPServer.fileno => 
                                                - T0: 39: wsgiref.simple_server.WSGIServer.fileno -> socketserver.TCPServer.fileno <= 1140
                                                         _____ ___            _____ ___           __        ______   ____ ___ ____                            __ _ _                          
                                                        |_   _/ _ \          |___ // _ \          \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ / _(_) | ___ _ __   ___          
                                                 _____    | || | | |  _____    |_ \ (_) |  _____   \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__| |_| | |/ _ \ '_ \ / _ \   _____ 
                                                |_____|   | || |_| | |_____|  ___) \__, | |_____|   \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _|  _| | |  __/ | | | (_) | |_____|
                                                          |_| \___/          |____/  /_/             \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)_| |_|_|\___|_| |_|\___/         
                                                                                                                                                                                              
                                                
                                        - T0: 38: selectors._fileobj_to_fd <= 1140
                                - T0: 37: selectors.SelectSelector._fileobj_lookup -> selectors._BaseSelectorImpl._fileobj_lookup <= 1140
                        - T0: 36: selectors.SelectSelector.register -> selectors._BaseSelectorImpl.register <= SelectorKey(fileobj=<wsgiref.simple_server.WSGIServer object at 0x00000151E8D9B860>, fd=1140, events=1, data=None)
                - T0: 35: selectors.SelectSelector.register <= SelectorKey(fileobj=<wsgiref.simple_server.WSGIServer object at 0x00000151E8D9B860>, fd=1140, events=1, data=None)
                         _____ ___            _________            ____       _           _   ____       _           _                            _     _            
                        |_   _/ _ \          |___ / ___|          / ___|  ___| | ___  ___| |_/ ___|  ___| | ___  ___| |_ ___  _ __ _ __ ___  __ _(_)___| |_ ___ _ __ 
                 _____    | || | | |  _____    |_ \___ \   _____  \___ \ / _ \ |/ _ \/ __| __\___ \ / _ \ |/ _ \/ __| __/ _ \| '__| '__/ _ \/ _` | / __| __/ _ \ '__|
                |_____|   | || |_| | |_____|  ___) |__) | |_____|  ___) |  __/ |  __/ (__| |_ ___) |  __/ |  __/ (__| || (_) | | _| | |  __/ (_| | \__ \ ||  __/ |   
                          |_| \___/          |____/____/          |____/ \___|_|\___|\___|\__|____/ \___|_|\___|\___|\__\___/|_|(_)_|  \___|\__, |_|___/\__\___|_|   
                                                                                                                                            |___/                    
                       
                       
                 _____ 
                |_____|
                       
                       
                
                         _____ ___            _  _  _____         
                   _    |_   _/ _ \     _    | || ||___ /     _   
                 _| |_    | || | | |  _| |_  | || |_ |_ \   _| |_ 
                |_   _|   | || |_| | |_   _| |__   _|__) | |_   _|
                  |_|     |_| \___/    |_|      |_||____/    |_|  
                                                                  
                __        ______   ____ ___ ____                               _                     _ _                                         _                   
                \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __    | |__   __ _ _ __   __| | | ___     _ __ ___  __ _ _   _  ___  ___| |_     _ __   ___  
                 \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__|   | '_ \ / _` | '_ \ / _` | |/ _ \   | '__/ _ \/ _` | | | |/ _ \/ __| __|   | '_ \ / _ \ 
                  \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _    | | | | (_| | | | | (_| | |  __/   | | |  __/ (_| | |_| |  __/\__ \ |_    | | | | (_) |
                   \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___|_| |_|\__,_|_| |_|\__,_|_|\___|___|_|  \___|\__, |\__,_|\___||___/\__|___|_| |_|\___/ 
                                                                         |_____|                            |_____|           |_|                  |_____|           
                 _     _            _            
                | |__ | | ___   ___| | __    _   
                | '_ \| |/ _ \ / __| |/ /  _| |_ 
                | |_) | | (_) | (__|   <  |_   _|
                |_.__/|_|\___/ \___|_|\_\   |_|  
                                                 
                
                + T0: 43: wsgiref.simple_server.WSGIServer._handle_request_noblock -> socketserver.BaseServer._handle_request_noblock => 
                                 _____ ___            _  _   _  _           
                           _    |_   _/ _ \     _    | || | | || |      _   
                         _| |_    | || | | |  _| |_  | || |_| || |_   _| |_ 
                        |_   _|   | || |_| | |_   _| |__   _|__   _| |_   _|
                          |_|     |_| \___/    |_|      |_|    |_|     |_|  
                                                                            
                        __        ______   ____ ___ ____                                     _                                      _           
                        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ __ _  ___| |_     _ __ ___  __ _ _   _  ___  ___| |_     _   
                         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ _` |/ _ \ __|   | '__/ _ \/ _` | | | |/ _ \/ __| __|  _| |_ 
                          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | | (_| |  __/ |_    | | |  __/ (_| | |_| |  __/\__ \ |_  |_   _|
                           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)__, |\___|\__|___|_|  \___|\__, |\__,_|\___||___/\__|   |_|  
                                                                                  |___/        |_____|           |_|                            
                        
                        + T0: 44: wsgiref.simple_server.WSGIServer.get_request -> socketserver.TCPServer.get_request => 
                                         _____ ___            _  _  ____                           _        _                             _           
                                   _    |_   _/ _ \     _    | || || ___|     _     ___  ___   ___| | _____| |_   __ _  ___ ___ ___ _ __ | |_     _   
                                 _| |_    | || | | |  _| |_  | || ||___ \   _| |_  / __|/ _ \ / __| |/ / _ \ __| / _` |/ __/ __/ _ \ '_ \| __|  _| |_ 
                                |_   _|   | || |_| | |_   _| |__   _|__) | |_   _| \__ \ (_) | (__|   <  __/ |_ | (_| | (_| (_|  __/ |_) | |_  |_   _|
                                  |_|     |_| \___/    |_|      |_||____/    |_|   |___/\___/ \___|_|\_\___|\__(_)__,_|\___\___\___| .__/ \__|   |_|  
                                                                                                                                   |_|                
                                
                                + T0: 45: socket.socket.accept => 
                                                 _____ ___            _  _    __                            _        _                                 _           
                                           _    |_   _/ _ \     _    | || |  / /_      _     ___  ___   ___| | _____| |_       __ _  ___ ___ ___ _ __ | |_     _   
                                         _| |_    | || | | |  _| |_  | || |_| '_ \   _| |_  / __|/ _ \ / __| |/ / _ \ __|     / _` |/ __/ __/ _ \ '_ \| __|  _| |_ 
                                        |_   _|   | || |_| | |_   _| |__   _| (_) | |_   _| \__ \ (_) | (__|   <  __/ |_ _   | (_| | (_| (_|  __/ |_) | |_  |_   _|
                                          |_|     |_| \___/    |_|      |_|  \___/    |_|   |___/\___/ \___|_|\_\___|\__(_)___\__,_|\___\___\___| .__/ \__|   |_|  
                                                                                                                         |_____|                |_|                
                                        
                                        + T0: 46: socket.socket._accept -> _socket.socket._accept => ( <socket.socket fd=1140, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000)> )
                                        - T0: 46: socket.socket._accept -> _socket.socket._accept <= (1252, ('127.0.0.1', 8111))
                                                 _____ ___            _  _    __                            _        _                                 _           
                                                |_   _/ _ \          | || |  / /_            ___  ___   ___| | _____| |_       __ _  ___ ___ ___ _ __ | |_         
                                         _____    | || | | |  _____  | || |_| '_ \   _____  / __|/ _ \ / __| |/ / _ \ __|     / _` |/ __/ __/ _ \ '_ \| __|  _____ 
                                        |_____|   | || |_| | |_____| |__   _| (_) | |_____| \__ \ (_) | (__|   <  __/ |_ _   | (_| | (_| (_|  __/ |_) | |_  |_____|
                                                  |_| \___/             |_|  \___/          |___/\___/ \___|_|\_\___|\__(_)___\__,_|\___\___\___| .__/ \__|        
                                                                                                                         |_____|                |_|                
                                        
                                                 _____ ___            _  _ _____                          _        _               _       _ _                      
                                           _    |_   _/ _ \     _    | || |___  |    _     ___  ___   ___| | _____| |_            (_)_ __ (_) |_                _   
                                         _| |_    | || | | |  _| |_  | || |_ / /   _| |_  / __|/ _ \ / __| |/ / _ \ __|           | | '_ \| | __|             _| |_ 
                                        |_   _|   | || |_| | |_   _| |__   _/ /   |_   _| \__ \ (_) | (__|   <  __/ |_ _          | | | | | | |_             |_   _|
                                          |_|     |_| \___/    |_|      |_|/_/      |_|   |___/\___/ \___|_|\_\___|\__(_)____ ____|_|_| |_|_|\__|____ _____    |_|  
                                                                                                                       |_____|_____|           |_____|_____|        
                                        
                                        + T0: 47: socket.socket.__init__ => ( family=<AddressFamily.AF_INET: 2>, type=1, proto=0, fileno=1252 )
                                                + T0: 48: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_io_refs', value=0 )
                                                - T0: 48: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                                                + T0: 49: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_closed', value=False )
                                                - T0: 49: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                                        - T0: 47: socket.socket.__init__ <= None
                                                 _____ ___            _  _ _____                          _        _               _       _ _                      
                                                |_   _/ _ \          | || |___  |          ___  ___   ___| | _____| |_            (_)_ __ (_) |_                    
                                         _____    | || | | |  _____  | || |_ / /   _____  / __|/ _ \ / __| |/ / _ \ __|           | | '_ \| | __|             _____ 
                                        |_____|   | || |_| | |_____| |__   _/ /   |_____| \__ \ (_) | (__|   <  __/ |_ _          | | | | | | |_             |_____|
                                                  |_| \___/             |_|/_/            |___/\___/ \___|_|\_\___|\__(_)____ ____|_|_| |_|_|\__|____ _____         
                                                                                                                       |_____|_____|           |_____|_____|        
                                        
                                                 _____ ___            ____   ___                           _        _               _   _   _                            _           
                                           _    |_   _/ _ \     _    | ___| / _ \     _     ___  ___   ___| | _____| |_   __ _  ___| |_| |_(_)_ __ ___   ___  ___  _   _| |_     _   
                                         _| |_    | || | | |  _| |_  |___ \| | | |  _| |_  / __|/ _ \ / __| |/ / _ \ __| / _` |/ _ \ __| __| | '_ ` _ \ / _ \/ _ \| | | | __|  _| |_ 
                                        |_   _|   | || |_| | |_   _|  ___) | |_| | |_   _| \__ \ (_) | (__|   <  __/ |_ | (_| |  __/ |_| |_| | | | | | |  __/ (_) | |_| | |_  |_   _|
                                          |_|     |_| \___/    |_|   |____/ \___/    |_|   |___/\___/ \___|_|\_\___|\__(_)__, |\___|\__|\__|_|_| |_| |_|\___|\___/ \__,_|\__|   |_|  
                                                                                                                         |___/                                                       
                                        
                                        + T0: 50: socket.socket.gettimeout -> _socket.socket.gettimeout => ( <socket.socket fd=1140, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000)> )
                                        - T0: 50: socket.socket.gettimeout -> _socket.socket.gettimeout <= None
                                                 _____ ___            ____   ___                           _        _               _   _   _                            _           
                                                |_   _/ _ \          | ___| / _ \           ___  ___   ___| | _____| |_   __ _  ___| |_| |_(_)_ __ ___   ___  ___  _   _| |_         
                                         _____    | || | | |  _____  |___ \| | | |  _____  / __|/ _ \ / __| |/ / _ \ __| / _` |/ _ \ __| __| | '_ ` _ \ / _ \/ _ \| | | | __|  _____ 
                                        |_____|   | || |_| | |_____|  ___) | |_| | |_____| \__ \ (_) | (__|   <  __/ |_ | (_| |  __/ |_| |_| | | | | | |  __/ (_) | |_| | |_  |_____|
                                                  |_| \___/          |____/ \___/          |___/\___/ \___|_|\_\___|\__(_)__, |\___|\__|\__|_|_| |_| |_|\___|\___/ \__,_|\__|        
                                                                                                                         |___/                                                       
                                        
                                - T0: 45: socket.socket.accept <= (<socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)>, ('127.0.0.1', 8111))
                                         _____ ___            _  _  ____                           _        _                             _           
                                        |_   _/ _ \          | || || ___|           ___  ___   ___| | _____| |_   __ _  ___ ___ ___ _ __ | |_         
                                 _____    | || | | |  _____  | || ||___ \   _____  / __|/ _ \ / __| |/ / _ \ __| / _` |/ __/ __/ _ \ '_ \| __|  _____ 
                                |_____|   | || |_| | |_____| |__   _|__) | |_____| \__ \ (_) | (__|   <  __/ |_ | (_| | (_| (_|  __/ |_) | |_  |_____|
                                          |_| \___/             |_||____/          |___/\___/ \___|_|\_\___|\__(_)__,_|\___\___\___| .__/ \__|        
                                                                                                                                   |_|                
                                
                        - T0: 44: wsgiref.simple_server.WSGIServer.get_request -> socketserver.TCPServer.get_request <= (<socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)>, ('127.0.0.1', 8111))
                                 _____ ___            _  _   _  _           
                                |_   _/ _ \          | || | | || |          
                         _____    | || | | |  _____  | || |_| || |_   _____ 
                        |_____|   | || |_| | |_____| |__   _|__   _| |_____|
                                  |_| \___/             |_|    |_|          
                                                                            
                        __        ______   ____ ___ ____                                     _                                      _           
                        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ __ _  ___| |_     _ __ ___  __ _ _   _  ___  ___| |_         
                         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ _` |/ _ \ __|   | '__/ _ \/ _` | | | |/ _ \/ __| __|  _____ 
                          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | | (_| |  __/ |_    | | |  __/ (_| | |_| |  __/\__ \ |_  |_____|
                           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)__, |\___|\__|___|_|  \___|\__, |\__,_|\___||___/\__|        
                                                                                  |___/        |_____|           |_|                            
                        
                                 _____ ___            ____  _         
                           _    |_   _/ _ \     _    | ___|/ |    _   
                         _| |_    | || | | |  _| |_  |___ \| |  _| |_ 
                        |_   _|   | || |_| | |_   _|  ___) | | |_   _|
                          |_|     |_| \___/    |_|   |____/|_|   |_|  
                                                                      
                        __        ______   ____ ___ ____                                          _  __                                          _           
                        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ ____   _____ _ __(_)/ _|_   _     _ __ ___  __ _ _   _  ___  ___| |_     _   
                         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__\ \ / / _ \ '__| | |_| | | |   | '__/ _ \/ _` | | | |/ _ \/ __| __|  _| |_ 
                          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _ \ V /  __/ |  | |  _| |_| |   | | |  __/ (_| | |_| |  __/\__ \ |_  |_   _|
                           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_) \_/ \___|_|  |_|_|  \__, |___|_|  \___|\__, |\__,_|\___||___/\__|   |_|  
                                                                                                        |___/_____|           |_|                            
                        
                        + T0: 51: wsgiref.simple_server.WSGIServer.verify_request -> socketserver.BaseServer.verify_request => ( request=<socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)>, client_address=('127.0.0.1', 8111) )
                        - T0: 51: wsgiref.simple_server.WSGIServer.verify_request -> socketserver.BaseServer.verify_request <= True
                                 _____ ___            ____  _         
                                |_   _/ _ \          | ___|/ |        
                         _____    | || | | |  _____  |___ \| |  _____ 
                        |_____|   | || |_| | |_____|  ___) | | |_____|
                                  |_| \___/          |____/|_|        
                                                                      
                        __        ______   ____ ___ ____                                          _  __                                          _           
                        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ ____   _____ _ __(_)/ _|_   _     _ __ ___  __ _ _   _  ___  ___| |_         
                         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__\ \ / / _ \ '__| | |_| | | |   | '__/ _ \/ _` | | | |/ _ \/ __| __|  _____ 
                          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _ \ V /  __/ |  | |  _| |_| |   | | |  __/ (_| | |_| |  __/\__ \ |_  |_____|
                           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_) \_/ \___|_|  |_|_|  \__, |___|_|  \___|\__, |\__,_|\___||___/\__|        
                                                                                                        |___/_____|           |_|                            
                        
                                 _____ ___            ____ ____          
                           _    |_   _/ _ \     _    | ___|___ \     _   
                         _| |_    | || | | |  _| |_  |___ \ __) |  _| |_ 
                        |_   _|   | || |_| | |_   _|  ___) / __/  |_   _|
                          |_|     |_| \___/    |_|   |____/_____|   |_|  
                                                                         
                        __        ______   ____ ___ ____                                                                                                _           
                        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ _ __  _ __ ___   ___ ___  ___ ___     _ __ ___  __ _ _   _  ___  ___| |_     _   
                         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__| '_ \| '__/ _ \ / __/ _ \/ __/ __|   | '__/ _ \/ _` | | | |/ _ \/ __| __|  _| |_ 
                          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _| |_) | | | (_) | (_|  __/\__ \__ \   | | |  __/ (_| | |_| |  __/\__ \ |_  |_   _|
                           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_) .__/|_|  \___/ \___\___||___/___/___|_|  \___|\__, |\__,_|\___||___/\__|   |_|  
                                                                                  |_|                              |_____|           |_|                            
                        
                        + T0: 52: wsgiref.simple_server.WSGIServer.process_request -> socketserver.BaseServer.process_request => ( request=<socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)>, client_address=('127.0.0.1', 8111) )
                                         _____ ___            ____ _____         
                                   _    |_   _/ _ \     _    | ___|___ /     _   
                                 _| |_    | || | | |  _| |_  |___ \ |_ \   _| |_ 
                                |_   _|   | || |_| | |_   _|  ___) |__) | |_   _|
                                  |_|     |_| \___/    |_|   |____/____/    |_|  
                                                                                 
                                __        ______   ____ ___ ____                            __ _       _     _                                        _           
                                \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ / _(_)_ __ (_)___| |__      _ __ ___  __ _ _   _  ___  ___| |_     _   
                                 \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__| |_| | '_ \| / __| '_ \    | '__/ _ \/ _` | | | |/ _ \/ __| __|  _| |_ 
                                  \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _|  _| | | | | \__ \ | | |   | | |  __/ (_| | |_| |  __/\__ \ |_  |_   _|
                                   \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)_| |_|_| |_|_|___/_| |_|___|_|  \___|\__, |\__,_|\___||___/\__|   |_|  
                                                                                                                 |_____|           |_|                            
                                
                                + T0: 53: wsgiref.simple_server.WSGIServer.finish_request -> socketserver.BaseServer.finish_request => ( request=<socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)>, client_address=('127.0.0.1', 8111) )
                                                 _____ ___            ____  _  _           
                                           _    |_   _/ _ \     _    | ___|| || |      _   
                                         _| |_    | || | | |  _| |_  |___ \| || |_   _| |_ 
                                        |_   _|   | || |_| | |_   _|  ___) |__   _| |_   _|
                                          |_|     |_| \___/    |_|   |____/   |_|     |_|  
                                                                                           
                                         ____                 ____                            _   _   _                 _ _                     _       _ _                      
                                        | __ )  __ _ ___  ___|  _ \ ___  __ _ _   _  ___  ___| |_| | | | __ _ _ __   __| | | ___ _ __          (_)_ __ (_) |_                _   
                                        |  _ \ / _` / __|/ _ \ |_) / _ \/ _` | | | |/ _ \/ __| __| |_| |/ _` | '_ \ / _` | |/ _ \ '__|         | | '_ \| | __|             _| |_ 
                                        | |_) | (_| \__ \  __/  _ <  __/ (_| | |_| |  __/\__ \ |_|  _  | (_| | | | | (_| | |  __/ | _          | | | | | | |_             |_   _|
                                        |____/ \__,_|___/\___|_| \_\___|\__, |\__,_|\___||___/\__|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)____ ____|_|_| |_|_|\__|____ _____    |_|  
                                                                           |_|                                                      |_____|_____|           |_____|_____|        
                                        
                                        + T0: 54: wsgiref.simple_server.WSGIRequestHandler.__init__ -> socketserver.BaseRequestHandler.__init__ => ( request=<socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)>, client_address=('127.0.0.1', 8111), server=<wsgiref.simple_server.WSGIServer object at 0x00000151E8D9B860> )
                                                + T0: 55: wsgiref.simple_server.WSGIRequestHandler.__setattr__ -> builtins.object.__setattr__ => ( name='request', value=<socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)> )
                                                - T0: 55: wsgiref.simple_server.WSGIRequestHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                + T0: 56: wsgiref.simple_server.WSGIRequestHandler.__setattr__ -> builtins.object.__setattr__ => ( name='client_address', value=('127.0.0.1', 8111) )
                                                - T0: 56: wsgiref.simple_server.WSGIRequestHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                + T0: 57: wsgiref.simple_server.WSGIRequestHandler.__setattr__ -> builtins.object.__setattr__ => ( name='server', value=<wsgiref.simple_server.WSGIServer object at 0x00000151E8D9B860> )
                                                - T0: 57: wsgiref.simple_server.WSGIRequestHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                         _____ ___            ____   ___          
                                                   _    |_   _/ _ \     _    | ___| ( _ )     _   
                                                 _| |_    | || | | |  _| |_  |___ \ / _ \   _| |_ 
                                                |_   _|   | || |_| | |_   _|  ___) | (_) | |_   _|
                                                  |_|     |_| \___/    |_|   |____/ \___/    |_|  
                                                                                                  
                                                __        ______   ____ ___ ____                            _   _   _                 _ _                    _                       
                                                \ \      / / ___| / ___|_ _|  _ \ ___  __ _ _   _  ___  ___| |_| | | | __ _ _ __   __| | | ___ _ __ ___  ___| |_ _   _ _ __      _   
                                                 \ \ /\ / /\___ \| |  _ | || |_) / _ \/ _` | | | |/ _ \/ __| __| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __|/ _ \ __| | | | '_ \   _| |_ 
                                                  \ V  V /  ___) | |_| || ||  _ <  __/ (_| | |_| |  __/\__ \ |_|  _  | (_| | | | | (_| | |  __/ | _\__ \  __/ |_| |_| | |_) | |_   _|
                                                   \_/\_/  |____/ \____|___|_| \_\___|\__, |\__,_|\___||___/\__|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___/\___|\__|\__,_| .__/    |_|  
                                                                                         |_|                                                                          |_|            
                                                
                                                + T0: 58: wsgiref.simple_server.WSGIRequestHandler.setup -> socketserver.StreamRequestHandler.setup => 
                                                        + T0: 59: wsgiref.simple_server.WSGIRequestHandler.__setattr__ -> builtins.object.__setattr__ => ( name='connection', value=<socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)> )
                                                        - T0: 59: wsgiref.simple_server.WSGIRequestHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                 _____ ___             __    ___                           _        _                     _         __ _ _              
                                                           _    |_   _/ _ \     _     / /_  / _ \     _     ___  ___   ___| | _____| |_   _ __ ___   __ _| | _____ / _(_) | ___     _   
                                                         _| |_    | || | | |  _| |_  | '_ \| | | |  _| |_  / __|/ _ \ / __| |/ / _ \ __| | '_ ` _ \ / _` | |/ / _ \ |_| | |/ _ \  _| |_ 
                                                        |_   _|   | || |_| | |_   _| | (_) | |_| | |_   _| \__ \ (_) | (__|   <  __/ |_ _| | | | | | (_| |   <  __/  _| | |  __/ |_   _|
                                                          |_|     |_| \___/    |_|    \___/ \___/    |_|   |___/\___/ \___|_|\_\___|\__(_)_| |_| |_|\__,_|_|\_\___|_| |_|_|\___|   |_|  
                                                                                                                                                                                        
                                                        
                                                        + T0: 60: socket.socket.makefile => ( mode='rb', buffering=-1, encoding=None, errors=None, newline=None )
                                                                + T0: 61: socket.SocketIO.__init__ => ( sock=<socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)>, mode='r' )
                                                                        + T0: 62: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_sock', value=<socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)> )
                                                                        - T0: 62: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                        + T0: 63: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_mode', value='rb' )
                                                                        - T0: 63: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                        + T0: 64: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_reading', value=True )
                                                                        - T0: 64: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                        + T0: 65: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_writing', value=False )
                                                                        - T0: 65: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                        + T0: 66: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_timeout_occurred', value=False )
                                                                        - T0: 66: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                - T0: 61: socket.SocketIO.__init__ <= None
                                                                + T0: 67: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_io_refs', value=1 )
                                                                - T0: 67: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                                                                + T0: 68: socket.SocketIO.readable => 
                                                                - T0: 68: socket.SocketIO.readable <= True
                                                                + T0: 69: socket.SocketIO.tell -> _io._IOBase.tell => 
                                                                        + T0: 70: socket.SocketIO.seek -> _io._IOBase.seek => ( <socket.SocketIO object at 0x00000151E8E86EB8>, 0, 1 )
                                                                        - T0: 70: socket.SocketIO.seek -> _io._IOBase.seek <= # Error
---
Traceback (most recent call last):
  File "D:\Demo\AoikTraceCall\src\aoiktracecall\wrap.py", line 290, in new_func
    res = func(*args, **kwargs)
io.UnsupportedOperation: seek
---

                                                                - T0: 69: socket.SocketIO.tell -> _io._IOBase.tell <= # Error
---
Traceback (most recent call last):
  File "D:\Demo\AoikTraceCall\src\aoiktracecall\wrap.py", line 290, in new_func
    res = func(*args, **kwargs)
  File "D:\Demo\AoikTraceCall\src\aoiktracecall\wrap.py", line 42, in __call__
    res = new_call(*args, **kwargs)
  File "D:\Demo\AoikTraceCall\src\aoiktracecall\wrap.py", line 290, in new_func
    res = func(*args, **kwargs)
io.UnsupportedOperation: seek
---

                                                                + T0: 71: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x00000151E8E86EB8> )
                                                                - T0: 71: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                        - T0: 60: socket.socket.makefile <= <_io.BufferedReader name=1252>
                                                                 _____ ___             __    ___                           _        _                     _         __ _ _              
                                                                |_   _/ _ \           / /_  / _ \           ___  ___   ___| | _____| |_   _ __ ___   __ _| | _____ / _(_) | ___         
                                                         _____    | || | | |  _____  | '_ \| | | |  _____  / __|/ _ \ / __| |/ / _ \ __| | '_ ` _ \ / _` | |/ / _ \ |_| | |/ _ \  _____ 
                                                        |_____|   | || |_| | |_____| | (_) | |_| | |_____| \__ \ (_) | (__|   <  __/ |_ _| | | | | | (_| |   <  __/  _| | |  __/ |_____|
                                                                  |_| \___/           \___/ \___/          |___/\___/ \___|_|\_\___|\__(_)_| |_| |_|\__,_|_|\_\___|_| |_|_|\___|        
                                                                                                                                                                                        
                                                        
                                                                + T0: 73: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x00000151E8E86EB8> )
                                                                - T0: 73: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                        + T0: 72: wsgiref.simple_server.WSGIRequestHandler.__setattr__ -> builtins.object.__setattr__ => ( name='rfile', value=<_io.BufferedReader name=1252> )
                                                                + T0: 74: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x00000151E8E86EB8> )
                                                                - T0: 74: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                        - T0: 72: wsgiref.simple_server.WSGIRequestHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                 _____ ___            _____ ____                           _        _                     _         __ _ _              
                                                           _    |_   _/ _ \     _    |___  | ___|     _     ___  ___   ___| | _____| |_   _ __ ___   __ _| | _____ / _(_) | ___     _   
                                                         _| |_    | || | | |  _| |_     / /|___ \   _| |_  / __|/ _ \ / __| |/ / _ \ __| | '_ ` _ \ / _` | |/ / _ \ |_| | |/ _ \  _| |_ 
                                                        |_   _|   | || |_| | |_   _|   / /  ___) | |_   _| \__ \ (_) | (__|   <  __/ |_ _| | | | | | (_| |   <  __/  _| | |  __/ |_   _|
                                                          |_|     |_| \___/    |_|    /_/  |____/    |_|   |___/\___/ \___|_|\_\___|\__(_)_| |_| |_|\__,_|_|\_\___|_| |_|_|\___|   |_|  
                                                                                                                                                                                        
                                                        
                                                        + T0: 75: socket.socket.makefile => ( mode='wb', buffering=0, encoding=None, errors=None, newline=None )
                                                                + T0: 76: socket.SocketIO.__init__ => ( sock=<socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)>, mode='w' )
                                                                        + T0: 77: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_sock', value=<socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)> )
                                                                        - T0: 77: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                        + T0: 78: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_mode', value='wb' )
                                                                        - T0: 78: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                        + T0: 79: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_reading', value=False )
                                                                        - T0: 79: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                        + T0: 80: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_writing', value=True )
                                                                        - T0: 80: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                        + T0: 81: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_timeout_occurred', value=False )
                                                                        - T0: 81: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                - T0: 76: socket.SocketIO.__init__ <= None
                                                                + T0: 82: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_io_refs', value=2 )
                                                                - T0: 82: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                                                        - T0: 75: socket.socket.makefile <= <socket.SocketIO object at 0x00000151E8E8D208>
                                                                 _____ ___            _____ ____                           _        _                     _         __ _ _              
                                                                |_   _/ _ \          |___  | ___|           ___  ___   ___| | _____| |_   _ __ ___   __ _| | _____ / _(_) | ___         
                                                         _____    | || | | |  _____     / /|___ \   _____  / __|/ _ \ / __| |/ / _ \ __| | '_ ` _ \ / _` | |/ / _ \ |_| | |/ _ \  _____ 
                                                        |_____|   | || |_| | |_____|   / /  ___) | |_____| \__ \ (_) | (__|   <  __/ |_ _| | | | | | (_| |   <  __/  _| | |  __/ |_____|
                                                                  |_| \___/           /_/  |____/          |___/\___/ \___|_|\_\___|\__(_)_| |_| |_|\__,_|_|\_\___|_| |_|_|\___|        
                                                                                                                                                                                        
                                                        
                                                        + T0: 83: wsgiref.simple_server.WSGIRequestHandler.__setattr__ -> builtins.object.__setattr__ => ( name='wfile', value=<socket.SocketIO object at 0x00000151E8E8D208> )
                                                        - T0: 83: wsgiref.simple_server.WSGIRequestHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                - T0: 58: wsgiref.simple_server.WSGIRequestHandler.setup -> socketserver.StreamRequestHandler.setup <= None
                                                         _____ ___            ____   ___          
                                                        |_   _/ _ \          | ___| ( _ )         
                                                 _____    | || | | |  _____  |___ \ / _ \   _____ 
                                                |_____|   | || |_| | |_____|  ___) | (_) | |_____|
                                                          |_| \___/          |____/ \___/         
                                                                                                  
                                                __        ______   ____ ___ ____                            _   _   _                 _ _                    _                       
                                                \ \      / / ___| / ___|_ _|  _ \ ___  __ _ _   _  ___  ___| |_| | | | __ _ _ __   __| | | ___ _ __ ___  ___| |_ _   _ _ __          
                                                 \ \ /\ / /\___ \| |  _ | || |_) / _ \/ _` | | | |/ _ \/ __| __| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __|/ _ \ __| | | | '_ \   _____ 
                                                  \ V  V /  ___) | |_| || ||  _ <  __/ (_| | |_| |  __/\__ \ |_|  _  | (_| | | | | (_| | |  __/ | _\__ \  __/ |_| |_| | |_) | |_____|
                                                   \_/\_/  |____/ \____|___|_| \_\___|\__, |\__,_|\___||___/\__|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___/\___|\__|\__,_| .__/         
                                                                                         |_|                                                                          |_|            
                                                
                                                         _____ ___             ___  _  _           
                                                   _    |_   _/ _ \     _     ( _ )| || |      _   
                                                 _| |_    | || | | |  _| |_   / _ \| || |_   _| |_ 
                                                |_   _|   | || |_| | |_   _| | (_) |__   _| |_   _|
                                                  |_|     |_| \___/    |_|    \___/   |_|     |_|  
                                                                                                   
                                                __        ______   ____ ___ ____                            _   _   _                 _ _           _                     _ _              
                                                \ \      / / ___| / ___|_ _|  _ \ ___  __ _ _   _  ___  ___| |_| | | | __ _ _ __   __| | | ___ _ __| |__   __ _ _ __   __| | | ___     _   
                                                 \ \ /\ / /\___ \| |  _ | || |_) / _ \/ _` | | | |/ _ \/ __| __| |_| |/ _` | '_ \ / _` | |/ _ \ '__| '_ \ / _` | '_ \ / _` | |/ _ \  _| |_ 
                                                  \ V  V /  ___) | |_| || ||  _ <  __/ (_| | |_| |  __/\__ \ |_|  _  | (_| | | | | (_| | |  __/ | _| | | | (_| | | | | (_| | |  __/ |_   _|
                                                   \_/\_/  |____/ \____|___|_| \_\___|\__, |\__,_|\___||___/\__|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|\__,_|_| |_|\__,_|_|\___|   |_|  
                                                                                         |_|                                                                                               
                                                
                                                + T0: 84: wsgiref.simple_server.WSGIRequestHandler.handle => 
                                                                 _____ ___             ___ ____            ____             _        _   ___ ___                      _ _       _                
                                                           _    |_   _/ _ \     _     ( _ ) ___|     _    / ___|  ___   ___| | _____| |_|_ _/ _ \  _ __ ___  __ _  __| (_)_ __ | |_ ___      _   
                                                         _| |_    | || | | |  _| |_   / _ \___ \   _| |_  \___ \ / _ \ / __| |/ / _ \ __|| | | | || '__/ _ \/ _` |/ _` | | '_ \| __/ _ \   _| |_ 
                                                        |_   _|   | || |_| | |_   _| | (_) |__) | |_   _|  ___) | (_) | (__|   <  __/ |_ | | |_| || | |  __/ (_| | (_| | | | | | || (_) | |_   _|
                                                          |_|     |_| \___/    |_|    \___/____/    |_|   |____/ \___/ \___|_|\_\___|\__|___\___(_)_|  \___|\__,_|\__,_|_|_| |_|\__\___/    |_|  
                                                                                                                                                                                                 
                                                        
                                                        + T0: 85: socket.SocketIO.readinto => ( b=<memory at 0x00000151E826FB88> )
                                                                + T0: 86: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x00000151E8E86EB8> )
                                                                - T0: 86: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                                + T0: 87: socket.SocketIO._checkReadable -> _io._IOBase._checkReadable => ( <socket.SocketIO object at 0x00000151E8E86EB8> )
                                                                        + T0: 88: socket.SocketIO.readable => 
                                                                        - T0: 88: socket.SocketIO.readable <= True
                                                                - T0: 87: socket.SocketIO._checkReadable -> _io._IOBase._checkReadable <= True
                                                                         _____ ___             ___  ___                           _        _                           _       _                
                                                                   _    |_   _/ _ \     _     ( _ )/ _ \     _     ___  ___   ___| | _____| |_   _ __ ___  _____   __ (_)_ __ | |_ ___      _   
                                                                 _| |_    | || | | |  _| |_   / _ \ (_) |  _| |_  / __|/ _ \ / __| |/ / _ \ __| | '__/ _ \/ __\ \ / / | | '_ \| __/ _ \   _| |_ 
                                                                |_   _|   | || |_| | |_   _| | (_) \__, | |_   _| \__ \ (_) | (__|   <  __/ |_ _| | |  __/ (__ \ V /  | | | | | || (_) | |_   _|
                                                                  |_|     |_| \___/    |_|    \___/  /_/    |_|   |___/\___/ \___|_|\_\___|\__(_)_|  \___|\___| \_/___|_|_| |_|\__\___/    |_|  
                                                                                                                                                                 |_____|                        
                                                                
                                                                + T0: 89: socket.socket.recv_into -> _socket.socket.recv_into => ( <socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)>, <memory at 0x00000151E826FB88> )
                                                                - T0: 89: socket.socket.recv_into -> _socket.socket.recv_into <= 152
                                                                         _____ ___             ___  ___                           _        _                           _       _                
                                                                        |_   _/ _ \           ( _ )/ _ \           ___  ___   ___| | _____| |_   _ __ ___  _____   __ (_)_ __ | |_ ___          
                                                                 _____    | || | | |  _____   / _ \ (_) |  _____  / __|/ _ \ / __| |/ / _ \ __| | '__/ _ \/ __\ \ / / | | '_ \| __/ _ \   _____ 
                                                                |_____|   | || |_| | |_____| | (_) \__, | |_____| \__ \ (_) | (__|   <  __/ |_ _| | |  __/ (__ \ V /  | | | | | || (_) | |_____|
                                                                          |_| \___/           \___/  /_/          |___/\___/ \___|_|\_\___|\__(_)_|  \___|\___| \_/___|_|_| |_|\__\___/         
                                                                                                                                                                 |_____|                        
                                                                
                                                        - T0: 85: socket.SocketIO.readinto <= 152
                                                                 _____ ___             ___ ____            ____             _        _   ___ ___                      _ _       _                
                                                                |_   _/ _ \           ( _ ) ___|          / ___|  ___   ___| | _____| |_|_ _/ _ \  _ __ ___  __ _  __| (_)_ __ | |_ ___          
                                                         _____    | || | | |  _____   / _ \___ \   _____  \___ \ / _ \ / __| |/ / _ \ __|| | | | || '__/ _ \/ _` |/ _` | | '_ \| __/ _ \   _____ 
                                                        |_____|   | || |_| | |_____| | (_) |__) | |_____|  ___) | (_) | (__|   <  __/ |_ | | |_| || | |  __/ (_| | (_| | | | | | || (_) | |_____|
                                                                  |_| \___/           \___/____/          |____/ \___/ \___|_|\_\___|\__|___\___(_)_|  \___|\__,_|\__,_|_|_| |_|\__\___/         
                                                                                                                                                                                                 
                                                        
                                                        + T0: 90: wsgiref.simple_server.WSGIRequestHandler.__setattr__ -> builtins.object.__setattr__ => ( name='raw_requestline', value=b'POST / HTTP/1.1\r\n' )
                                                        - T0: 90: wsgiref.simple_server.WSGIRequestHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                 _____ ___             ___  _         
                                                           _    |_   _/ _ \     _     / _ \/ |    _   
                                                         _| |_    | || | | |  _| |_  | (_) | |  _| |_ 
                                                        |_   _|   | || |_| | |_   _|  \__, | | |_   _|
                                                          |_|     |_| \___/    |_|      /_/|_|   |_|  
                                                                                                      
                                                        __        ______   ____ ___ ____                            _   _   _                 _ _                                                        
                                                        \ \      / / ___| / ___|_ _|  _ \ ___  __ _ _   _  ___  ___| |_| | | | __ _ _ __   __| | | ___ _ __ _ __   __ _ _ __ ___  ___     _ __ ___  __ _ 
                                                         \ \ /\ / /\___ \| |  _ | || |_) / _ \/ _` | | | |/ _ \/ __| __| |_| |/ _` | '_ \ / _` | |/ _ \ '__| '_ \ / _` | '__/ __|/ _ \   | '__/ _ \/ _` |
                                                          \ V  V /  ___) | |_| || ||  _ <  __/ (_| | |_| |  __/\__ \ |_|  _  | (_| | | | | (_| | |  __/ | _| |_) | (_| | |  \__ \  __/   | | |  __/ (_| |
                                                           \_/\_/  |____/ \____|___|_| \_\___|\__, |\__,_|\___||___/\__|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_) .__/ \__,_|_|  |___/\___|___|_|  \___|\__, |
                                                                                                 |_|                                                       |_|                      |_____|           |_|
                                                                         _           
                                                         _   _  ___  ___| |_     _   
                                                        | | | |/ _ \/ __| __|  _| |_ 
                                                        | |_| |  __/\__ \ |_  |_   _|
                                                         \__,_|\___||___/\__|   |_|  
                                                                                     
                                                        
                                                        + T0: 91: wsgiref.simple_server.WSGIRequestHandler.parse_request -> http.server.BaseHTTPRequestHandler.parse_request => 
                                                        - T0: 91: wsgiref.simple_server.WSGIRequestHandler.parse_request -> http.server.BaseHTTPRequestHandler.parse_request <= True
                                                                 _____ ___             ___  _         
                                                                |_   _/ _ \           / _ \/ |        
                                                         _____    | || | | |  _____  | (_) | |  _____ 
                                                        |_____|   | || |_| | |_____|  \__, | | |_____|
                                                                  |_| \___/             /_/|_|        
                                                                                                      
                                                        __        ______   ____ ___ ____                            _   _   _                 _ _                                                        
                                                        \ \      / / ___| / ___|_ _|  _ \ ___  __ _ _   _  ___  ___| |_| | | | __ _ _ __   __| | | ___ _ __ _ __   __ _ _ __ ___  ___     _ __ ___  __ _ 
                                                         \ \ /\ / /\___ \| |  _ | || |_) / _ \/ _` | | | |/ _ \/ __| __| |_| |/ _` | '_ \ / _` | |/ _ \ '__| '_ \ / _` | '__/ __|/ _ \   | '__/ _ \/ _` |
                                                          \ V  V /  ___) | |_| || ||  _ <  __/ (_| | |_| |  __/\__ \ |_|  _  | (_| | | | | (_| | |  __/ | _| |_) | (_| | |  \__ \  __/   | | |  __/ (_| |
                                                           \_/\_/  |____/ \____|___|_| \_\___|\__, |\__,_|\___||___/\__|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_) .__/ \__,_|_|  |___/\___|___|_|  \___|\__, |
                                                                                                 |_|                                                       |_|                      |_____|           |_|
                                                                         _           
                                                         _   _  ___  ___| |_         
                                                        | | | |/ _ \/ __| __|  _____ 
                                                        | |_| |  __/\__ \ |_  |_____|
                                                         \__,_|\___||___/\__|        
                                                                                     
                                                        
                                                                 _____ ___            ____   ___ _____         
                                                           _    |_   _/ _ \     _    |___ \ / _ \___  |    _   
                                                         _| |_    | || | | |  _| |_    __) | | | | / /   _| |_ 
                                                        |_   _|   | || |_| | |_   _|  / __/| |_| |/ /   |_   _|
                                                          |_|     |_| \___/    |_|   |_____|\___//_/      |_|  
                                                                                                               
                                                        __        ______   ____ ___ ____                            _   _   _                 _ _                     _           _      _                
                                                        \ \      / / ___| / ___|_ _|  _ \ ___  __ _ _   _  ___  ___| |_| | | | __ _ _ __   __| | | ___ _ __ __ _  ___| |_     ___| |_ __| | ___ _ __ _ __ 
                                                         \ \ /\ / /\___ \| |  _ | || |_) / _ \/ _` | | | |/ _ \/ __| __| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ _` |/ _ \ __|   / __| __/ _` |/ _ \ '__| '__|
                                                          \ V  V /  ___) | |_| || ||  _ <  __/ (_| | |_| |  __/\__ \ |_|  _  | (_| | | | | (_| | |  __/ | | (_| |  __/ |_    \__ \ || (_| |  __/ |  | |   
                                                           \_/\_/  |____/ \____|___|_| \_\___|\__, |\__,_|\___||___/\__|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)__, |\___|\__|___|___/\__\__,_|\___|_|  |_|   
                                                                                                 |_|                                                       |___/        |_____|                           
                                                               
                                                           _   
                                                         _| |_ 
                                                        |_   _|
                                                          |_|  
                                                               
                                                        
                                                        + T0: 207: wsgiref.simple_server.WSGIRequestHandler.get_stderr => 
                                                        - T0: 207: wsgiref.simple_server.WSGIRequestHandler.get_stderr <= <_io.TextIOWrapper name='<stderr>' mode='w' encoding='cp936'>
                                                                 _____ ___            ____   ___ _____         
                                                                |_   _/ _ \          |___ \ / _ \___  |        
                                                         _____    | || | | |  _____    __) | | | | / /   _____ 
                                                        |_____|   | || |_| | |_____|  / __/| |_| |/ /   |_____|
                                                                  |_| \___/          |_____|\___//_/           
                                                                                                               
                                                        __        ______   ____ ___ ____                            _   _   _                 _ _                     _           _      _                
                                                        \ \      / / ___| / ___|_ _|  _ \ ___  __ _ _   _  ___  ___| |_| | | | __ _ _ __   __| | | ___ _ __ __ _  ___| |_     ___| |_ __| | ___ _ __ _ __ 
                                                         \ \ /\ / /\___ \| |  _ | || |_) / _ \/ _` | | | |/ _ \/ __| __| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ _` |/ _ \ __|   / __| __/ _` |/ _ \ '__| '__|
                                                          \ V  V /  ___) | |_| || ||  _ <  __/ (_| | |_| |  __/\__ \ |_|  _  | (_| | | | | (_| | |  __/ | | (_| |  __/ |_    \__ \ || (_| |  __/ |  | |   
                                                           \_/\_/  |____/ \____|___|_| \_\___|\__, |\__,_|\___||___/\__|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)__, |\___|\__|___|___/\__\__,_|\___|_|  |_|   
                                                                                                 |_|                                                       |___/        |_____|                           
                                                               
                                                               
                                                         _____ 
                                                        |_____|
                                                               
                                                               
                                                        
                                                                 _____ ___            ____   ___   ___          
                                                           _    |_   _/ _ \     _    |___ \ / _ \ ( _ )     _   
                                                         _| |_    | || | | |  _| |_    __) | | | |/ _ \   _| |_ 
                                                        |_   _|   | || |_| | |_   _|  / __/| |_| | (_) | |_   _|
                                                          |_|     |_| \___/    |_|   |_____|\___/ \___/    |_|  
                                                                                                                
                                                        __        ______   ____ ___ ____                            _   _   _                 _ _                     _                      _           
                                                        \ \      / / ___| / ___|_ _|  _ \ ___  __ _ _   _  ___  ___| |_| | | | __ _ _ __   __| | | ___ _ __ __ _  ___| |_     ___ _ ____   _(_)_ __ ___  
                                                         \ \ /\ / /\___ \| |  _ | || |_) / _ \/ _` | | | |/ _ \/ __| __| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ _` |/ _ \ __|   / _ \ '_ \ \ / / | '__/ _ \ 
                                                          \ V  V /  ___) | |_| || ||  _ <  __/ (_| | |_| |  __/\__ \ |_|  _  | (_| | | | | (_| | |  __/ | | (_| |  __/ |_   |  __/ | | \ V /| | | | (_) |
                                                           \_/\_/  |____/ \____|___|_| \_\___|\__, |\__,_|\___||___/\__|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)__, |\___|\__|___\___|_| |_|\_/ |_|_|  \___/ 
                                                                                                 |_|                                                       |___/        |_____|                          
                                                                       
                                                         _ __      _   
                                                        | '_ \   _| |_ 
                                                        | | | | |_   _|
                                                        |_| |_|   |_|  
                                                                       
                                                        
                                                        + T0: 208: wsgiref.simple_server.WSGIRequestHandler.get_environ => 
                                                        - T0: 208: wsgiref.simple_server.WSGIRequestHandler.get_environ <= {'SERVER_PROTOCOL': 'HTTP/1.1', 'SERVER_NAME': 'vm-desktop', 'CONTENT_LENGTH': '5', 'REMOTE_HOST': '', 'SCRIPT_NAME': '', 'SERVER_SOFTWARE': 'WSGIServer/0.2', 'HTTP_USER_AGENT': 'curl/7.33.0', 'PATH_INFO': '/', 'CONTENT_TYPE': 'application/x-www-form-urlencoded', 'SERVER_PORT': '8000', 'QUERY_STRING': '', 'GATEWAY_INTERFACE': 'CGI/1.1', 'REMOTE_ADDR': '127.0.0.1', 'HTTP_HOST': '127.0.0.1:8000', 'HTTP_ACCEPT': '*/*', 'REQUEST_METHOD': 'POST'}
                                                                 _____ ___            ____   ___   ___          
                                                                |_   _/ _ \          |___ \ / _ \ ( _ )         
                                                         _____    | || | | |  _____    __) | | | |/ _ \   _____ 
                                                        |_____|   | || |_| | |_____|  / __/| |_| | (_) | |_____|
                                                                  |_| \___/          |_____|\___/ \___/         
                                                                                                                
                                                        __        ______   ____ ___ ____                            _   _   _                 _ _                     _                      _           
                                                        \ \      / / ___| / ___|_ _|  _ \ ___  __ _ _   _  ___  ___| |_| | | | __ _ _ __   __| | | ___ _ __ __ _  ___| |_     ___ _ ____   _(_)_ __ ___  
                                                         \ \ /\ / /\___ \| |  _ | || |_) / _ \/ _` | | | |/ _ \/ __| __| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ _` |/ _ \ __|   / _ \ '_ \ \ / / | '__/ _ \ 
                                                          \ V  V /  ___) | |_| || ||  _ <  __/ (_| | |_| |  __/\__ \ |_|  _  | (_| | | | | (_| | |  __/ | | (_| |  __/ |_   |  __/ | | \ V /| | | | (_) |
                                                           \_/\_/  |____/ \____|___|_| \_\___|\__, |\__,_|\___||___/\__|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)__, |\___|\__|___\___|_| |_|\_/ |_|_|  \___/ 
                                                                                                 |_|                                                       |___/        |_____|                          
                                                                       
                                                         _ __          
                                                        | '_ \   _____ 
                                                        | | | | |_____|
                                                        |_| |_|        
                                                                       
                                                        
                                                                + T0: 231: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x00000151E8E86EB8> )
                                                                - T0: 231: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                                 _____ ___            ____  _____  ___          
                                                           _    |_   _/ _ \     _    |___ \|___ / / _ \     _   
                                                         _| |_    | || | | |  _| |_    __) | |_ \| | | |  _| |_ 
                                                        |_   _|   | || |_| | |_   _|  / __/ ___) | |_| | |_   _|
                                                          |_|     |_| \___/    |_|   |_____|____/ \___/    |_|  
                                                                                                                
                                                         ____  _                 _      _   _                 _ _                     _       _ _                      
                                                        / ___|(_)_ __ ___  _ __ | | ___| | | | __ _ _ __   __| | | ___ _ __          (_)_ __ (_) |_                _   
                                                        \___ \| | '_ ` _ \| '_ \| |/ _ \ |_| |/ _` | '_ \ / _` | |/ _ \ '__|         | | '_ \| | __|             _| |_ 
                                                         ___) | | | | | | | |_) | |  __/  _  | (_| | | | | (_| | |  __/ | _          | | | | | | |_             |_   _|
                                                        |____/|_|_| |_| |_| .__/|_|\___|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)____ ____|_|_| |_|_|\__|____ _____    |_|  
                                                                          |_|                                             |_____|_____|           |_____|_____|        
                                                        
                                                        + T0: 230: wsgiref.simple_server.ServerHandler.__init__ -> wsgiref.handlers.SimpleHandler.__init__ => ( stdin=<_io.BufferedReader name=1252>, stdout=<socket.SocketIO object at 0x00000151E8E8D208>, stderr=<_io.TextIOWrapper name='<stderr>' mode='w' encoding='cp936'>, environ={...}, multithread=True, multiprocess=False )
                                                                        + T0: 233: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x00000151E8E86EB8> )
                                                                        - T0: 233: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                                + T0: 232: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='stdin', value=<_io.BufferedReader name=1252> )
                                                                        + T0: 234: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x00000151E8E86EB8> )
                                                                        - T0: 234: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                                - T0: 232: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                + T0: 235: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='stdout', value=<socket.SocketIO object at 0x00000151E8E8D208> )
                                                                - T0: 235: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                + T0: 236: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='stderr', value=<_io.TextIOWrapper name='<stderr>' mode='w' encoding='cp936'> )
                                                                - T0: 236: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                + T0: 237: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='base_env', value={'SERVER_PROTOCOL': 'HTTP/1.1', 'SERVER_NAME': 'vm-desktop', 'CONTENT_LENGTH': '5', 'REMOTE_HOST': '', 'SCRIPT_NAME': '', 'SERVER_SOFTWARE': 'WSGIServer/0.2', 'HTTP_USER_AGENT': 'curl/7.33.0', 'PATH_INFO': '/', 'CONTENT_TYPE': 'application/x-www-form-urlencoded', 'SERVER_PORT': '8000', 'QUERY_STRING': '', 'GATEWAY_INTERFACE': 'CGI/1.1', 'REMOTE_ADDR': '127.0.0.1', 'HTTP_HOST': '127.0.0.1:8000', 'HTTP_ACCEPT': '*/*', 'REQUEST_METHOD': 'POST'} )
                                                                - T0: 237: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                + T0: 238: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='wsgi_multithread', value=True )
                                                                - T0: 238: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                + T0: 239: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='wsgi_multiprocess', value=False )
                                                                - T0: 239: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                + T0: 240: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x00000151E8E86EB8> )
                                                                - T0: 240: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                        - T0: 230: wsgiref.simple_server.ServerHandler.__init__ -> wsgiref.handlers.SimpleHandler.__init__ <= None
                                                                 _____ ___            ____  _____  ___          
                                                                |_   _/ _ \          |___ \|___ / / _ \         
                                                         _____    | || | | |  _____    __) | |_ \| | | |  _____ 
                                                        |_____|   | || |_| | |_____|  / __/ ___) | |_| | |_____|
                                                                  |_| \___/          |_____|____/ \___/         
                                                                                                                
                                                         ____  _                 _      _   _                 _ _                     _       _ _                      
                                                        / ___|(_)_ __ ___  _ __ | | ___| | | | __ _ _ __   __| | | ___ _ __          (_)_ __ (_) |_                    
                                                        \___ \| | '_ ` _ \| '_ \| |/ _ \ |_| |/ _` | '_ \ / _` | |/ _ \ '__|         | | '_ \| | __|             _____ 
                                                         ___) | | | | | | | |_) | |  __/  _  | (_| | | | | (_| | |  __/ | _          | | | | | | |_             |_____|
                                                        |____/|_|_| |_| |_| .__/|_|\___|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)____ ____|_|_| |_|_|\__|____ _____         
                                                                          |_|                                             |_____|_____|           |_____|_____|        
                                                        
                                                        + T0: 241: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='request_handler', value=<wsgiref.simple_server.WSGIRequestHandler object at 0x00000151E8EF9FD0> )
                                                        - T0: 241: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                 _____ ___            ____  _  _  ____          
                                                           _    |_   _/ _ \     _    |___ \| || ||___ \     _   
                                                         _| |_    | || | | |  _| |_    __) | || |_ __) |  _| |_ 
                                                        |_   _|   | || |_| | |_   _|  / __/|__   _/ __/  |_   _|
                                                          |_|     |_| \___/    |_|   |_____|  |_||_____|   |_|  
                                                                                                                
                                                        __        ______   ____ ___ ____                                     _                                
                                                        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ __ _  ___| |_     __ _ _ __  _ __      _   
                                                         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ _` |/ _ \ __|   / _` | '_ \| '_ \   _| |_ 
                                                          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | | (_| |  __/ |_   | (_| | |_) | |_) | |_   _|
                                                           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)__, |\___|\__|___\__,_| .__/| .__/    |_|  
                                                                                                                  |___/        |_____|   |_|   |_|            
                                                        
                                                        + T0: 242: wsgiref.simple_server.WSGIServer.get_app => 
                                                        - T0: 242: wsgiref.simple_server.WSGIServer.get_app <= <aoiktracecall.wrap.CallWrapper object at 0x00000151E8D47550>
                                                                 _____ ___            ____  _  _  ____          
                                                                |_   _/ _ \          |___ \| || ||___ \         
                                                         _____    | || | | |  _____    __) | || |_ __) |  _____ 
                                                        |_____|   | || |_| | |_____|  / __/|__   _/ __/  |_____|
                                                                  |_| \___/          |_____|  |_||_____|        
                                                                                                                
                                                        __        ______   ____ ___ ____                                     _                                
                                                        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ __ _  ___| |_     __ _ _ __  _ __          
                                                         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ _` |/ _ \ __|   / _` | '_ \| '_ \   _____ 
                                                          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | | (_| |  __/ |_   | (_| | |_) | |_) | |_____|
                                                           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)__, |\___|\__|___\__,_| .__/| .__/         
                                                                                                                  |___/        |_____|   |_|   |_|            
                                                        
                                                                 _____ ___            ____  _  _  _____           ____                           _   _                 _ _                            
                                                           _    |_   _/ _ \     _    |___ \| || ||___ /     _    / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ _ __ _   _ _ __  
                                                         _| |_    | || | | |  _| |_    __) | || |_ |_ \   _| |_  \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| '__| | | | '_ \ 
                                                        |_   _|   | || |_| | |_   _|  / __/|__   _|__) | |_   _|  ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _| |  | |_| | | | |
                                                          |_|     |_| \___/    |_|   |_____|  |_||____/    |_|   |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_|   \__,_|_| |_|
                                                                                                                                                                                                      
                                                               
                                                           _   
                                                         _| |_ 
                                                        |_   _|
                                                          |_|  
                                                               
                                                        
                                                        + T0: 243: wsgiref.simple_server.ServerHandler.run -> wsgiref.handlers.BaseHandler.run => ( application=<aoiktracecall.wrap.CallWrapper object at 0x00000151E8D47550> )
                                                                         _____ ___            ____  _  _   _  _           
                                                                   _    |_   _/ _ \     _    |___ \| || | | || |      _   
                                                                 _| |_    | || | | |  _| |_    __) | || |_| || |_   _| |_ 
                                                                |_   _|   | || |_| | |_   _|  / __/|__   _|__   _| |_   _|
                                                                  |_|     |_| \___/    |_|   |_____|  |_|    |_|     |_|  
                                                                                                                          
                                                                 ____                           _   _                 _ _                    _                                 _                         
                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___  ___| |_ _   _ _ __     ___ _ ____   _(_)_ __ ___  _ __      _   
                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __|/ _ \ __| | | | '_ \   / _ \ '_ \ \ / / | '__/ _ \| '_ \   _| |_ 
                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _\__ \  __/ |_| |_| | |_) | |  __/ | | \ V /| | | | (_) | | | | |_   _|
                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___/\___|\__|\__,_| .__/___\___|_| |_|\_/ |_|_|  \___/|_| |_|   |_|  
                                                                                                                                                      |_| |_____|                                        
                                                                
                                                                + T0: 244: wsgiref.simple_server.ServerHandler.setup_environ -> wsgiref.handlers.BaseHandler.setup_environ => 
                                                                - T0: 244: wsgiref.simple_server.ServerHandler.setup_environ -> wsgiref.handlers.BaseHandler.setup_environ <= None
                                                                         _____ ___            ____  _  _   _  _           
                                                                        |_   _/ _ \          |___ \| || | | || |          
                                                                 _____    | || | | |  _____    __) | || |_| || |_   _____ 
                                                                |_____|   | || |_| | |_____|  / __/|__   _|__   _| |_____|
                                                                          |_| \___/          |_____|  |_|    |_|          
                                                                                                                          
                                                                 ____                           _   _                 _ _                    _                                 _                         
                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___  ___| |_ _   _ _ __     ___ _ ____   _(_)_ __ ___  _ __          
                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __|/ _ \ __| | | | '_ \   / _ \ '_ \ \ / / | '__/ _ \| '_ \   _____ 
                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _\__ \  __/ |_| |_| | |_) | |  __/ | | \ V /| | | | (_) | | | | |_____|
                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___/\___|\__|\__,_| .__/___\___|_| |_|\_/ |_|_|  \___/|_| |_|        
                                                                                                                                                      |_| |_____|                                        
                                                                
                                                                        + T0: 252: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x00000151E8E86EB8> )
                                                                        - T0: 252: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                                         _____ ___            ____  ____  _            ____          _                     _                        
                                                                   _    |_   _/ _ \     _    |___ \| ___|/ |    _     / ___|   _ ___| |_ ___  _ __ ___    / \   _ __  _ __      _   
                                                                 _| |_    | || | | |  _| |_    __) |___ \| |  _| |_  | |  | | | / __| __/ _ \| '_ ` _ \  / _ \ | '_ \| '_ \   _| |_ 
                                                                |_   _|   | || |_| | |_   _|  / __/ ___) | | |_   _| | |__| |_| \__ \ || (_) | | | | | |/ ___ \| |_) | |_) | |_   _|
                                                                  |_|     |_| \___/    |_|   |_____|____/|_|   |_|    \____\__,_|___/\__\___/|_| |_| |_/_/   \_\ .__/| .__/    |_|  
                                                                                                                                                               |_|   |_|            
                                                                
                                                                + T0: 251: __main__.CustomApp => ( environ={...}, start_response=<bound method BaseHandler.start_response of <wsgiref.simple_server.ServerHandler object at 0x00000151E8E49390>> )
                                                                                 _____ ___            ____  ____ _____         
                                                                           _    |_   _/ _ \     _    |___ \| ___|___ /     _   
                                                                         _| |_    | || | | |  _| |_    __) |___ \ |_ \   _| |_ 
                                                                        |_   _|   | || |_| | |_   _|  / __/ ___) |__) | |_   _|
                                                                          |_|     |_| \___/    |_|   |_____|____/____/    |_|  
                                                                                                                               
                                                                         ____                           _   _                 _ _               _             _                                                        
                                                                        / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___| |_ __ _ _ __| |_     _ __ ___  ___ _ __   ___  _ __  ___  ___     _   
                                                                        \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __| __/ _` | '__| __|   | '__/ _ \/ __| '_ \ / _ \| '_ \/ __|/ _ \  _| |_ 
                                                                         ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _\__ \ || (_| | |  | |_    | | |  __/\__ \ |_) | (_) | | | \__ \  __/ |_   _|
                                                                        |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___/\__\__,_|_|   \__|___|_|  \___||___/ .__/ \___/|_| |_|___/\___|   |_|  
                                                                                                                                                                |_____|            |_|                                 
                                                                        
                                                                        + T0: 253: wsgiref.simple_server.ServerHandler.start_response -> wsgiref.handlers.BaseHandler.start_response => ( status='200 OK', headers=[('Content-Length', '5')], exc_info=None )
                                                                                + T0: 254: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='status', value='200 OK' )
                                                                                - T0: 254: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                                         _____ ___            ____  ____ ____          
                                                                                   _    |_   _/ _ \     _    |___ \| ___| ___|     _   
                                                                                 _| |_    | || | | |  _| |_    __) |___ \___ \   _| |_ 
                                                                                |_   _|   | || |_| | |_   _|  / __/ ___) |__) | |_   _|
                                                                                  |_|     |_| \___/    |_|   |_____|____/____/    |_|  
                                                                                                                                       
                                                                                 ____                           _   _                 _ _           _                    _                       _                       
                                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __| |__   ___  __ _  __| | ___ _ __ ___     ___| | __ _ ___ ___     _   
                                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| '_ \ / _ \/ _` |/ _` |/ _ \ '__/ __|   / __| |/ _` / __/ __|  _| |_ 
                                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _| | | |  __/ (_| | (_| |  __/ |  \__ \  | (__| | (_| \__ \__ \ |_   _|
                                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|\___|\__,_|\__,_|\___|_|  |___/___\___|_|\__,_|___/___/   |_|  
                                                                                                                                                                                       |_____|                           
                                                                                
                                                                                + T0: 255: wsgiref.simple_server.ServerHandler.headers_class -> wsgiref.handlers.SimpleHandler.headers_class => ( *args=[ [('Content-Length', '5')] ], **kwargs={} )
                                                                                                 _____ ___            ____  ____   __           
                                                                                           _    |_   _/ _ \     _    |___ \| ___| / /_      _   
                                                                                         _| |_    | || | | |  _| |_    __) |___ \| '_ \   _| |_ 
                                                                                        |_   _|   | || |_| | |_   _|  / __/ ___) | (_) | |_   _|
                                                                                          |_|     |_| \___/    |_|   |_____|____/ \___/    |_|  
                                                                                                                                                
                                                                                         ____  _                 _      _   _                 _ _           _                    _                       _                       
                                                                                        / ___|(_)_ __ ___  _ __ | | ___| | | | __ _ _ __   __| | | ___ _ __| |__   ___  __ _  __| | ___ _ __ ___     ___| | __ _ ___ ___     _   
                                                                                        \___ \| | '_ ` _ \| '_ \| |/ _ \ |_| |/ _` | '_ \ / _` | |/ _ \ '__| '_ \ / _ \/ _` |/ _` |/ _ \ '__/ __|   / __| |/ _` / __/ __|  _| |_ 
                                                                                         ___) | | | | | | | |_) | |  __/  _  | (_| | | | | (_| | |  __/ | _| | | |  __/ (_| | (_| |  __/ |  \__ \  | (__| | (_| \__ \__ \ |_   _|
                                                                                        |____/|_|_| |_| |_| .__/|_|\___|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|\___|\__,_|\__,_|\___|_|  |___/___\___|_|\__,_|___/___/   |_|  
                                                                                                          |_|                                                                                  |_____|                           
                                                                                        
                                                                                        + T0: 256: wsgiref.handlers.SimpleHandler.headers_class -> wsgiref.handlers.BaseHandler.headers_class => ( *args=[ [('Content-Length', '5')] ], **kwargs={} )
                                                                                                         _____ ___            ____  ____ _____         
                                                                                                   _    |_   _/ _ \     _    |___ \| ___|___  |    _   
                                                                                                 _| |_    | || | | |  _| |_    __) |___ \  / /   _| |_ 
                                                                                                |_   _|   | || |_| | |_   _|  / __/ ___) |/ /   |_   _|
                                                                                                  |_|     |_| \___/    |_|   |_____|____//_/      |_|  
                                                                                                                                                       
                                                                                                 ____                 _   _                 _ _           _                    _                       _                       
                                                                                                | __ )  __ _ ___  ___| | | | __ _ _ __   __| | | ___ _ __| |__   ___  __ _  __| | ___ _ __ ___     ___| | __ _ ___ ___     _   
                                                                                                |  _ \ / _` / __|/ _ \ |_| |/ _` | '_ \ / _` | |/ _ \ '__| '_ \ / _ \/ _` |/ _` |/ _ \ '__/ __|   / __| |/ _` / __/ __|  _| |_ 
                                                                                                | |_) | (_| \__ \  __/  _  | (_| | | | | (_| | |  __/ | _| | | |  __/ (_| | (_| |  __/ |  \__ \  | (__| | (_| \__ \__ \ |_   _|
                                                                                                |____/ \__,_|___/\___|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|\___|\__,_|\__,_|\___|_|  |___/___\___|_|\__,_|___/___/   |_|  
                                                                                                                                                                                             |_____|                           
                                                                                                
                                                                                                + T0: 257: wsgiref.handlers.BaseHandler.headers_class => ( headers=[('Content-Length', '5')] )
                                                                                                                 _____ ___            ____  ____   ___            _   _                _                           _       _ _                      
                                                                                                           _    |_   _/ _ \     _    |___ \| ___| ( _ )     _    | | | | ___  __ _  __| | ___ _ __ ___            (_)_ __ (_) |_                _   
                                                                                                         _| |_    | || | | |  _| |_    __) |___ \ / _ \   _| |_  | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __|           | | '_ \| | __|             _| |_ 
                                                                                                        |_   _|   | || |_| | |_   _|  / __/ ___) | (_) | |_   _| |  _  |  __/ (_| | (_| |  __/ |  \__ \_          | | | | | | |_             |_   _|
                                                                                                          |_|     |_| \___/    |_|   |_____|____/ \___/    |_|   |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)____ ____|_|_| |_|_|\__|____ _____    |_|  
                                                                                                                                                                                                       |_____|_____|           |_____|_____|        
                                                                                                        
                                                                                                        + T0: 258: wsgiref.headers.Headers.__init__ => ( headers=[('Content-Length', '5')] )
                                                                                                                + T0: 259: wsgiref.headers.Headers.__setattr__ -> builtins.object.__setattr__ => ( name='_headers', value=[('Content-Length', '5')] )
                                                                                                                - T0: 259: wsgiref.headers.Headers.__setattr__ -> builtins.object.__setattr__ <= None
                                                                                                                         _____ ___            ____   __    ___          
                                                                                                                   _    |_   _/ _ \     _    |___ \ / /_  / _ \     _   
                                                                                                                 _| |_    | || | | |  _| |_    __) | '_ \| | | |  _| |_ 
                                                                                                                |_   _|   | || |_| | |_   _|  / __/| (_) | |_| | |_   _|
                                                                                                                  |_|     |_| \___/    |_|   |_____|\___/ \___/    |_|  
                                                                                                                                                                        
                                                                                                                 _   _                _                                                  _           _        _                _                            
                                                                                                                | | | | ___  __ _  __| | ___ _ __ ___       ___ ___  _ ____   _____ _ __| |_     ___| |_ _ __(_)_ __   __ _   | |_ _   _ _ __   ___     _   
                                                                                                                | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __|     / __/ _ \| '_ \ \ / / _ \ '__| __|   / __| __| '__| | '_ \ / _` |  | __| | | | '_ \ / _ \  _| |_ 
                                                                                                                |  _  |  __/ (_| | (_| |  __/ |  \__ \_   | (_| (_) | | | \ V /  __/ |  | |_    \__ \ |_| |  | | | | | (_| |  | |_| |_| | |_) |  __/ |_   _|
                                                                                                                |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)___\___\___/|_| |_|\_/ \___|_|   \__|___|___/\__|_|  |_|_| |_|\__, |___\__|\__, | .__/ \___|   |_|  
                                                                                                                                                      |_____|                              |_____|                    |___/_____|  |___/|_|                 
                                                                                                                
                                                                                                                + T0: 260: wsgiref.headers.Headers._convert_string_type => ( value='Content-Length' )
                                                                                                                - T0: 260: wsgiref.headers.Headers._convert_string_type <= 'Content-Length'
                                                                                                                         _____ ___            ____   __    ___          
                                                                                                                        |_   _/ _ \          |___ \ / /_  / _ \         
                                                                                                                 _____    | || | | |  _____    __) | '_ \| | | |  _____ 
                                                                                                                |_____|   | || |_| | |_____|  / __/| (_) | |_| | |_____|
                                                                                                                          |_| \___/          |_____|\___/ \___/         
                                                                                                                                                                        
                                                                                                                 _   _                _                                                  _           _        _                _                            
                                                                                                                | | | | ___  __ _  __| | ___ _ __ ___       ___ ___  _ ____   _____ _ __| |_     ___| |_ _ __(_)_ __   __ _   | |_ _   _ _ __   ___         
                                                                                                                | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __|     / __/ _ \| '_ \ \ / / _ \ '__| __|   / __| __| '__| | '_ \ / _` |  | __| | | | '_ \ / _ \  _____ 
                                                                                                                |  _  |  __/ (_| | (_| |  __/ |  \__ \_   | (_| (_) | | | \ V /  __/ |  | |_    \__ \ |_| |  | | | | | (_| |  | |_| |_| | |_) |  __/ |_____|
                                                                                                                |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)___\___\___/|_| |_|\_/ \___|_|   \__|___|___/\__|_|  |_|_| |_|\__, |___\__|\__, | .__/ \___|        
                                                                                                                                                      |_____|                              |_____|                    |___/_____|  |___/|_|                 
                                                                                                                
                                                                                                                         _____ ___            ____   __   _         
                                                                                                                   _    |_   _/ _ \     _    |___ \ / /_ / |    _   
                                                                                                                 _| |_    | || | | |  _| |_    __) | '_ \| |  _| |_ 
                                                                                                                |_   _|   | || |_| | |_   _|  / __/| (_) | | |_   _|
                                                                                                                  |_|     |_| \___/    |_|   |_____|\___/|_|   |_|  
                                                                                                                                                                    
                                                                                                                 _   _                _                                                  _           _        _                _                            
                                                                                                                | | | | ___  __ _  __| | ___ _ __ ___       ___ ___  _ ____   _____ _ __| |_     ___| |_ _ __(_)_ __   __ _   | |_ _   _ _ __   ___     _   
                                                                                                                | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __|     / __/ _ \| '_ \ \ / / _ \ '__| __|   / __| __| '__| | '_ \ / _` |  | __| | | | '_ \ / _ \  _| |_ 
                                                                                                                |  _  |  __/ (_| | (_| |  __/ |  \__ \_   | (_| (_) | | | \ V /  __/ |  | |_    \__ \ |_| |  | | | | | (_| |  | |_| |_| | |_) |  __/ |_   _|
                                                                                                                |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)___\___\___/|_| |_|\_/ \___|_|   \__|___|___/\__|_|  |_|_| |_|\__, |___\__|\__, | .__/ \___|   |_|  
                                                                                                                                                      |_____|                              |_____|                    |___/_____|  |___/|_|                 
                                                                                                                
                                                                                                                + T0: 261: wsgiref.headers.Headers._convert_string_type => ( value='5' )
                                                                                                                - T0: 261: wsgiref.headers.Headers._convert_string_type <= '5'
                                                                                                                         _____ ___            ____   __   _         
                                                                                                                        |_   _/ _ \          |___ \ / /_ / |        
                                                                                                                 _____    | || | | |  _____    __) | '_ \| |  _____ 
                                                                                                                |_____|   | || |_| | |_____|  / __/| (_) | | |_____|
                                                                                                                          |_| \___/          |_____|\___/|_|        
                                                                                                                                                                    
                                                                                                                 _   _                _                                                  _           _        _                _                            
                                                                                                                | | | | ___  __ _  __| | ___ _ __ ___       ___ ___  _ ____   _____ _ __| |_     ___| |_ _ __(_)_ __   __ _   | |_ _   _ _ __   ___         
                                                                                                                | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __|     / __/ _ \| '_ \ \ / / _ \ '__| __|   / __| __| '__| | '_ \ / _` |  | __| | | | '_ \ / _ \  _____ 
                                                                                                                |  _  |  __/ (_| | (_| |  __/ |  \__ \_   | (_| (_) | | | \ V /  __/ |  | |_    \__ \ |_| |  | | | | | (_| |  | |_| |_| | |_) |  __/ |_____|
                                                                                                                |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)___\___\___/|_| |_|\_/ \___|_|   \__|___|___/\__|_|  |_|_| |_|\__, |___\__|\__, | .__/ \___|        
                                                                                                                                                      |_____|                              |_____|                    |___/_____|  |___/|_|                 
                                                                                                                
                                                                                                        - T0: 258: wsgiref.headers.Headers.__init__ <= None
                                                                                                                 _____ ___            ____  ____   ___            _   _                _                           _       _ _                      
                                                                                                                |_   _/ _ \          |___ \| ___| ( _ )          | | | | ___  __ _  __| | ___ _ __ ___            (_)_ __ (_) |_                    
                                                                                                         _____    | || | | |  _____    __) |___ \ / _ \   _____  | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __|           | | '_ \| | __|             _____ 
                                                                                                        |_____|   | || |_| | |_____|  / __/ ___) | (_) | |_____| |  _  |  __/ (_| | (_| |  __/ |  \__ \_          | | | | | | |_             |_____|
                                                                                                                  |_| \___/          |_____|____/ \___/          |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)____ ____|_|_| |_|_|\__|____ _____         
                                                                                                                                                                                                       |_____|_____|           |_____|_____|        
                                                                                                        
                                                                                                - T0: 257: wsgiref.handlers.BaseHandler.headers_class <= Headers([('Content-Length', '5')])
                                                                                                         _____ ___            ____  ____ _____         
                                                                                                        |_   _/ _ \          |___ \| ___|___  |        
                                                                                                 _____    | || | | |  _____    __) |___ \  / /   _____ 
                                                                                                |_____|   | || |_| | |_____|  / __/ ___) |/ /   |_____|
                                                                                                          |_| \___/          |_____|____//_/           
                                                                                                                                                       
                                                                                                 ____                 _   _                 _ _           _                    _                       _                       
                                                                                                | __ )  __ _ ___  ___| | | | __ _ _ __   __| | | ___ _ __| |__   ___  __ _  __| | ___ _ __ ___     ___| | __ _ ___ ___         
                                                                                                |  _ \ / _` / __|/ _ \ |_| |/ _` | '_ \ / _` | |/ _ \ '__| '_ \ / _ \/ _` |/ _` |/ _ \ '__/ __|   / __| |/ _` / __/ __|  _____ 
                                                                                                | |_) | (_| \__ \  __/  _  | (_| | | | | (_| | |  __/ | _| | | |  __/ (_| | (_| |  __/ |  \__ \  | (__| | (_| \__ \__ \ |_____|
                                                                                                |____/ \__,_|___/\___|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|\___|\__,_|\__,_|\___|_|  |___/___\___|_|\__,_|___/___/        
                                                                                                                                                                                             |_____|                           
                                                                                                
                                                                                        - T0: 256: wsgiref.handlers.SimpleHandler.headers_class -> wsgiref.handlers.BaseHandler.headers_class <= Headers([('Content-Length', '5')])
                                                                                                 _____ ___            ____  ____   __           
                                                                                                |_   _/ _ \          |___ \| ___| / /_          
                                                                                         _____    | || | | |  _____    __) |___ \| '_ \   _____ 
                                                                                        |_____|   | || |_| | |_____|  / __/ ___) | (_) | |_____|
                                                                                                  |_| \___/          |_____|____/ \___/         
                                                                                                                                                
                                                                                         ____  _                 _      _   _                 _ _           _                    _                       _                       
                                                                                        / ___|(_)_ __ ___  _ __ | | ___| | | | __ _ _ __   __| | | ___ _ __| |__   ___  __ _  __| | ___ _ __ ___     ___| | __ _ ___ ___         
                                                                                        \___ \| | '_ ` _ \| '_ \| |/ _ \ |_| |/ _` | '_ \ / _` | |/ _ \ '__| '_ \ / _ \/ _` |/ _` |/ _ \ '__/ __|   / __| |/ _` / __/ __|  _____ 
                                                                                         ___) | | | | | | | |_) | |  __/  _  | (_| | | | | (_| | |  __/ | _| | | |  __/ (_| | (_| |  __/ |  \__ \  | (__| | (_| \__ \__ \ |_____|
                                                                                        |____/|_|_| |_| |_| .__/|_|\___|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|\___|\__,_|\__,_|\___|_|  |___/___\___|_|\__,_|___/___/        
                                                                                                          |_|                                                                                  |_____|                           
                                                                                        
                                                                                - T0: 255: wsgiref.simple_server.ServerHandler.headers_class -> wsgiref.handlers.SimpleHandler.headers_class <= Headers([('Content-Length', '5')])
                                                                                         _____ ___            ____  ____ ____          
                                                                                        |_   _/ _ \          |___ \| ___| ___|         
                                                                                 _____    | || | | |  _____    __) |___ \___ \   _____ 
                                                                                |_____|   | || |_| | |_____|  / __/ ___) |__) | |_____|
                                                                                          |_| \___/          |_____|____/____/         
                                                                                                                                       
                                                                                 ____                           _   _                 _ _           _                    _                       _                       
                                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __| |__   ___  __ _  __| | ___ _ __ ___     ___| | __ _ ___ ___         
                                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| '_ \ / _ \/ _` |/ _` |/ _ \ '__/ __|   / __| |/ _` / __/ __|  _____ 
                                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _| | | |  __/ (_| | (_| |  __/ |  \__ \  | (__| | (_| \__ \__ \ |_____|
                                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|\___|\__,_|\__,_|\___|_|  |___/___\___|_|\__,_|___/___/        
                                                                                                                                                                                       |_____|                           
                                                                                
                                                                                + T0: 262: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='headers', value=Headers([('Content-Length', '5')]) )
                                                                                - T0: 262: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                                         _____ ___            ____   __  _____         
                                                                                   _    |_   _/ _ \     _    |___ \ / /_|___ /     _   
                                                                                 _| |_    | || | | |  _| |_    __) | '_ \ |_ \   _| |_ 
                                                                                |_   _|   | || |_| | |_   _|  / __/| (_) |__) | |_   _|
                                                                                  |_|     |_| \___/    |_|   |_____|\___/____/    |_|  
                                                                                                                                       
                                                                                 ____                           _   _                 _ _                                            _           _        _                _         
                                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __     ___ ___  _ ____   _____ _ __| |_     ___| |_ _ __(_)_ __   __ _   | |_ _   _ 
                                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__|   / __/ _ \| '_ \ \ / / _ \ '__| __|   / __| __| '__| | '_ \ / _` |  | __| | | |
                                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _   | (_| (_) | | | \ V /  __/ |  | |_    \__ \ |_| |  | | | | | (_| |  | |_| |_| |
                                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___\___\___/|_| |_|\_/ \___|_|   \__|___|___/\__|_|  |_|_| |_|\__, |___\__|\__, |
                                                                                                                                                  |_____|                              |_____|                    |___/_____|  |___/ 
                                                                                                    
                                                                                 _ __   ___     _   
                                                                                | '_ \ / _ \  _| |_ 
                                                                                | |_) |  __/ |_   _|
                                                                                | .__/ \___|   |_|  
                                                                                |_|                 
                                                                                
                                                                                + T0: 263: wsgiref.simple_server.ServerHandler._convert_string_type -> wsgiref.handlers.BaseHandler._convert_string_type => ( value='200 OK', title='Status' )
                                                                                - T0: 263: wsgiref.simple_server.ServerHandler._convert_string_type -> wsgiref.handlers.BaseHandler._convert_string_type <= '200 OK'
                                                                                         _____ ___            ____   __  _____         
                                                                                        |_   _/ _ \          |___ \ / /_|___ /         
                                                                                 _____    | || | | |  _____    __) | '_ \ |_ \   _____ 
                                                                                |_____|   | || |_| | |_____|  / __/| (_) |__) | |_____|
                                                                                          |_| \___/          |_____|\___/____/         
                                                                                                                                       
                                                                                 ____                           _   _                 _ _                                            _           _        _                _         
                                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __     ___ ___  _ ____   _____ _ __| |_     ___| |_ _ __(_)_ __   __ _   | |_ _   _ 
                                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__|   / __/ _ \| '_ \ \ / / _ \ '__| __|   / __| __| '__| | '_ \ / _` |  | __| | | |
                                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _   | (_| (_) | | | \ V /  __/ |  | |_    \__ \ |_| |  | | | | | (_| |  | |_| |_| |
                                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___\___\___/|_| |_|\_/ \___|_|   \__|___|___/\__|_|  |_|_| |_|\__, |___\__|\__, |
                                                                                                                                                  |_____|                              |_____|                    |___/_____|  |___/ 
                                                                                                    
                                                                                 _ __   ___         
                                                                                | '_ \ / _ \  _____ 
                                                                                | |_) |  __/ |_____|
                                                                                | .__/ \___|        
                                                                                |_|                 
                                                                                
                                                                                         _____ ___            ____   __   _  _           
                                                                                   _    |_   _/ _ \     _    |___ \ / /_ | || |      _   
                                                                                 _| |_    | || | | |  _| |_    __) | '_ \| || |_   _| |_ 
                                                                                |_   _|   | || |_| | |_   _|  / __/| (_) |__   _| |_   _|
                                                                                  |_|     |_| \___/    |_|   |_____|\___/   |_|     |_|  
                                                                                                                                         
                                                                                 ____                           _   _                 _ _                                            _           _        _                _         
                                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __     ___ ___  _ ____   _____ _ __| |_     ___| |_ _ __(_)_ __   __ _   | |_ _   _ 
                                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__|   / __/ _ \| '_ \ \ / / _ \ '__| __|   / __| __| '__| | '_ \ / _` |  | __| | | |
                                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _   | (_| (_) | | | \ V /  __/ |  | |_    \__ \ |_| |  | | | | | (_| |  | |_| |_| |
                                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___\___\___/|_| |_|\_/ \___|_|   \__|___|___/\__|_|  |_|_| |_|\__, |___\__|\__, |
                                                                                                                                                  |_____|                              |_____|                    |___/_____|  |___/ 
                                                                                                    
                                                                                 _ __   ___     _   
                                                                                | '_ \ / _ \  _| |_ 
                                                                                | |_) |  __/ |_   _|
                                                                                | .__/ \___|   |_|  
                                                                                |_|                 
                                                                                
                                                                                + T0: 264: wsgiref.simple_server.ServerHandler._convert_string_type -> wsgiref.handlers.BaseHandler._convert_string_type => ( value='Content-Length', title='Header name' )
                                                                                - T0: 264: wsgiref.simple_server.ServerHandler._convert_string_type -> wsgiref.handlers.BaseHandler._convert_string_type <= 'Content-Length'
                                                                                         _____ ___            ____   __   _  _           
                                                                                        |_   _/ _ \          |___ \ / /_ | || |          
                                                                                 _____    | || | | |  _____    __) | '_ \| || |_   _____ 
                                                                                |_____|   | || |_| | |_____|  / __/| (_) |__   _| |_____|
                                                                                          |_| \___/          |_____|\___/   |_|          
                                                                                                                                         
                                                                                 ____                           _   _                 _ _                                            _           _        _                _         
                                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __     ___ ___  _ ____   _____ _ __| |_     ___| |_ _ __(_)_ __   __ _   | |_ _   _ 
                                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__|   / __/ _ \| '_ \ \ / / _ \ '__| __|   / __| __| '__| | '_ \ / _` |  | __| | | |
                                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _   | (_| (_) | | | \ V /  __/ |  | |_    \__ \ |_| |  | | | | | (_| |  | |_| |_| |
                                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___\___\___/|_| |_|\_/ \___|_|   \__|___|___/\__|_|  |_|_| |_|\__, |___\__|\__, |
                                                                                                                                                  |_____|                              |_____|                    |___/_____|  |___/ 
                                                                                                    
                                                                                 _ __   ___         
                                                                                | '_ \ / _ \  _____ 
                                                                                | |_) |  __/ |_____|
                                                                                | .__/ \___|        
                                                                                |_|                 
                                                                                
                                                                                         _____ ___            ____   __  ____          
                                                                                   _    |_   _/ _ \     _    |___ \ / /_| ___|     _   
                                                                                 _| |_    | || | | |  _| |_    __) | '_ \___ \   _| |_ 
                                                                                |_   _|   | || |_| | |_   _|  / __/| (_) |__) | |_   _|
                                                                                  |_|     |_| \___/    |_|   |_____|\___/____/    |_|  
                                                                                                                                       
                                                                                 ____                           _   _                 _ _                                            _           _        _                _         
                                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __     ___ ___  _ ____   _____ _ __| |_     ___| |_ _ __(_)_ __   __ _   | |_ _   _ 
                                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__|   / __/ _ \| '_ \ \ / / _ \ '__| __|   / __| __| '__| | '_ \ / _` |  | __| | | |
                                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _   | (_| (_) | | | \ V /  __/ |  | |_    \__ \ |_| |  | | | | | (_| |  | |_| |_| |
                                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___\___\___/|_| |_|\_/ \___|_|   \__|___|___/\__|_|  |_|_| |_|\__, |___\__|\__, |
                                                                                                                                                  |_____|                              |_____|                    |___/_____|  |___/ 
                                                                                                    
                                                                                 _ __   ___     _   
                                                                                | '_ \ / _ \  _| |_ 
                                                                                | |_) |  __/ |_   _|
                                                                                | .__/ \___|   |_|  
                                                                                |_|                 
                                                                                
                                                                                + T0: 265: wsgiref.simple_server.ServerHandler._convert_string_type -> wsgiref.handlers.BaseHandler._convert_string_type => ( value='5', title='Header value' )
                                                                                - T0: 265: wsgiref.simple_server.ServerHandler._convert_string_type -> wsgiref.handlers.BaseHandler._convert_string_type <= '5'
                                                                                         _____ ___            ____   __  ____          
                                                                                        |_   _/ _ \          |___ \ / /_| ___|         
                                                                                 _____    | || | | |  _____    __) | '_ \___ \   _____ 
                                                                                |_____|   | || |_| | |_____|  / __/| (_) |__) | |_____|
                                                                                          |_| \___/          |_____|\___/____/         
                                                                                                                                       
                                                                                 ____                           _   _                 _ _                                            _           _        _                _         
                                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __     ___ ___  _ ____   _____ _ __| |_     ___| |_ _ __(_)_ __   __ _   | |_ _   _ 
                                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__|   / __/ _ \| '_ \ \ / / _ \ '__| __|   / __| __| '__| | '_ \ / _` |  | __| | | |
                                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _   | (_| (_) | | | \ V /  __/ |  | |_    \__ \ |_| |  | | | | | (_| |  | |_| |_| |
                                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___\___\___/|_| |_|\_/ \___|_|   \__|___|___/\__|_|  |_|_| |_|\__, |___\__|\__, |
                                                                                                                                                  |_____|                              |_____|                    |___/_____|  |___/ 
                                                                                                    
                                                                                 _ __   ___         
                                                                                | '_ \ / _ \  _____ 
                                                                                | |_) |  __/ |_____|
                                                                                | .__/ \___|        
                                                                                |_|                 
                                                                                
                                                                                         _____ ___            ____   __    __             _         _                    _               _                         
                                                                                   _    |_   _/ _ \     _    |___ \ / /_  / /_      _    (_)___    | |__   ___  _ __    | |__  _   _    | |__   ___  _ __      _   
                                                                                 _| |_    | || | | |  _| |_    __) | '_ \| '_ \   _| |_  | / __|   | '_ \ / _ \| '_ \   | '_ \| | | |   | '_ \ / _ \| '_ \   _| |_ 
                                                                                |_   _|   | || |_| | |_   _|  / __/| (_) | (_) | |_   _| | \__ \   | | | | (_) | |_) |  | |_) | |_| |   | | | | (_) | |_) | |_   _|
                                                                                  |_|     |_| \___/    |_|   |_____|\___/ \___/    |_|   |_|___/___|_| |_|\___/| .__/___|_.__/ \__, |___|_| |_|\___/| .__/    |_|  
                                                                                                                                              |_____|          |_| |_____|     |___/_____|          |_|            
                                                                                
                                                                                + T0: 266: wsgiref.util.is_hop_by_hop => ( header_name='Content-Length' )
                                                                                - T0: 266: wsgiref.util.is_hop_by_hop <= False
                                                                                         _____ ___            ____   __    __             _         _                    _               _                         
                                                                                        |_   _/ _ \          |___ \ / /_  / /_           (_)___    | |__   ___  _ __    | |__  _   _    | |__   ___  _ __          
                                                                                 _____    | || | | |  _____    __) | '_ \| '_ \   _____  | / __|   | '_ \ / _ \| '_ \   | '_ \| | | |   | '_ \ / _ \| '_ \   _____ 
                                                                                |_____|   | || |_| | |_____|  / __/| (_) | (_) | |_____| | \__ \   | | | | (_) | |_) |  | |_) | |_| |   | | | | (_) | |_) | |_____|
                                                                                          |_| \___/          |_____|\___/ \___/          |_|___/___|_| |_|\___/| .__/___|_.__/ \__, |___|_| |_|\___/| .__/         
                                                                                                                                              |_____|          |_| |_____|     |___/_____|          |_|            
                                                                                
                                                                        - T0: 253: wsgiref.simple_server.ServerHandler.start_response -> wsgiref.handlers.BaseHandler.start_response <= <bound method BaseHandler.write of <wsgiref.simple_server.ServerHandler object at 0x00000151E8E49390>>
                                                                                 _____ ___            ____  ____ _____         
                                                                                |_   _/ _ \          |___ \| ___|___ /         
                                                                         _____    | || | | |  _____    __) |___ \ |_ \   _____ 
                                                                        |_____|   | || |_| | |_____|  / __/ ___) |__) | |_____|
                                                                                  |_| \___/          |_____|____/____/         
                                                                                                                               
                                                                         ____                           _   _                 _ _               _             _                                                        
                                                                        / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___| |_ __ _ _ __| |_     _ __ ___  ___ _ __   ___  _ __  ___  ___         
                                                                        \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __| __/ _` | '__| __|   | '__/ _ \/ __| '_ \ / _ \| '_ \/ __|/ _ \  _____ 
                                                                         ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _\__ \ || (_| | |  | |_    | | |  __/\__ \ |_) | (_) | | | \__ \  __/ |_____|
                                                                        |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___/\__\__,_|_|   \__|___|_|  \___||___/ .__/ \___/|_| |_|___/\___|        
                                                                                                                                                                |_____|            |_|                                 
                                                                        
                                                                        + T0: 267: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x00000151E8E86EB8> )
                                                                        - T0: 267: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                                - T0: 251: __main__.CustomApp <= [b'hello']
                                                                         _____ ___            ____  ____  _            ____          _                     _                        
                                                                        |_   _/ _ \          |___ \| ___|/ |          / ___|   _ ___| |_ ___  _ __ ___    / \   _ __  _ __          
                                                                 _____    | || | | |  _____    __) |___ \| |  _____  | |  | | | / __| __/ _ \| '_ ` _ \  / _ \ | '_ \| '_ \   _____ 
                                                                |_____|   | || |_| | |_____|  / __/ ___) | | |_____| | |__| |_| \__ \ || (_) | | | | | |/ ___ \| |_) | |_) | |_____|
                                                                          |_| \___/          |_____|____/|_|          \____\__,_|___/\__\___/|_| |_| |_/_/   \_\ .__/| .__/         
                                                                                                                                                               |_|   |_|            
                                                                
                                                                + T0: 268: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='result', value=[b'hello'] )
                                                                - T0: 268: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                         _____ ___            ____   __   ___          
                                                                   _    |_   _/ _ \     _    |___ \ / /_ / _ \     _   
                                                                 _| |_    | || | | |  _| |_    __) | '_ \ (_) |  _| |_ 
                                                                |_   _|   | || |_| | |_   _|  / __/| (_) \__, | |_   _|
                                                                  |_|     |_| \___/    |_|   |_____|\___/  /_/    |_|  
                                                                                                                       
                                                                 ____                           _   _                 _ _            __ _       _     _                                                          
                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ / _(_)_ __ (_)___| |__      _ __ ___  ___ _ __   ___  _ __  ___  ___     _   
                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| |_| | '_ \| / __| '_ \    | '__/ _ \/ __| '_ \ / _ \| '_ \/ __|/ _ \  _| |_ 
                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _|  _| | | | | \__ \ | | |   | | |  __/\__ \ |_) | (_) | | | \__ \  __/ |_   _|
                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|_| |_|_|___/_| |_|___|_|  \___||___/ .__/ \___/|_| |_|___/\___|   |_|  
                                                                                                                                                          |_____|            |_|                                 
                                                                
                                                                + T0: 269: wsgiref.simple_server.ServerHandler.finish_response -> wsgiref.handlers.BaseHandler.finish_response => 
                                                                                 _____ ___            ____ _____ ___          
                                                                           _    |_   _/ _ \     _    |___ \___  / _ \     _   
                                                                         _| |_    | || | | |  _| |_    __) | / / | | |  _| |_ 
                                                                        |_   _|   | || |_| | |_   _|  / __/ / /| |_| | |_   _|
                                                                          |_|     |_| \___/    |_|   |_____/_/  \___/    |_|  
                                                                                                                              
                                                                         ____                           _   _                 _ _                               _ _       _          __ _ _              
                                                                        / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ _ __ ___  ___ _   _| | |_    (_)___     / _(_) | ___     _   
                                                                        \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| '__/ _ \/ __| | | | | __|   | / __|   | |_| | |/ _ \  _| |_ 
                                                                         ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _| | |  __/\__ \ |_| | | |_    | \__ \   |  _| | |  __/ |_   _|
                                                                        |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_|  \___||___/\__,_|_|\__|___|_|___/___|_| |_|_|\___|   |_|  
                                                                                                                                                                    |_____|   |_____|                    
                                                                        
                                                                        + T0: 270: wsgiref.simple_server.ServerHandler.result_is_file -> wsgiref.handlers.BaseHandler.result_is_file => 
                                                                        - T0: 270: wsgiref.simple_server.ServerHandler.result_is_file -> wsgiref.handlers.BaseHandler.result_is_file <= False
                                                                                 _____ ___            ____ _____ ___          
                                                                                |_   _/ _ \          |___ \___  / _ \         
                                                                         _____    | || | | |  _____    __) | / / | | |  _____ 
                                                                        |_____|   | || |_| | |_____|  / __/ / /| |_| | |_____|
                                                                                  |_| \___/          |_____/_/  \___/         
                                                                                                                              
                                                                         ____                           _   _                 _ _                               _ _       _          __ _ _              
                                                                        / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ _ __ ___  ___ _   _| | |_    (_)___     / _(_) | ___         
                                                                        \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| '__/ _ \/ __| | | | | __|   | / __|   | |_| | |/ _ \  _____ 
                                                                         ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _| | |  __/\__ \ |_| | | |_    | \__ \   |  _| | |  __/ |_____|
                                                                        |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_|  \___||___/\__,_|_|\__|___|_|___/___|_| |_|_|\___|        
                                                                                                                                                                    |_____|   |_____|                    
                                                                        
                                                                                 _____ ___            ____ _____ _           ____                           _   _                 _ _                         _ _       
                                                                           _    |_   _/ _ \     _    |___ \___  / |    _    / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ ____      ___ __(_) |_ ___ 
                                                                         _| |_    | || | | |  _| |_    __) | / /| |  _| |_  \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__\ \ /\ / / '__| | __/ _ \
                                                                        |_   _|   | || |_| | |_   _|  / __/ / / | | |_   _|  ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _ \ V  V /| |  | | ||  __/
                                                                          |_|     |_| \___/    |_|   |_____/_/  |_|   |_|   |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_) \_/\_/ |_|  |_|\__\___|
                                                                                                                                                                                                                        
                                                                               
                                                                           _   
                                                                         _| |_ 
                                                                        |_   _|
                                                                          |_|  
                                                                               
                                                                        
                                                                        + T0: 271: wsgiref.simple_server.ServerHandler.write -> wsgiref.handlers.BaseHandler.write => ( data=b'hello' )
                                                                                + T0: 272: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='bytes_sent', value=5 )
                                                                                - T0: 272: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                                         _____ ___            ____ _____ _____         
                                                                                   _    |_   _/ _ \     _    |___ \___  |___ /     _   
                                                                                 _| |_    | || | | |  _| |_    __) | / /  |_ \   _| |_ 
                                                                                |_   _|   | || |_| | |_   _|  / __/ / /  ___) | |_   _|
                                                                                  |_|     |_| \___/    |_|   |_____/_/  |____/    |_|  
                                                                                                                                       
                                                                                 ____                           _   _                 _ _                              _     _                    _                       
                                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___  ___ _ __   __| |   | |__   ___  __ _  __| | ___ _ __ ___     _   
                                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __|/ _ \ '_ \ / _` |   | '_ \ / _ \/ _` |/ _` |/ _ \ '__/ __|  _| |_ 
                                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _\__ \  __/ | | | (_| |   | | | |  __/ (_| | (_| |  __/ |  \__ \ |_   _|
                                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___/\___|_| |_|\__,_|___|_| |_|\___|\__,_|\__,_|\___|_|  |___/   |_|  
                                                                                                                                                                       |_____|                                            
                                                                                
                                                                                + T0: 273: wsgiref.simple_server.ServerHandler.send_headers -> wsgiref.handlers.BaseHandler.send_headers => 
                                                                                                 _____ ___            ____ _____ _  _           
                                                                                           _    |_   _/ _ \     _    |___ \___  | || |      _   
                                                                                         _| |_    | || | | |  _| |_    __) | / /| || |_   _| |_ 
                                                                                        |_   _|   | || |_| | |_   _|  / __/ / / |__   _| |_   _|
                                                                                          |_|     |_| \___/    |_|   |_____/_/     |_|     |_|  
                                                                                                                                                
                                                                                         ____                           _   _                 _ _               _                                 _                    _               
                                                                                        / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___| | ___  __ _ _ __  _   _ _ __    | |__   ___  __ _  __| | ___ _ __ ___ 
                                                                                        \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __| |/ _ \/ _` | '_ \| | | | '_ \   | '_ \ / _ \/ _` |/ _` |/ _ \ '__/ __|
                                                                                         ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | | (__| |  __/ (_| | | | | |_| | |_) |  | | | |  __/ (_| | (_| |  __/ |  \__ \
                                                                                        |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___|_|\___|\__,_|_| |_|\__,_| .__/___|_| |_|\___|\__,_|\__,_|\___|_|  |___/
                                                                                                                                                                                        |_| |_____|                                    
                                                                                               
                                                                                           _   
                                                                                         _| |_ 
                                                                                        |_   _|
                                                                                          |_|  
                                                                                               
                                                                                        
                                                                                        + T0: 274: wsgiref.simple_server.ServerHandler.cleanup_headers -> wsgiref.handlers.BaseHandler.cleanup_headers => 
                                                                                                         _____ ___            ____ _____ ____            _   _                _                           _           
                                                                                                   _    |_   _/ _ \     _    |___ \___  | ___|     _    | | | | ___  __ _  __| | ___ _ __ ___   __ _  ___| |_     _   
                                                                                                 _| |_    | || | | |  _| |_    __) | / /|___ \   _| |_  | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __| / _` |/ _ \ __|  _| |_ 
                                                                                                |_   _|   | || |_| | |_   _|  / __/ / /  ___) | |_   _| |  _  |  __/ (_| | (_| |  __/ |  \__ \| (_| |  __/ |_  |_   _|
                                                                                                  |_|     |_| \___/    |_|   |_____/_/  |____/    |_|   |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)__, |\___|\__|   |_|  
                                                                                                                                                                                               |___/                  
                                                                                                
                                                                                                + T0: 275: wsgiref.headers.Headers.get => ( name='Content-Length', default=None )
                                                                                                                 _____ ___            ____ _____ __           
                                                                                                           _    |_   _/ _ \     _    |___ \___  / /_      _   
                                                                                                         _| |_    | || | | |  _| |_    __) | / / '_ \   _| |_ 
                                                                                                        |_   _|   | || |_| | |_   _|  / __/ / /| (_) | |_   _|
                                                                                                          |_|     |_| \___/    |_|   |_____/_/  \___/    |_|  
                                                                                                                                                              
                                                                                                         _   _                _                                                  _           _        _                _                            
                                                                                                        | | | | ___  __ _  __| | ___ _ __ ___       ___ ___  _ ____   _____ _ __| |_     ___| |_ _ __(_)_ __   __ _   | |_ _   _ _ __   ___     _   
                                                                                                        | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __|     / __/ _ \| '_ \ \ / / _ \ '__| __|   / __| __| '__| | '_ \ / _` |  | __| | | | '_ \ / _ \  _| |_ 
                                                                                                        |  _  |  __/ (_| | (_| |  __/ |  \__ \_   | (_| (_) | | | \ V /  __/ |  | |_    \__ \ |_| |  | | | | | (_| |  | |_| |_| | |_) |  __/ |_   _|
                                                                                                        |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)___\___\___/|_| |_|\_/ \___|_|   \__|___|___/\__|_|  |_|_| |_|\__, |___\__|\__, | .__/ \___|   |_|  
                                                                                                                                              |_____|                              |_____|                    |___/_____|  |___/|_|                 
                                                                                                        
                                                                                                        + T0: 276: wsgiref.headers.Headers._convert_string_type => ( value='content-length' )
                                                                                                        - T0: 276: wsgiref.headers.Headers._convert_string_type <= 'content-length'
                                                                                                                 _____ ___            ____ _____ __           
                                                                                                                |_   _/ _ \          |___ \___  / /_          
                                                                                                         _____    | || | | |  _____    __) | / / '_ \   _____ 
                                                                                                        |_____|   | || |_| | |_____|  / __/ / /| (_) | |_____|
                                                                                                                  |_| \___/          |_____/_/  \___/         
                                                                                                                                                              
                                                                                                         _   _                _                                                  _           _        _                _                            
                                                                                                        | | | | ___  __ _  __| | ___ _ __ ___       ___ ___  _ ____   _____ _ __| |_     ___| |_ _ __(_)_ __   __ _   | |_ _   _ _ __   ___         
                                                                                                        | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __|     / __/ _ \| '_ \ \ / / _ \ '__| __|   / __| __| '__| | '_ \ / _` |  | __| | | | '_ \ / _ \  _____ 
                                                                                                        |  _  |  __/ (_| | (_| |  __/ |  \__ \_   | (_| (_) | | | \ V /  __/ |  | |_    \__ \ |_| |  | | | | | (_| |  | |_| |_| | |_) |  __/ |_____|
                                                                                                        |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)___\___\___/|_| |_|\_/ \___|_|   \__|___|___/\__|_|  |_|_| |_|\__, |___\__|\__, | .__/ \___|        
                                                                                                                                              |_____|                              |_____|                    |___/_____|  |___/|_|                 
                                                                                                        
                                                                                                - T0: 275: wsgiref.headers.Headers.get <= '5'
                                                                                                         _____ ___            ____ _____ ____            _   _                _                           _           
                                                                                                        |_   _/ _ \          |___ \___  | ___|          | | | | ___  __ _  __| | ___ _ __ ___   __ _  ___| |_         
                                                                                                 _____    | || | | |  _____    __) | / /|___ \   _____  | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __| / _` |/ _ \ __|  _____ 
                                                                                                |_____|   | || |_| | |_____|  / __/ / /  ___) | |_____| |  _  |  __/ (_| | (_| |  __/ |  \__ \| (_| |  __/ |_  |_____|
                                                                                                          |_| \___/          |_____/_/  |____/          |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)__, |\___|\__|        
                                                                                                                                                                                               |___/                  
                                                                                                
                                                                                        - T0: 274: wsgiref.simple_server.ServerHandler.cleanup_headers -> wsgiref.handlers.BaseHandler.cleanup_headers <= None
                                                                                                 _____ ___            ____ _____ _  _           
                                                                                                |_   _/ _ \          |___ \___  | || |          
                                                                                         _____    | || | | |  _____    __) | / /| || |_   _____ 
                                                                                        |_____|   | || |_| | |_____|  / __/ / / |__   _| |_____|
                                                                                                  |_| \___/          |_____/_/     |_|          
                                                                                                                                                
                                                                                         ____                           _   _                 _ _               _                                 _                    _               
                                                                                        / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___| | ___  __ _ _ __  _   _ _ __    | |__   ___  __ _  __| | ___ _ __ ___ 
                                                                                        \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __| |/ _ \/ _` | '_ \| | | | '_ \   | '_ \ / _ \/ _` |/ _` |/ _ \ '__/ __|
                                                                                         ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | | (__| |  __/ (_| | | | | |_| | |_) |  | | | |  __/ (_| | (_| |  __/ |  \__ \
                                                                                        |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___|_|\___|\__,_|_| |_|\__,_| .__/___|_| |_|\___|\__,_|\__,_|\___|_|  |___/
                                                                                                                                                                                        |_| |_____|                                    
                                                                                               
                                                                                               
                                                                                         _____ 
                                                                                        |_____|
                                                                                               
                                                                                               
                                                                                        
                                                                                        + T0: 277: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='headers_sent', value=True )
                                                                                        - T0: 277: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                                                 _____ ___            ____ _____ ___          
                                                                                           _    |_   _/ _ \     _    |___ \___  ( _ )     _   
                                                                                         _| |_    | || | | |  _| |_    __) | / // _ \   _| |_ 
                                                                                        |_   _|   | || |_| | |_   _|  / __/ / /| (_) | |_   _|
                                                                                          |_|     |_| \___/    |_|   |_____/_/  \___/    |_|  
                                                                                                                                              
                                                                                         ____                           _   _                 _ _               _ _            _       _                             _                 
                                                                                        / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___| (_) ___ _ __ | |_    (_)___     _ __ ___   ___   __| | ___ _ __ _ __  
                                                                                        \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __| | |/ _ \ '_ \| __|   | / __|   | '_ ` _ \ / _ \ / _` |/ _ \ '__| '_ \ 
                                                                                         ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | | (__| | |  __/ | | | |_    | \__ \   | | | | | | (_) | (_| |  __/ |  | | | |
                                                                                        |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___|_|_|\___|_| |_|\__|___|_|___/___|_| |_| |_|\___/ \__,_|\___|_|  |_| |_|
                                                                                                                                                                                 |_____|   |_____|                                     
                                                                                               
                                                                                           _   
                                                                                         _| |_ 
                                                                                        |_   _|
                                                                                          |_|  
                                                                                               
                                                                                        
                                                                                        + T0: 278: wsgiref.simple_server.ServerHandler.client_is_modern -> wsgiref.handlers.BaseHandler.client_is_modern => 
                                                                                        - T0: 278: wsgiref.simple_server.ServerHandler.client_is_modern -> wsgiref.handlers.BaseHandler.client_is_modern <= True
                                                                                                 _____ ___            ____ _____ ___          
                                                                                                |_   _/ _ \          |___ \___  ( _ )         
                                                                                         _____    | || | | |  _____    __) | / // _ \   _____ 
                                                                                        |_____|   | || |_| | |_____|  / __/ / /| (_) | |_____|
                                                                                                  |_| \___/          |_____/_/  \___/         
                                                                                                                                              
                                                                                         ____                           _   _                 _ _               _ _            _       _                             _                 
                                                                                        / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___| (_) ___ _ __ | |_    (_)___     _ __ ___   ___   __| | ___ _ __ _ __  
                                                                                        \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __| | |/ _ \ '_ \| __|   | / __|   | '_ ` _ \ / _ \ / _` |/ _ \ '__| '_ \ 
                                                                                         ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | | (__| | |  __/ | | | |_    | \__ \   | | | | | | (_) | (_| |  __/ |  | | | |
                                                                                        |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___|_|_|\___|_| |_|\__|___|_|___/___|_| |_| |_|\___/ \__,_|\___|_|  |_| |_|
                                                                                                                                                                                 |_____|   |_____|                                     
                                                                                               
                                                                                               
                                                                                         _____ 
                                                                                        |_____|
                                                                                               
                                                                                               
                                                                                        
                                                                                                 _____ ___            ____ _____ ___          
                                                                                           _    |_   _/ _ \     _    |___ \___  / _ \     _   
                                                                                         _| |_    | || | | |  _| |_    __) | / / (_) |  _| |_ 
                                                                                        |_   _|   | || |_| | |_   _|  / __/ / / \__, | |_   _|
                                                                                          |_|     |_| \___/    |_|   |_____/_/    /_/    |_|  
                                                                                                                                              
                                                                                         ____                           _   _                 _ _                              _                                     _     _              
                                                                                        / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___  ___ _ __   __| |     _ __  _ __ ___  __ _ _ __ ___ | |__ | | ___     _   
                                                                                        \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __|/ _ \ '_ \ / _` |    | '_ \| '__/ _ \/ _` | '_ ` _ \| '_ \| |/ _ \  _| |_ 
                                                                                         ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _\__ \  __/ | | | (_| |    | |_) | | |  __/ (_| | | | | | | |_) | |  __/ |_   _|
                                                                                        |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___/\___|_| |_|\__,_|____| .__/|_|  \___|\__,_|_| |_| |_|_.__/|_|\___|   |_|  
                                                                                                                                                                               |_____|_|                                                  
                                                                                        
                                                                                        + T0: 279: wsgiref.simple_server.ServerHandler.send_preamble -> wsgiref.handlers.BaseHandler.send_preamble => 
                                                                                                         _____ ___            ____  ___   ___          
                                                                                                   _    |_   _/ _ \     _    |___ \( _ ) / _ \     _   
                                                                                                 _| |_    | || | | |  _| |_    __) / _ \| | | |  _| |_ 
                                                                                                |_   _|   | || |_| | |_   _|  / __/ (_) | |_| | |_   _|
                                                                                                  |_|     |_| \___/    |_|   |_____\___/ \___/    |_|  
                                                                                                                                                       
                                                                                                 ____                           _   _                 _ _               _ _            _       _                             _                 
                                                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___| (_) ___ _ __ | |_    (_)___     _ __ ___   ___   __| | ___ _ __ _ __  
                                                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __| | |/ _ \ '_ \| __|   | / __|   | '_ ` _ \ / _ \ / _` |/ _ \ '__| '_ \ 
                                                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | | (__| | |  __/ | | | |_    | \__ \   | | | | | | (_) | (_| |  __/ |  | | | |
                                                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___|_|_|\___|_| |_|\__|___|_|___/___|_| |_| |_|\___/ \__,_|\___|_|  |_| |_|
                                                                                                                                                                                         |_____|   |_____|                                     
                                                                                                       
                                                                                                   _   
                                                                                                 _| |_ 
                                                                                                |_   _|
                                                                                                  |_|  
                                                                                                       
                                                                                                
                                                                                                + T0: 280: wsgiref.simple_server.ServerHandler.client_is_modern -> wsgiref.handlers.BaseHandler.client_is_modern => 
                                                                                                - T0: 280: wsgiref.simple_server.ServerHandler.client_is_modern -> wsgiref.handlers.BaseHandler.client_is_modern <= True
                                                                                                         _____ ___            ____  ___   ___          
                                                                                                        |_   _/ _ \          |___ \( _ ) / _ \         
                                                                                                 _____    | || | | |  _____    __) / _ \| | | |  _____ 
                                                                                                |_____|   | || |_| | |_____|  / __/ (_) | |_| | |_____|
                                                                                                          |_| \___/          |_____\___/ \___/         
                                                                                                                                                       
                                                                                                 ____                           _   _                 _ _               _ _            _       _                             _                 
                                                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___| (_) ___ _ __ | |_    (_)___     _ __ ___   ___   __| | ___ _ __ _ __  
                                                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __| | |/ _ \ '_ \| __|   | / __|   | '_ ` _ \ / _ \ / _` |/ _ \ '__| '_ \ 
                                                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | | (__| | |  __/ | | | |_    | \__ \   | | | | | | (_) | (_| |  __/ |  | | | |
                                                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___|_|_|\___|_| |_|\__|___|_|___/___|_| |_| |_|\___/ \__,_|\___|_|  |_| |_|
                                                                                                                                                                                         |_____|   |_____|                                     
                                                                                                       
                                                                                                       
                                                                                                 _____ 
                                                                                                |_____|
                                                                                                       
                                                                                                       
                                                                                                
                                                                                                         _____ ___            ____  ___  _           ____                           _   _                 _ _                           _ _       
                                                                                                   _    |_   _/ _ \     _    |___ \( _ )/ |    _    / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __  __      ___ __(_) |_ ___ 
                                                                                                 _| |_    | || | | |  _| |_    __) / _ \| |  _| |_  \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| \ \ /\ / / '__| | __/ _ \
                                                                                                |_   _|   | || |_| | |_   _|  / __/ (_) | | |_   _|  ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _   \ V  V /| |  | | ||  __/
                                                                                                  |_|     |_| \___/    |_|   |_____\___/|_|   |_|   |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___\_/\_/ |_|  |_|\__\___|
                                                                                                                                                                                                                      |_____|                     
                                                                                                       
                                                                                                   _   
                                                                                                 _| |_ 
                                                                                                |_   _|
                                                                                                  |_|  
                                                                                                       
                                                                                                
                                                                                                + T0: 281: wsgiref.simple_server.ServerHandler._write -> wsgiref.handlers.SimpleHandler._write => ( data=b'HTTP/1.0 200 OK\r\n' )
                                                                                                                 _____ ___            ____  ___ ____            ____             _        _   ___ ___                _ _               
                                                                                                           _    |_   _/ _ \     _    |___ \( _ )___ \     _    / ___|  ___   ___| | _____| |_|_ _/ _ \__      ___ __(_) |_ ___     _   
                                                                                                         _| |_    | || | | |  _| |_    __) / _ \ __) |  _| |_  \___ \ / _ \ / __| |/ / _ \ __|| | | | \ \ /\ / / '__| | __/ _ \  _| |_ 
                                                                                                        |_   _|   | || |_| | |_   _|  / __/ (_) / __/  |_   _|  ___) | (_) | (__|   <  __/ |_ | | |_| |\ V  V /| |  | | ||  __/ |_   _|
                                                                                                          |_|     |_| \___/    |_|   |_____\___/_____|   |_|   |____/ \___/ \___|_|\_\___|\__|___\___(_)\_/\_/ |_|  |_|\__\___|   |_|  
                                                                                                                                                                                                                                       
                                                                                                        
                                                                                                        + T0: 282: socket.SocketIO.write => ( b=b'HTTP/1.0 200 OK\r\n' )
                                                                                                                + T0: 283: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x00000151E8E8D208> )
                                                                                                                - T0: 283: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                                                                                + T0: 284: socket.SocketIO._checkWritable -> _io._IOBase._checkWritable => ( <socket.SocketIO object at 0x00000151E8E8D208> )
                                                                                                                        + T0: 285: socket.SocketIO.writable => 
                                                                                                                        - T0: 285: socket.SocketIO.writable <= True
                                                                                                                - T0: 284: socket.SocketIO._checkWritable -> _io._IOBase._checkWritable <= True
                                                                                                                         _____ ___            ____  ___   __                            _        _                        _         
                                                                                                                   _    |_   _/ _ \     _    |___ \( _ ) / /_      _     ___  ___   ___| | _____| |_   ___  ___ _ __   __| |    _   
                                                                                                                 _| |_    | || | | |  _| |_    __) / _ \| '_ \   _| |_  / __|/ _ \ / __| |/ / _ \ __| / __|/ _ \ '_ \ / _` |  _| |_ 
                                                                                                                |_   _|   | || |_| | |_   _|  / __/ (_) | (_) | |_   _| \__ \ (_) | (__|   <  __/ |_ _\__ \  __/ | | | (_| | |_   _|
                                                                                                                  |_|     |_| \___/    |_|   |_____\___/ \___/    |_|   |___/\___/ \___|_|\_\___|\__(_)___/\___|_| |_|\__,_|   |_|  
                                                                                                                                                                                                                                    
                                                                                                                
                                                                                                                + T0: 286: socket.socket.send -> _socket.socket.send => ( <socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)>, b'HTTP/1.0 200 OK\r\n' )
                                                                                                                - T0: 286: socket.socket.send -> _socket.socket.send <= 17
                                                                                                                         _____ ___            ____  ___   __                            _        _                        _         
                                                                                                                        |_   _/ _ \          |___ \( _ ) / /_            ___  ___   ___| | _____| |_   ___  ___ _ __   __| |        
                                                                                                                 _____    | || | | |  _____    __) / _ \| '_ \   _____  / __|/ _ \ / __| |/ / _ \ __| / __|/ _ \ '_ \ / _` |  _____ 
                                                                                                                |_____|   | || |_| | |_____|  / __/ (_) | (_) | |_____| \__ \ (_) | (__|   <  __/ |_ _\__ \  __/ | | | (_| | |_____|
                                                                                                                          |_| \___/          |_____\___/ \___/          |___/\___/ \___|_|\_\___|\__(_)___/\___|_| |_|\__,_|        
                                                                                                                                                                                                                                    
                                                                                                                
                                                                                                        - T0: 282: socket.SocketIO.write <= 17
                                                                                                                 _____ ___            ____  ___ ____            ____             _        _   ___ ___                _ _               
                                                                                                                |_   _/ _ \          |___ \( _ )___ \          / ___|  ___   ___| | _____| |_|_ _/ _ \__      ___ __(_) |_ ___         
                                                                                                         _____    | || | | |  _____    __) / _ \ __) |  _____  \___ \ / _ \ / __| |/ / _ \ __|| | | | \ \ /\ / / '__| | __/ _ \  _____ 
                                                                                                        |_____|   | || |_| | |_____|  / __/ (_) / __/  |_____|  ___) | (_) | (__|   <  __/ |_ | | |_| |\ V  V /| |  | | ||  __/ |_____|
                                                                                                                  |_| \___/          |_____\___/_____|         |____/ \___/ \___|_|\_\___|\__|___\___(_)\_/\_/ |_|  |_|\__\___|        
                                                                                                                                                                                                                                       
                                                                                                        
                                                                                                - T0: 281: wsgiref.simple_server.ServerHandler._write -> wsgiref.handlers.SimpleHandler._write <= None
                                                                                                         _____ ___            ____  ___  _           ____                           _   _                 _ _                           _ _       
                                                                                                        |_   _/ _ \          |___ \( _ )/ |         / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __  __      ___ __(_) |_ ___ 
                                                                                                 _____    | || | | |  _____    __) / _ \| |  _____  \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| \ \ /\ / / '__| | __/ _ \
                                                                                                |_____|   | || |_| | |_____|  / __/ (_) | | |_____|  ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _   \ V  V /| |  | | ||  __/
                                                                                                          |_| \___/          |_____\___/|_|         |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___\_/\_/ |_|  |_|\__\___|
                                                                                                                                                                                                                      |_____|                     
                                                                                                       
                                                                                                       
                                                                                                 _____ 
                                                                                                |_____|
                                                                                                       
                                                                                                       
                                                                                                
                                                                                                         _____ ___            ____  ___ _____           _   _                _                           _           
                                                                                                   _    |_   _/ _ \     _    |___ \( _ )___  |    _    | | | | ___  __ _  __| | ___ _ __ ___   __ _  ___| |_     _   
                                                                                                 _| |_    | || | | |  _| |_    __) / _ \  / /   _| |_  | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __| / _` |/ _ \ __|  _| |_ 
                                                                                                |_   _|   | || |_| | |_   _|  / __/ (_) |/ /   |_   _| |  _  |  __/ (_| | (_| |  __/ |  \__ \| (_| |  __/ |_  |_   _|
                                                                                                  |_|     |_| \___/    |_|   |_____\___//_/      |_|   |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)__, |\___|\__|   |_|  
                                                                                                                                                                                              |___/                  
                                                                                                
                                                                                                + T0: 287: wsgiref.headers.Headers.get => ( name='Date', default=None )
                                                                                                                 _____ ___            ____  ___   ___          
                                                                                                           _    |_   _/ _ \     _    |___ \( _ ) ( _ )     _   
                                                                                                         _| |_    | || | | |  _| |_    __) / _ \ / _ \   _| |_ 
                                                                                                        |_   _|   | || |_| | |_   _|  / __/ (_) | (_) | |_   _|
                                                                                                          |_|     |_| \___/    |_|   |_____\___/ \___/    |_|  
                                                                                                                                                               
                                                                                                         _   _                _                                                  _           _        _                _                            
                                                                                                        | | | | ___  __ _  __| | ___ _ __ ___       ___ ___  _ ____   _____ _ __| |_     ___| |_ _ __(_)_ __   __ _   | |_ _   _ _ __   ___     _   
                                                                                                        | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __|     / __/ _ \| '_ \ \ / / _ \ '__| __|   / __| __| '__| | '_ \ / _` |  | __| | | | '_ \ / _ \  _| |_ 
                                                                                                        |  _  |  __/ (_| | (_| |  __/ |  \__ \_   | (_| (_) | | | \ V /  __/ |  | |_    \__ \ |_| |  | | | | | (_| |  | |_| |_| | |_) |  __/ |_   _|
                                                                                                        |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)___\___\___/|_| |_|\_/ \___|_|   \__|___|___/\__|_|  |_|_| |_|\__, |___\__|\__, | .__/ \___|   |_|  
                                                                                                                                              |_____|                              |_____|                    |___/_____|  |___/|_|                 
                                                                                                        
                                                                                                        + T0: 288: wsgiref.headers.Headers._convert_string_type => ( value='date' )
                                                                                                        - T0: 288: wsgiref.headers.Headers._convert_string_type <= 'date'
                                                                                                                 _____ ___            ____  ___   ___          
                                                                                                                |_   _/ _ \          |___ \( _ ) ( _ )         
                                                                                                         _____    | || | | |  _____    __) / _ \ / _ \   _____ 
                                                                                                        |_____|   | || |_| | |_____|  / __/ (_) | (_) | |_____|
                                                                                                                  |_| \___/          |_____\___/ \___/         
                                                                                                                                                               
                                                                                                         _   _                _                                                  _           _        _                _                            
                                                                                                        | | | | ___  __ _  __| | ___ _ __ ___       ___ ___  _ ____   _____ _ __| |_     ___| |_ _ __(_)_ __   __ _   | |_ _   _ _ __   ___         
                                                                                                        | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __|     / __/ _ \| '_ \ \ / / _ \ '__| __|   / __| __| '__| | '_ \ / _` |  | __| | | | '_ \ / _ \  _____ 
                                                                                                        |  _  |  __/ (_| | (_| |  __/ |  \__ \_   | (_| (_) | | | \ V /  __/ |  | |_    \__ \ |_| |  | | | | | (_| |  | |_| |_| | |_) |  __/ |_____|
                                                                                                        |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)___\___\___/|_| |_|\_/ \___|_|   \__|___|___/\__|_|  |_|_| |_|\__, |___\__|\__, | .__/ \___|        
                                                                                                                                              |_____|                              |_____|                    |___/_____|  |___/|_|                 
                                                                                                        
                                                                                                - T0: 287: wsgiref.headers.Headers.get <= None
                                                                                                         _____ ___            ____  ___ _____           _   _                _                           _           
                                                                                                        |_   _/ _ \          |___ \( _ )___  |         | | | | ___  __ _  __| | ___ _ __ ___   __ _  ___| |_         
                                                                                                 _____    | || | | |  _____    __) / _ \  / /   _____  | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __| / _` |/ _ \ __|  _____ 
                                                                                                |_____|   | || |_| | |_____|  / __/ (_) |/ /   |_____| |  _  |  __/ (_| | (_| |  __/ |  \__ \| (_| |  __/ |_  |_____|
                                                                                                          |_| \___/          |_____\___//_/            |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)__, |\___|\__|        
                                                                                                                                                                                              |___/                  
                                                                                                
                                                                                                         _____ ___            ____  ___  ___             __                            _          _       _          _   _                        
                                                                                                   _    |_   _/ _ \     _    |___ \( _ )/ _ \     _     / _| ___  _ __ _ __ ___   __ _| |_     __| | __ _| |_ ___   | |_(_)_ __ ___   ___     _   
                                                                                                 _| |_    | || | | |  _| |_    __) / _ \ (_) |  _| |_  | |_ / _ \| '__| '_ ` _ \ / _` | __|   / _` |/ _` | __/ _ \  | __| | '_ ` _ \ / _ \  _| |_ 
                                                                                                |_   _|   | || |_| | |_   _|  / __/ (_) \__, | |_   _| |  _| (_) | |  | | | | | | (_| | |_   | (_| | (_| | ||  __/  | |_| | | | | | |  __/ |_   _|
                                                                                                  |_|     |_| \___/    |_|   |_____\___/  /_/    |_|   |_|  \___/|_|  |_| |_| |_|\__,_|\__|___\__,_|\__,_|\__\___|___\__|_|_| |_| |_|\___|   |_|  
                                                                                                                                                                                         |_____|                |_____|                           
                                                                                                
                                                                                                + T0: 289: wsgiref.handlers.format_date_time => ( timestamp=1478859431.907995 )
                                                                                                - T0: 289: wsgiref.handlers.format_date_time <= 'Fri, 11 Nov 2016 10:17:11 GMT'
                                                                                                         _____ ___            ____  ___  ___             __                            _          _       _          _   _                        
                                                                                                        |_   _/ _ \          |___ \( _ )/ _ \           / _| ___  _ __ _ __ ___   __ _| |_     __| | __ _| |_ ___   | |_(_)_ __ ___   ___         
                                                                                                 _____    | || | | |  _____    __) / _ \ (_) |  _____  | |_ / _ \| '__| '_ ` _ \ / _` | __|   / _` |/ _` | __/ _ \  | __| | '_ ` _ \ / _ \  _____ 
                                                                                                |_____|   | || |_| | |_____|  / __/ (_) \__, | |_____| |  _| (_) | |  | | | | | | (_| | |_   | (_| | (_| | ||  __/  | |_| | | | | | |  __/ |_____|
                                                                                                          |_| \___/          |_____\___/  /_/          |_|  \___/|_|  |_| |_| |_|\__,_|\__|___\__,_|\__,_|\__\___|___\__|_|_| |_| |_|\___|        
                                                                                                                                                                                         |_____|                |_____|                           
                                                                                                
                                                                                                         _____ ___            ____   ___   ___          
                                                                                                   _    |_   _/ _ \     _    |___ \ / _ \ / _ \     _   
                                                                                                 _| |_    | || | | |  _| |_    __) | (_) | | | |  _| |_ 
                                                                                                |_   _|   | || |_| | |_   _|  / __/ \__, | |_| | |_   _|
                                                                                                  |_|     |_| \___/    |_|   |_____|  /_/ \___/    |_|  
                                                                                                                                                        
                                                                                                 ____                           _   _                 _ _                           _ _               
                                                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __  __      ___ __(_) |_ ___     _   
                                                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| \ \ /\ / / '__| | __/ _ \  _| |_ 
                                                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _   \ V  V /| |  | | ||  __/ |_   _|
                                                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___\_/\_/ |_|  |_|\__\___|   |_|  
                                                                                                                                                                  |_____|                             
                                                                                                
                                                                                                + T0: 290: wsgiref.simple_server.ServerHandler._write -> wsgiref.handlers.SimpleHandler._write => ( data=b'Date: Fri, 11 Nov 2016 10:17:11 GMT\r\n' )
                                                                                                                 _____ ___            ____   ___  _           ____             _        _   ___ ___                _ _               
                                                                                                           _    |_   _/ _ \     _    |___ \ / _ \/ |    _    / ___|  ___   ___| | _____| |_|_ _/ _ \__      ___ __(_) |_ ___     _   
                                                                                                         _| |_    | || | | |  _| |_    __) | (_) | |  _| |_  \___ \ / _ \ / __| |/ / _ \ __|| | | | \ \ /\ / / '__| | __/ _ \  _| |_ 
                                                                                                        |_   _|   | || |_| | |_   _|  / __/ \__, | | |_   _|  ___) | (_) | (__|   <  __/ |_ | | |_| |\ V  V /| |  | | ||  __/ |_   _|
                                                                                                          |_|     |_| \___/    |_|   |_____|  /_/|_|   |_|   |____/ \___/ \___|_|\_\___|\__|___\___(_)\_/\_/ |_|  |_|\__\___|   |_|  
                                                                                                                                                                                                                                     
                                                                                                        
                                                                                                        + T0: 291: socket.SocketIO.write => ( b=b'Date: Fri, 11 Nov 2016 10:17:11 GMT\r\n' )
                                                                                                                + T0: 292: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x00000151E8E8D208> )
                                                                                                                - T0: 292: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                                                                                + T0: 293: socket.SocketIO._checkWritable -> _io._IOBase._checkWritable => ( <socket.SocketIO object at 0x00000151E8E8D208> )
                                                                                                                        + T0: 294: socket.SocketIO.writable => 
                                                                                                                        - T0: 294: socket.SocketIO.writable <= True
                                                                                                                - T0: 293: socket.SocketIO._checkWritable -> _io._IOBase._checkWritable <= True
                                                                                                                         _____ ___            ____   ___  ____                           _        _                        _         
                                                                                                                   _    |_   _/ _ \     _    |___ \ / _ \| ___|     _     ___  ___   ___| | _____| |_   ___  ___ _ __   __| |    _   
                                                                                                                 _| |_    | || | | |  _| |_    __) | (_) |___ \   _| |_  / __|/ _ \ / __| |/ / _ \ __| / __|/ _ \ '_ \ / _` |  _| |_ 
                                                                                                                |_   _|   | || |_| | |_   _|  / __/ \__, |___) | |_   _| \__ \ (_) | (__|   <  __/ |_ _\__ \  __/ | | | (_| | |_   _|
                                                                                                                  |_|     |_| \___/    |_|   |_____|  /_/|____/    |_|   |___/\___/ \___|_|\_\___|\__(_)___/\___|_| |_|\__,_|   |_|  
                                                                                                                                                                                                                                     
                                                                                                                
                                                                                                                + T0: 295: socket.socket.send -> _socket.socket.send => ( <socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)>, b'Date: Fri, 11 Nov 2016 10:17:11 GMT\r\n' )
                                                                                                                - T0: 295: socket.socket.send -> _socket.socket.send <= 37
                                                                                                                         _____ ___            ____   ___  ____                           _        _                        _         
                                                                                                                        |_   _/ _ \          |___ \ / _ \| ___|           ___  ___   ___| | _____| |_   ___  ___ _ __   __| |        
                                                                                                                 _____    | || | | |  _____    __) | (_) |___ \   _____  / __|/ _ \ / __| |/ / _ \ __| / __|/ _ \ '_ \ / _` |  _____ 
                                                                                                                |_____|   | || |_| | |_____|  / __/ \__, |___) | |_____| \__ \ (_) | (__|   <  __/ |_ _\__ \  __/ | | | (_| | |_____|
                                                                                                                          |_| \___/          |_____|  /_/|____/          |___/\___/ \___|_|\_\___|\__(_)___/\___|_| |_|\__,_|        
                                                                                                                                                                                                                                     
                                                                                                                
                                                                                                        - T0: 291: socket.SocketIO.write <= 37
                                                                                                                 _____ ___            ____   ___  _           ____             _        _   ___ ___                _ _               
                                                                                                                |_   _/ _ \          |___ \ / _ \/ |         / ___|  ___   ___| | _____| |_|_ _/ _ \__      ___ __(_) |_ ___         
                                                                                                         _____    | || | | |  _____    __) | (_) | |  _____  \___ \ / _ \ / __| |/ / _ \ __|| | | | \ \ /\ / / '__| | __/ _ \  _____ 
                                                                                                        |_____|   | || |_| | |_____|  / __/ \__, | | |_____|  ___) | (_) | (__|   <  __/ |_ | | |_| |\ V  V /| |  | | ||  __/ |_____|
                                                                                                                  |_| \___/          |_____|  /_/|_|         |____/ \___/ \___|_|\_\___|\__|___\___(_)\_/\_/ |_|  |_|\__\___|        
                                                                                                                                                                                                                                     
                                                                                                        
                                                                                                - T0: 290: wsgiref.simple_server.ServerHandler._write -> wsgiref.handlers.SimpleHandler._write <= None
                                                                                                         _____ ___            ____   ___   ___          
                                                                                                        |_   _/ _ \          |___ \ / _ \ / _ \         
                                                                                                 _____    | || | | |  _____    __) | (_) | | | |  _____ 
                                                                                                |_____|   | || |_| | |_____|  / __/ \__, | |_| | |_____|
                                                                                                          |_| \___/          |_____|  /_/ \___/         
                                                                                                                                                        
                                                                                                 ____                           _   _                 _ _                           _ _               
                                                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __  __      ___ __(_) |_ ___         
                                                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| \ \ /\ / / '__| | __/ _ \  _____ 
                                                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _   \ V  V /| |  | | ||  __/ |_____|
                                                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___\_/\_/ |_|  |_|\__\___|        
                                                                                                                                                                  |_____|                             
                                                                                                
                                                                                                         _____ ___            ____   ___   __             _   _                _                           _           
                                                                                                   _    |_   _/ _ \     _    |___ \ / _ \ / /_      _    | | | | ___  __ _  __| | ___ _ __ ___   __ _  ___| |_     _   
                                                                                                 _| |_    | || | | |  _| |_    __) | (_) | '_ \   _| |_  | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __| / _` |/ _ \ __|  _| |_ 
                                                                                                |_   _|   | || |_| | |_   _|  / __/ \__, | (_) | |_   _| |  _  |  __/ (_| | (_| |  __/ |  \__ \| (_| |  __/ |_  |_   _|
                                                                                                  |_|     |_| \___/    |_|   |_____|  /_/ \___/    |_|   |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)__, |\___|\__|   |_|  
                                                                                                                                                                                                |___/                  
                                                                                                
                                                                                                + T0: 296: wsgiref.headers.Headers.get => ( name='Server', default=None )
                                                                                                                 _____ ___            ____   ___ _____         
                                                                                                           _    |_   _/ _ \     _    |___ \ / _ \___  |    _   
                                                                                                         _| |_    | || | | |  _| |_    __) | (_) | / /   _| |_ 
                                                                                                        |_   _|   | || |_| | |_   _|  / __/ \__, |/ /   |_   _|
                                                                                                          |_|     |_| \___/    |_|   |_____|  /_//_/      |_|  
                                                                                                                                                               
                                                                                                         _   _                _                                                  _           _        _                _                            
                                                                                                        | | | | ___  __ _  __| | ___ _ __ ___       ___ ___  _ ____   _____ _ __| |_     ___| |_ _ __(_)_ __   __ _   | |_ _   _ _ __   ___     _   
                                                                                                        | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __|     / __/ _ \| '_ \ \ / / _ \ '__| __|   / __| __| '__| | '_ \ / _` |  | __| | | | '_ \ / _ \  _| |_ 
                                                                                                        |  _  |  __/ (_| | (_| |  __/ |  \__ \_   | (_| (_) | | | \ V /  __/ |  | |_    \__ \ |_| |  | | | | | (_| |  | |_| |_| | |_) |  __/ |_   _|
                                                                                                        |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)___\___\___/|_| |_|\_/ \___|_|   \__|___|___/\__|_|  |_|_| |_|\__, |___\__|\__, | .__/ \___|   |_|  
                                                                                                                                              |_____|                              |_____|                    |___/_____|  |___/|_|                 
                                                                                                        
                                                                                                        + T0: 297: wsgiref.headers.Headers._convert_string_type => ( value='server' )
                                                                                                        - T0: 297: wsgiref.headers.Headers._convert_string_type <= 'server'
                                                                                                                 _____ ___            ____   ___ _____         
                                                                                                                |_   _/ _ \          |___ \ / _ \___  |        
                                                                                                         _____    | || | | |  _____    __) | (_) | / /   _____ 
                                                                                                        |_____|   | || |_| | |_____|  / __/ \__, |/ /   |_____|
                                                                                                                  |_| \___/          |_____|  /_//_/           
                                                                                                                                                               
                                                                                                         _   _                _                                                  _           _        _                _                            
                                                                                                        | | | | ___  __ _  __| | ___ _ __ ___       ___ ___  _ ____   _____ _ __| |_     ___| |_ _ __(_)_ __   __ _   | |_ _   _ _ __   ___         
                                                                                                        | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __|     / __/ _ \| '_ \ \ / / _ \ '__| __|   / __| __| '__| | '_ \ / _` |  | __| | | | '_ \ / _ \  _____ 
                                                                                                        |  _  |  __/ (_| | (_| |  __/ |  \__ \_   | (_| (_) | | | \ V /  __/ |  | |_    \__ \ |_| |  | | | | | (_| |  | |_| |_| | |_) |  __/ |_____|
                                                                                                        |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)___\___\___/|_| |_|\_/ \___|_|   \__|___|___/\__|_|  |_|_| |_|\__, |___\__|\__, | .__/ \___|        
                                                                                                                                              |_____|                              |_____|                    |___/_____|  |___/|_|                 
                                                                                                        
                                                                                                - T0: 296: wsgiref.headers.Headers.get <= None
                                                                                                         _____ ___            ____   ___   __             _   _                _                           _           
                                                                                                        |_   _/ _ \          |___ \ / _ \ / /_           | | | | ___  __ _  __| | ___ _ __ ___   __ _  ___| |_         
                                                                                                 _____    | || | | |  _____    __) | (_) | '_ \   _____  | |_| |/ _ \/ _` |/ _` |/ _ \ '__/ __| / _` |/ _ \ __|  _____ 
                                                                                                |_____|   | || |_| | |_____|  / __/ \__, | (_) | |_____| |  _  |  __/ (_| | (_| |  __/ |  \__ \| (_| |  __/ |_  |_____|
                                                                                                          |_| \___/          |_____|  /_/ \___/          |_| |_|\___|\__,_|\__,_|\___|_|  |___(_)__, |\___|\__|        
                                                                                                                                                                                                |___/                  
                                                                                                
                                                                                                         _____ ___            ____   ___   ___          
                                                                                                   _    |_   _/ _ \     _    |___ \ / _ \ ( _ )     _   
                                                                                                 _| |_    | || | | |  _| |_    __) | (_) |/ _ \   _| |_ 
                                                                                                |_   _|   | || |_| | |_   _|  / __/ \__, | (_) | |_   _|
                                                                                                  |_|     |_| \___/    |_|   |_____|  /_/ \___/    |_|  
                                                                                                                                                        
                                                                                                 ____                           _   _                 _ _                           _ _               
                                                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __  __      ___ __(_) |_ ___     _   
                                                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| \ \ /\ / / '__| | __/ _ \  _| |_ 
                                                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _   \ V  V /| |  | | ||  __/ |_   _|
                                                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___\_/\_/ |_|  |_|\__\___|   |_|  
                                                                                                                                                                  |_____|                             
                                                                                                
                                                                                                + T0: 298: wsgiref.simple_server.ServerHandler._write -> wsgiref.handlers.SimpleHandler._write => ( data=b'Server: WSGIServer/0.2 CPython/3.5.1\r\n' )
                                                                                                                 _____ ___            ____   ___   ___            ____             _        _   ___ ___                _ _               
                                                                                                           _    |_   _/ _ \     _    |___ \ / _ \ / _ \     _    / ___|  ___   ___| | _____| |_|_ _/ _ \__      ___ __(_) |_ ___     _   
                                                                                                         _| |_    | || | | |  _| |_    __) | (_) | (_) |  _| |_  \___ \ / _ \ / __| |/ / _ \ __|| | | | \ \ /\ / / '__| | __/ _ \  _| |_ 
                                                                                                        |_   _|   | || |_| | |_   _|  / __/ \__, |\__, | |_   _|  ___) | (_) | (__|   <  __/ |_ | | |_| |\ V  V /| |  | | ||  __/ |_   _|
                                                                                                          |_|     |_| \___/    |_|   |_____|  /_/   /_/    |_|   |____/ \___/ \___|_|\_\___|\__|___\___(_)\_/\_/ |_|  |_|\__\___|   |_|  
                                                                                                                                                                                                                                         
                                                                                                        
                                                                                                        + T0: 299: socket.SocketIO.write => ( b=b'Server: WSGIServer/0.2 CPython/3.5.1\r\n' )
                                                                                                                + T0: 300: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x00000151E8E8D208> )
                                                                                                                - T0: 300: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                                                                                + T0: 301: socket.SocketIO._checkWritable -> _io._IOBase._checkWritable => ( <socket.SocketIO object at 0x00000151E8E8D208> )
                                                                                                                        + T0: 302: socket.SocketIO.writable => 
                                                                                                                        - T0: 302: socket.SocketIO.writable <= True
                                                                                                                - T0: 301: socket.SocketIO._checkWritable -> _io._IOBase._checkWritable <= True
                                                                                                                         _____ ___            _____  ___ _____                          _        _                        _         
                                                                                                                   _    |_   _/ _ \     _    |___ / / _ \___ /     _     ___  ___   ___| | _____| |_   ___  ___ _ __   __| |    _   
                                                                                                                 _| |_    | || | | |  _| |_    |_ \| | | ||_ \   _| |_  / __|/ _ \ / __| |/ / _ \ __| / __|/ _ \ '_ \ / _` |  _| |_ 
                                                                                                                |_   _|   | || |_| | |_   _|  ___) | |_| |__) | |_   _| \__ \ (_) | (__|   <  __/ |_ _\__ \  __/ | | | (_| | |_   _|
                                                                                                                  |_|     |_| \___/    |_|   |____/ \___/____/    |_|   |___/\___/ \___|_|\_\___|\__(_)___/\___|_| |_|\__,_|   |_|  
                                                                                                                                                                                                                                    
                                                                                                                
                                                                                                                + T0: 303: socket.socket.send -> _socket.socket.send => ( <socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)>, b'Server: WSGIServer/0.2 CPython/3.5.1\r\n' )
                                                                                                                - T0: 303: socket.socket.send -> _socket.socket.send <= 38
                                                                                                                         _____ ___            _____  ___ _____                          _        _                        _         
                                                                                                                        |_   _/ _ \          |___ / / _ \___ /           ___  ___   ___| | _____| |_   ___  ___ _ __   __| |        
                                                                                                                 _____    | || | | |  _____    |_ \| | | ||_ \   _____  / __|/ _ \ / __| |/ / _ \ __| / __|/ _ \ '_ \ / _` |  _____ 
                                                                                                                |_____|   | || |_| | |_____|  ___) | |_| |__) | |_____| \__ \ (_) | (__|   <  __/ |_ _\__ \  __/ | | | (_| | |_____|
                                                                                                                          |_| \___/          |____/ \___/____/          |___/\___/ \___|_|\_\___|\__(_)___/\___|_| |_|\__,_|        
                                                                                                                                                                                                                                    
                                                                                                                
                                                                                                        - T0: 299: socket.SocketIO.write <= 38
                                                                                                                 _____ ___            ____   ___   ___            ____             _        _   ___ ___                _ _               
                                                                                                                |_   _/ _ \          |___ \ / _ \ / _ \          / ___|  ___   ___| | _____| |_|_ _/ _ \__      ___ __(_) |_ ___         
                                                                                                         _____    | || | | |  _____    __) | (_) | (_) |  _____  \___ \ / _ \ / __| |/ / _ \ __|| | | | \ \ /\ / / '__| | __/ _ \  _____ 
                                                                                                        |_____|   | || |_| | |_____|  / __/ \__, |\__, | |_____|  ___) | (_) | (__|   <  __/ |_ | | |_| |\ V  V /| |  | | ||  __/ |_____|
                                                                                                                  |_| \___/          |_____|  /_/   /_/          |____/ \___/ \___|_|\_\___|\__|___\___(_)\_/\_/ |_|  |_|\__\___|        
                                                                                                                                                                                                                                         
                                                                                                        
                                                                                                - T0: 298: wsgiref.simple_server.ServerHandler._write -> wsgiref.handlers.SimpleHandler._write <= None
                                                                                                         _____ ___            ____   ___   ___          
                                                                                                        |_   _/ _ \          |___ \ / _ \ ( _ )         
                                                                                                 _____    | || | | |  _____    __) | (_) |/ _ \   _____ 
                                                                                                |_____|   | || |_| | |_____|  / __/ \__, | (_) | |_____|
                                                                                                          |_| \___/          |_____|  /_/ \___/         
                                                                                                                                                        
                                                                                                 ____                           _   _                 _ _                           _ _               
                                                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __  __      ___ __(_) |_ ___         
                                                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| \ \ /\ / / '__| | __/ _ \  _____ 
                                                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _   \ V  V /| |  | | ||  __/ |_____|
                                                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___\_/\_/ |_|  |_|\__\___|        
                                                                                                                                                                  |_____|                             
                                                                                                
                                                                                        - T0: 279: wsgiref.simple_server.ServerHandler.send_preamble -> wsgiref.handlers.BaseHandler.send_preamble <= None
                                                                                                 _____ ___            ____ _____ ___          
                                                                                                |_   _/ _ \          |___ \___  / _ \         
                                                                                         _____    | || | | |  _____    __) | / / (_) |  _____ 
                                                                                        |_____|   | || |_| | |_____|  / __/ / / \__, | |_____|
                                                                                                  |_| \___/          |_____/_/    /_/         
                                                                                                                                              
                                                                                         ____                           _   _                 _ _                              _                                     _     _              
                                                                                        / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___  ___ _ __   __| |     _ __  _ __ ___  __ _ _ __ ___ | |__ | | ___         
                                                                                        \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __|/ _ \ '_ \ / _` |    | '_ \| '__/ _ \/ _` | '_ ` _ \| '_ \| |/ _ \  _____ 
                                                                                         ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _\__ \  __/ | | | (_| |    | |_) | | |  __/ (_| | | | | | | |_) | |  __/ |_____|
                                                                                        |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___/\___|_| |_|\__,_|____| .__/|_|  \___|\__,_|_| |_| |_|_.__/|_|\___|        
                                                                                                                                                                               |_____|_|                                                  
                                                                                        
                                                                                                 _____ ___            _____  ___  _  _           
                                                                                           _    |_   _/ _ \     _    |___ / / _ \| || |      _   
                                                                                         _| |_    | || | | |  _| |_    |_ \| | | | || |_   _| |_ 
                                                                                        |_   _|   | || |_| | |_   _|  ___) | |_| |__   _| |_   _|
                                                                                          |_|     |_| \___/    |_|   |____/ \___/   |_|     |_|  
                                                                                                                                                 
                                                                                         ____                           _   _                 _ _                           _ _               
                                                                                        / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __  __      ___ __(_) |_ ___     _   
                                                                                        \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| \ \ /\ / / '__| | __/ _ \  _| |_ 
                                                                                         ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _   \ V  V /| |  | | ||  __/ |_   _|
                                                                                        |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___\_/\_/ |_|  |_|\__\___|   |_|  
                                                                                                                                                          |_____|                             
                                                                                        
                                                                                        + T0: 304: wsgiref.simple_server.ServerHandler._write -> wsgiref.handlers.SimpleHandler._write => ( data=b'Content-Length: 5\r\n\r\n' )
                                                                                                         _____ ___            _____  ___  ____            ____             _        _   ___ ___                _ _               
                                                                                                   _    |_   _/ _ \     _    |___ / / _ \| ___|     _    / ___|  ___   ___| | _____| |_|_ _/ _ \__      ___ __(_) |_ ___     _   
                                                                                                 _| |_    | || | | |  _| |_    |_ \| | | |___ \   _| |_  \___ \ / _ \ / __| |/ / _ \ __|| | | | \ \ /\ / / '__| | __/ _ \  _| |_ 
                                                                                                |_   _|   | || |_| | |_   _|  ___) | |_| |___) | |_   _|  ___) | (_) | (__|   <  __/ |_ | | |_| |\ V  V /| |  | | ||  __/ |_   _|
                                                                                                  |_|     |_| \___/    |_|   |____/ \___/|____/    |_|   |____/ \___/ \___|_|\_\___|\__|___\___(_)\_/\_/ |_|  |_|\__\___|   |_|  
                                                                                                                                                                                                                                 
                                                                                                
                                                                                                + T0: 305: socket.SocketIO.write => ( b=b'Content-Length: 5\r\n\r\n' )
                                                                                                        + T0: 306: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x00000151E8E8D208> )
                                                                                                        - T0: 306: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                                                                        + T0: 307: socket.SocketIO._checkWritable -> _io._IOBase._checkWritable => ( <socket.SocketIO object at 0x00000151E8E8D208> )
                                                                                                                + T0: 308: socket.SocketIO.writable => 
                                                                                                                - T0: 308: socket.SocketIO.writable <= True
                                                                                                        - T0: 307: socket.SocketIO._checkWritable -> _io._IOBase._checkWritable <= True
                                                                                                                 _____ ___            _____  ___   ___                           _        _                        _         
                                                                                                           _    |_   _/ _ \     _    |___ / / _ \ / _ \     _     ___  ___   ___| | _____| |_   ___  ___ _ __   __| |    _   
                                                                                                         _| |_    | || | | |  _| |_    |_ \| | | | (_) |  _| |_  / __|/ _ \ / __| |/ / _ \ __| / __|/ _ \ '_ \ / _` |  _| |_ 
                                                                                                        |_   _|   | || |_| | |_   _|  ___) | |_| |\__, | |_   _| \__ \ (_) | (__|   <  __/ |_ _\__ \  __/ | | | (_| | |_   _|
                                                                                                          |_|     |_| \___/    |_|   |____/ \___/   /_/    |_|   |___/\___/ \___|_|\_\___|\__(_)___/\___|_| |_|\__,_|   |_|  
                                                                                                                                                                                                                             
                                                                                                        
                                                                                                        + T0: 309: socket.socket.send -> _socket.socket.send => ( <socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)>, b'Content-Length: 5\r\n\r\n' )
                                                                                                        - T0: 309: socket.socket.send -> _socket.socket.send <= 21
                                                                                                                 _____ ___            _____  ___   ___                           _        _                        _         
                                                                                                                |_   _/ _ \          |___ / / _ \ / _ \           ___  ___   ___| | _____| |_   ___  ___ _ __   __| |        
                                                                                                         _____    | || | | |  _____    |_ \| | | | (_) |  _____  / __|/ _ \ / __| |/ / _ \ __| / __|/ _ \ '_ \ / _` |  _____ 
                                                                                                        |_____|   | || |_| | |_____|  ___) | |_| |\__, | |_____| \__ \ (_) | (__|   <  __/ |_ _\__ \  __/ | | | (_| | |_____|
                                                                                                                  |_| \___/          |____/ \___/   /_/          |___/\___/ \___|_|\_\___|\__(_)___/\___|_| |_|\__,_|        
                                                                                                                                                                                                                             
                                                                                                        
                                                                                                - T0: 305: socket.SocketIO.write <= 21
                                                                                                         _____ ___            _____  ___  ____            ____             _        _   ___ ___                _ _               
                                                                                                        |_   _/ _ \          |___ / / _ \| ___|          / ___|  ___   ___| | _____| |_|_ _/ _ \__      ___ __(_) |_ ___         
                                                                                                 _____    | || | | |  _____    |_ \| | | |___ \   _____  \___ \ / _ \ / __| |/ / _ \ __|| | | | \ \ /\ / / '__| | __/ _ \  _____ 
                                                                                                |_____|   | || |_| | |_____|  ___) | |_| |___) | |_____|  ___) | (_) | (__|   <  __/ |_ | | |_| |\ V  V /| |  | | ||  __/ |_____|
                                                                                                          |_| \___/          |____/ \___/|____/          |____/ \___/ \___|_|\_\___|\__|___\___(_)\_/\_/ |_|  |_|\__\___|        
                                                                                                                                                                                                                                 
                                                                                                
                                                                                        - T0: 304: wsgiref.simple_server.ServerHandler._write -> wsgiref.handlers.SimpleHandler._write <= None
                                                                                                 _____ ___            _____  ___  _  _           
                                                                                                |_   _/ _ \          |___ / / _ \| || |          
                                                                                         _____    | || | | |  _____    |_ \| | | | || |_   _____ 
                                                                                        |_____|   | || |_| | |_____|  ___) | |_| |__   _| |_____|
                                                                                                  |_| \___/          |____/ \___/   |_|          
                                                                                                                                                 
                                                                                         ____                           _   _                 _ _                           _ _               
                                                                                        / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __  __      ___ __(_) |_ ___         
                                                                                        \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| \ \ /\ / / '__| | __/ _ \  _____ 
                                                                                         ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _   \ V  V /| |  | | ||  __/ |_____|
                                                                                        |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___\_/\_/ |_|  |_|\__\___|        
                                                                                                                                                          |_____|                             
                                                                                        
                                                                                - T0: 273: wsgiref.simple_server.ServerHandler.send_headers -> wsgiref.handlers.BaseHandler.send_headers <= None
                                                                                         _____ ___            ____ _____ _____         
                                                                                        |_   _/ _ \          |___ \___  |___ /         
                                                                                 _____    | || | | |  _____    __) | / /  |_ \   _____ 
                                                                                |_____|   | || |_| | |_____|  / __/ / /  ___) | |_____|
                                                                                          |_| \___/          |_____/_/  |____/         
                                                                                                                                       
                                                                                 ____                           _   _                 _ _                              _     _                    _                       
                                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___  ___ _ __   __| |   | |__   ___  __ _  __| | ___ _ __ ___         
                                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __|/ _ \ '_ \ / _` |   | '_ \ / _ \/ _` |/ _` |/ _ \ '__/ __|  _____ 
                                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _\__ \  __/ | | | (_| |   | | | |  __/ (_| | (_| |  __/ |  \__ \ |_____|
                                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___/\___|_| |_|\__,_|___|_| |_|\___|\__,_|\__,_|\___|_|  |___/        
                                                                                                                                                                       |_____|                                            
                                                                                
                                                                                         _____ ___            _____ _  ___            ____                           _   _                 _ _                           _ _       
                                                                                   _    |_   _/ _ \     _    |___ // |/ _ \     _    / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __  __      ___ __(_) |_ ___ 
                                                                                 _| |_    | || | | |  _| |_    |_ \| | | | |  _| |_  \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| \ \ /\ / / '__| | __/ _ \
                                                                                |_   _|   | || |_| | |_   _|  ___) | | |_| | |_   _|  ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _   \ V  V /| |  | | ||  __/
                                                                                  |_|     |_| \___/    |_|   |____/|_|\___/    |_|   |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___\_/\_/ |_|  |_|\__\___|
                                                                                                                                                                                                       |_____|                     
                                                                                       
                                                                                   _   
                                                                                 _| |_ 
                                                                                |_   _|
                                                                                  |_|  
                                                                                       
                                                                                
                                                                                + T0: 310: wsgiref.simple_server.ServerHandler._write -> wsgiref.handlers.SimpleHandler._write => ( data=b'hello' )
                                                                                                 _____ ___            _____ _ _           ____             _        _   ___ ___                _ _               
                                                                                           _    |_   _/ _ \     _    |___ // / |    _    / ___|  ___   ___| | _____| |_|_ _/ _ \__      ___ __(_) |_ ___     _   
                                                                                         _| |_    | || | | |  _| |_    |_ \| | |  _| |_  \___ \ / _ \ / __| |/ / _ \ __|| | | | \ \ /\ / / '__| | __/ _ \  _| |_ 
                                                                                        |_   _|   | || |_| | |_   _|  ___) | | | |_   _|  ___) | (_) | (__|   <  __/ |_ | | |_| |\ V  V /| |  | | ||  __/ |_   _|
                                                                                          |_|     |_| \___/    |_|   |____/|_|_|   |_|   |____/ \___/ \___|_|\_\___|\__|___\___(_)\_/\_/ |_|  |_|\__\___|   |_|  
                                                                                                                                                                                                                 
                                                                                        
                                                                                        + T0: 311: socket.SocketIO.write => ( b=b'hello' )
                                                                                                + T0: 312: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x00000151E8E8D208> )
                                                                                                - T0: 312: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                                                                + T0: 313: socket.SocketIO._checkWritable -> _io._IOBase._checkWritable => ( <socket.SocketIO object at 0x00000151E8E8D208> )
                                                                                                        + T0: 314: socket.SocketIO.writable => 
                                                                                                        - T0: 314: socket.SocketIO.writable <= True
                                                                                                - T0: 313: socket.SocketIO._checkWritable -> _io._IOBase._checkWritable <= True
                                                                                                         _____ ___            _____ _ ____                           _        _                        _         
                                                                                                   _    |_   _/ _ \     _    |___ // | ___|     _     ___  ___   ___| | _____| |_   ___  ___ _ __   __| |    _   
                                                                                                 _| |_    | || | | |  _| |_    |_ \| |___ \   _| |_  / __|/ _ \ / __| |/ / _ \ __| / __|/ _ \ '_ \ / _` |  _| |_ 
                                                                                                |_   _|   | || |_| | |_   _|  ___) | |___) | |_   _| \__ \ (_) | (__|   <  __/ |_ _\__ \  __/ | | | (_| | |_   _|
                                                                                                  |_|     |_| \___/    |_|   |____/|_|____/    |_|   |___/\___/ \___|_|\_\___|\__(_)___/\___|_| |_|\__,_|   |_|  
                                                                                                                                                                                                                 
                                                                                                
                                                                                                + T0: 315: socket.socket.send -> _socket.socket.send => ( <socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)>, b'hello' )
                                                                                                - T0: 315: socket.socket.send -> _socket.socket.send <= 5
                                                                                                         _____ ___            _____ _ ____                           _        _                        _         
                                                                                                        |_   _/ _ \          |___ // | ___|           ___  ___   ___| | _____| |_   ___  ___ _ __   __| |        
                                                                                                 _____    | || | | |  _____    |_ \| |___ \   _____  / __|/ _ \ / __| |/ / _ \ __| / __|/ _ \ '_ \ / _` |  _____ 
                                                                                                |_____|   | || |_| | |_____|  ___) | |___) | |_____| \__ \ (_) | (__|   <  __/ |_ _\__ \  __/ | | | (_| | |_____|
                                                                                                          |_| \___/          |____/|_|____/          |___/\___/ \___|_|\_\___|\__(_)___/\___|_| |_|\__,_|        
                                                                                                                                                                                                                 
                                                                                                
                                                                                        - T0: 311: socket.SocketIO.write <= 5
                                                                                                 _____ ___            _____ _ _           ____             _        _   ___ ___                _ _               
                                                                                                |_   _/ _ \          |___ // / |         / ___|  ___   ___| | _____| |_|_ _/ _ \__      ___ __(_) |_ ___         
                                                                                         _____    | || | | |  _____    |_ \| | |  _____  \___ \ / _ \ / __| |/ / _ \ __|| | | | \ \ /\ / / '__| | __/ _ \  _____ 
                                                                                        |_____|   | || |_| | |_____|  ___) | | | |_____|  ___) | (_) | (__|   <  __/ |_ | | |_| |\ V  V /| |  | | ||  __/ |_____|
                                                                                                  |_| \___/          |____/|_|_|         |____/ \___/ \___|_|\_\___|\__|___\___(_)\_/\_/ |_|  |_|\__\___|        
                                                                                                                                                                                                                 
                                                                                        
                                                                                - T0: 310: wsgiref.simple_server.ServerHandler._write -> wsgiref.handlers.SimpleHandler._write <= None
                                                                                         _____ ___            _____ _  ___            ____                           _   _                 _ _                           _ _       
                                                                                        |_   _/ _ \          |___ // |/ _ \          / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __  __      ___ __(_) |_ ___ 
                                                                                 _____    | || | | |  _____    |_ \| | | | |  _____  \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| \ \ /\ / / '__| | __/ _ \
                                                                                |_____|   | || |_| | |_____|  ___) | | |_| | |_____|  ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _   \ V  V /| |  | | ||  __/
                                                                                          |_| \___/          |____/|_|\___/          |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___\_/\_/ |_|  |_|\__\___|
                                                                                                                                                                                                       |_____|                     
                                                                                       
                                                                                       
                                                                                 _____ 
                                                                                |_____|
                                                                                       
                                                                                       
                                                                                
                                                                                         _____ ___            _____ _  __             ____                           _   _                 _ _                __ _           _     
                                                                                   _    |_   _/ _ \     _    |___ // |/ /_      _    / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __     / _| |_   _ ___| |__  
                                                                                 _| |_    | || | | |  _| |_    |_ \| | '_ \   _| |_  \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__|   | |_| | | | / __| '_ \ 
                                                                                |_   _|   | || |_| | |_   _|  ___) | | (_) | |_   _|  ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _    |  _| | |_| \__ \ | | |
                                                                                  |_|     |_| \___/    |_|   |____/|_|\___/    |_|   |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___|_| |_|\__,_|___/_| |_|
                                                                                                                                                                                                       |_____|                     
                                                                                       
                                                                                   _   
                                                                                 _| |_ 
                                                                                |_   _|
                                                                                  |_|  
                                                                                       
                                                                                
                                                                                + T0: 316: wsgiref.simple_server.ServerHandler._flush -> wsgiref.handlers.SimpleHandler._flush => 
                                                                                                 _____ ___            _____ _ _____           ____             _        _   ___ ___    __ _           _             
                                                                                           _    |_   _/ _ \     _    |___ // |___  |    _    / ___|  ___   ___| | _____| |_|_ _/ _ \  / _| |_   _ ___| |__      _   
                                                                                         _| |_    | || | | |  _| |_    |_ \| |  / /   _| |_  \___ \ / _ \ / __| |/ / _ \ __|| | | | || |_| | | | / __| '_ \   _| |_ 
                                                                                        |_   _|   | || |_| | |_   _|  ___) | | / /   |_   _|  ___) | (_) | (__|   <  __/ |_ | | |_| ||  _| | |_| \__ \ | | | |_   _|
                                                                                          |_|     |_| \___/    |_|   |____/|_|/_/      |_|   |____/ \___/ \___|_|\_\___|\__|___\___(_)_| |_|\__,_|___/_| |_|   |_|  
                                                                                                                                                                                                                    
                                                                                        
                                                                                        + T0: 317: socket.SocketIO.flush -> _io._IOBase.flush => 
                                                                                        - T0: 317: socket.SocketIO.flush -> _io._IOBase.flush <= None
                                                                                                 _____ ___            _____ _ _____           ____             _        _   ___ ___    __ _           _             
                                                                                                |_   _/ _ \          |___ // |___  |         / ___|  ___   ___| | _____| |_|_ _/ _ \  / _| |_   _ ___| |__          
                                                                                         _____    | || | | |  _____    |_ \| |  / /   _____  \___ \ / _ \ / __| |/ / _ \ __|| | | | || |_| | | | / __| '_ \   _____ 
                                                                                        |_____|   | || |_| | |_____|  ___) | | / /   |_____|  ___) | (_) | (__|   <  __/ |_ | | |_| ||  _| | |_| \__ \ | | | |_____|
                                                                                                  |_| \___/          |____/|_|/_/            |____/ \___/ \___|_|\_\___|\__|___\___(_)_| |_|\__,_|___/_| |_|        
                                                                                                                                                                                                                    
                                                                                        
                                                                                        + T0: 318: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='_flush', value=<bound method _IOBase.flush of <socket.SocketIO object at 0x00000151E8E8D208>> )
                                                                                        - T0: 318: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                                - T0: 316: wsgiref.simple_server.ServerHandler._flush -> wsgiref.handlers.SimpleHandler._flush <= None
                                                                                         _____ ___            _____ _  __             ____                           _   _                 _ _                __ _           _     
                                                                                        |_   _/ _ \          |___ // |/ /_           / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __     / _| |_   _ ___| |__  
                                                                                 _____    | || | | |  _____    |_ \| | '_ \   _____  \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__|   | |_| | | | / __| '_ \ 
                                                                                |_____|   | || |_| | |_____|  ___) | | (_) | |_____|  ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _    |  _| | |_| \__ \ | | |
                                                                                          |_| \___/          |____/|_|\___/          |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___|_| |_|\__,_|___/_| |_|
                                                                                                                                                                                                       |_____|                     
                                                                                       
                                                                                       
                                                                                 _____ 
                                                                                |_____|
                                                                                       
                                                                                       
                                                                                
                                                                        - T0: 271: wsgiref.simple_server.ServerHandler.write -> wsgiref.handlers.BaseHandler.write <= None
                                                                                 _____ ___            ____ _____ _           ____                           _   _                 _ _                         _ _       
                                                                                |_   _/ _ \          |___ \___  / |         / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ ____      ___ __(_) |_ ___ 
                                                                         _____    | || | | |  _____    __) | / /| |  _____  \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__\ \ /\ / / '__| | __/ _ \
                                                                        |_____|   | || |_| | |_____|  / __/ / / | | |_____|  ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _ \ V  V /| |  | | ||  __/
                                                                                  |_| \___/          |_____/_/  |_|         |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_) \_/\_/ |_|  |_|\__\___|
                                                                                                                                                                                                                        
                                                                               
                                                                               
                                                                         _____ 
                                                                        |_____|
                                                                               
                                                                               
                                                                        
                                                                                 _____ ___            _____ _  ___          
                                                                           _    |_   _/ _ \     _    |___ // |/ _ \     _   
                                                                         _| |_    | || | | |  _| |_    |_ \| | (_) |  _| |_ 
                                                                        |_   _|   | || |_| | |_   _|  ___) | |\__, | |_   _|
                                                                          |_|     |_| \___/    |_|   |____/|_|  /_/    |_|  
                                                                                                                            
                                                                         ____                           _   _                 _ _            __ _       _     _                        _             _           
                                                                        / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ / _(_)_ __ (_)___| |__      ___ ___  _ __ | |_ ___ _ __ | |_     _   
                                                                        \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| |_| | '_ \| / __| '_ \    / __/ _ \| '_ \| __/ _ \ '_ \| __|  _| |_ 
                                                                         ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _|  _| | | | | \__ \ | | |  | (_| (_) | | | | ||  __/ | | | |_  |_   _|
                                                                        |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|_| |_|_|___/_| |_|___\___\___/|_| |_|\__\___|_| |_|\__|   |_|  
                                                                                                                                                                  |_____|                                        
                                                                        
                                                                        + T0: 319: wsgiref.simple_server.ServerHandler.finish_content -> wsgiref.handlers.BaseHandler.finish_content => 
                                                                        - T0: 319: wsgiref.simple_server.ServerHandler.finish_content -> wsgiref.handlers.BaseHandler.finish_content <= None
                                                                                 _____ ___            _____ _  ___          
                                                                                |_   _/ _ \          |___ // |/ _ \         
                                                                         _____    | || | | |  _____    |_ \| | (_) |  _____ 
                                                                        |_____|   | || |_| | |_____|  ___) | |\__, | |_____|
                                                                                  |_| \___/          |____/|_|  /_/         
                                                                                                                            
                                                                         ____                           _   _                 _ _            __ _       _     _                        _             _           
                                                                        / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ / _(_)_ __ (_)___| |__      ___ ___  _ __ | |_ ___ _ __ | |_         
                                                                        \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| |_| | '_ \| / __| '_ \    / __/ _ \| '_ \| __/ _ \ '_ \| __|  _____ 
                                                                         ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _|  _| | | | | \__ \ | | |  | (_| (_) | | | | ||  __/ | | | |_  |_____|
                                                                        |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|_| |_|_|___/_| |_|___\___\___/|_| |_|\__\___|_| |_|\__|        
                                                                                                                                                                  |_____|                                        
                                                                        
                                                                                 _____ ___            _________   ___            ____                           _   _                 _ _               _                
                                                                           _    |_   _/ _ \     _    |___ /___ \ / _ \     _    / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___| | ___  ___  ___ 
                                                                         _| |_    | || | | |  _| |_    |_ \ __) | | | |  _| |_  \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __| |/ _ \/ __|/ _ \
                                                                        |_   _|   | || |_| | |_   _|  ___) / __/| |_| | |_   _|  ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | | (__| | (_) \__ \  __/
                                                                          |_|     |_| \___/    |_|   |____/_____|\___/    |_|   |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___|_|\___/|___/\___|
                                                                                                                                                                                                                         
                                                                               
                                                                           _   
                                                                         _| |_ 
                                                                        |_   _|
                                                                          |_|  
                                                                               
                                                                        
                                                                        + T0: 320: wsgiref.simple_server.ServerHandler.close => 
                                                                                + T0: 321: wsgiref.simple_server.WSGIRequestHandler.log_request -> http.server.BaseHTTPRequestHandler.log_request => ( code='200', size=5 )
                                                                                - T0: 321: wsgiref.simple_server.WSGIRequestHandler.log_request -> http.server.BaseHTTPRequestHandler.log_request <= None
                                                                                         _____ ___            _________  ____            ____                           _   _                 _ _               _                
                                                                                   _    |_   _/ _ \     _    |___ /___ \| ___|     _    / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___| | ___  ___  ___ 
                                                                                 _| |_    | || | | |  _| |_    |_ \ __) |___ \   _| |_  \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __| |/ _ \/ __|/ _ \
                                                                                |_   _|   | || |_| | |_   _|  ___) / __/ ___) | |_   _|  ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | | (__| | (_) \__ \  __/
                                                                                  |_|     |_| \___/    |_|   |____/_____|____/    |_|   |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___|_|\___/|___/\___|
                                                                                                                                                                                                                                 
                                                                                       
                                                                                   _   
                                                                                 _| |_ 
                                                                                |_   _|
                                                                                  |_|  
                                                                                       
                                                                                
                                                                                + T0: 325: wsgiref.simple_server.ServerHandler.close -> wsgiref.handlers.BaseHandler.close => 
                                                                                        + T0: 326: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='result', value=None )
                                                                                        - T0: 326: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                                        + T0: 327: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='headers', value=None )
                                                                                        - T0: 327: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                                        + T0: 328: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='status', value=None )
                                                                                        - T0: 328: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                                        + T0: 329: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='environ', value=None )
                                                                                        - T0: 329: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                                        + T0: 330: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='bytes_sent', value=0 )
                                                                                        - T0: 330: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                                        + T0: 331: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ => ( name='headers_sent', value=False )
                                                                                        - T0: 331: wsgiref.simple_server.ServerHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                                - T0: 325: wsgiref.simple_server.ServerHandler.close -> wsgiref.handlers.BaseHandler.close <= None
                                                                                         _____ ___            _________  ____            ____                           _   _                 _ _               _                
                                                                                        |_   _/ _ \          |___ /___ \| ___|          / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___| | ___  ___  ___ 
                                                                                 _____    | || | | |  _____    |_ \ __) |___ \   _____  \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __| |/ _ \/ __|/ _ \
                                                                                |_____|   | || |_| | |_____|  ___) / __/ ___) | |_____|  ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | | (__| | (_) \__ \  __/
                                                                                          |_| \___/          |____/_____|____/          |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___|_|\___/|___/\___|
                                                                                                                                                                                                                                 
                                                                                       
                                                                                       
                                                                                 _____ 
                                                                                |_____|
                                                                                       
                                                                                       
                                                                                
                                                                        - T0: 320: wsgiref.simple_server.ServerHandler.close <= None
                                                                                 _____ ___            _________   ___            ____                           _   _                 _ _               _                
                                                                                |_   _/ _ \          |___ /___ \ / _ \          / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ ___| | ___  ___  ___ 
                                                                         _____    | || | | |  _____    |_ \ __) | | | |  _____  \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __| |/ _ \/ __|/ _ \
                                                                        |_____|   | || |_| | |_____|  ___) / __/| |_| | |_____|  ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | | (__| | (_) \__ \  __/
                                                                                  |_| \___/          |____/_____|\___/          |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___|_|\___/|___/\___|
                                                                                                                                                                                                                         
                                                                               
                                                                               
                                                                         _____ 
                                                                        |_____|
                                                                               
                                                                               
                                                                        
                                                                - T0: 269: wsgiref.simple_server.ServerHandler.finish_response -> wsgiref.handlers.BaseHandler.finish_response <= None
                                                                         _____ ___            ____   __   ___          
                                                                        |_   _/ _ \          |___ \ / /_ / _ \         
                                                                 _____    | || | | |  _____    __) | '_ \ (_) |  _____ 
                                                                |_____|   | || |_| | |_____|  / __/| (_) \__, | |_____|
                                                                          |_| \___/          |_____|\___/  /_/         
                                                                                                                       
                                                                 ____                           _   _                 _ _            __ _       _     _                                                          
                                                                / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ / _(_)_ __ (_)___| |__      _ __ ___  ___ _ __   ___  _ __  ___  ___         
                                                                \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| |_| | '_ \| / __| '_ \    | '__/ _ \/ __| '_ \ / _ \| '_ \/ __|/ _ \  _____ 
                                                                 ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _|  _| | | | | \__ \ | | |   | | |  __/\__ \ |_) | (_) | | | \__ \  __/ |_____|
                                                                |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|_| |_|_|___/_| |_|___|_|  \___||___/ .__/ \___/|_| |_|___/\___|        
                                                                                                                                                          |_____|            |_|                                 
                                                                
                                                        - T0: 243: wsgiref.simple_server.ServerHandler.run -> wsgiref.handlers.BaseHandler.run <= None
                                                                 _____ ___            ____  _  _  _____           ____                           _   _                 _ _                            
                                                                |_   _/ _ \          |___ \| || ||___ /          / ___|  ___ _ ____   _____ _ __| | | | __ _ _ __   __| | | ___ _ __ _ __ _   _ _ __  
                                                         _____    | || | | |  _____    __) | || |_ |_ \   _____  \___ \ / _ \ '__\ \ / / _ \ '__| |_| |/ _` | '_ \ / _` | |/ _ \ '__| '__| | | | '_ \ 
                                                        |_____|   | || |_| | |_____|  / __/|__   _|__) | |_____|  ___) |  __/ |   \ V /  __/ |  |  _  | (_| | | | | (_| | |  __/ | _| |  | |_| | | | |
                                                                  |_| \___/          |_____|  |_||____/          |____/ \___|_|    \_/ \___|_|  |_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_|   \__,_|_| |_|
                                                                                                                                                                                                      
                                                               
                                                               
                                                         _____ 
                                                        |_____|
                                                               
                                                               
                                                        
                                                - T0: 84: wsgiref.simple_server.WSGIRequestHandler.handle <= None
                                                         _____ ___             ___  _  _           
                                                        |_   _/ _ \           ( _ )| || |          
                                                 _____    | || | | |  _____   / _ \| || |_   _____ 
                                                |_____|   | || |_| | |_____| | (_) |__   _| |_____|
                                                          |_| \___/           \___/   |_|          
                                                                                                   
                                                __        ______   ____ ___ ____                            _   _   _                 _ _           _                     _ _              
                                                \ \      / / ___| / ___|_ _|  _ \ ___  __ _ _   _  ___  ___| |_| | | | __ _ _ __   __| | | ___ _ __| |__   __ _ _ __   __| | | ___         
                                                 \ \ /\ / /\___ \| |  _ | || |_) / _ \/ _` | | | |/ _ \/ __| __| |_| |/ _` | '_ \ / _` | |/ _ \ '__| '_ \ / _` | '_ \ / _` | |/ _ \  _____ 
                                                  \ V  V /  ___) | |_| || ||  _ <  __/ (_| | |_| |  __/\__ \ |_|  _  | (_| | | | | (_| | |  __/ | _| | | | (_| | | | | (_| | |  __/ |_____|
                                                   \_/\_/  |____/ \____|___|_| \_\___|\__, |\__,_|\___||___/\__|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|\__,_|_| |_|\__,_|_|\___|        
                                                                                         |_|                                                                                               
                                                
                                                         _____ ___            ______________          
                                                   _    |_   _/ _ \     _    |___ /___ /___ \     _   
                                                 _| |_    | || | | |  _| |_    |_ \ |_ \ __) |  _| |_ 
                                                |_   _|   | || |_| | |_   _|  ___) |__) / __/  |_   _|
                                                  |_|     |_| \___/    |_|   |____/____/_____|   |_|  
                                                                                                      
                                                __        ______   ____ ___ ____                            _   _   _                 _ _            __ _       _     _             
                                                \ \      / / ___| / ___|_ _|  _ \ ___  __ _ _   _  ___  ___| |_| | | | __ _ _ __   __| | | ___ _ __ / _(_)_ __ (_)___| |__      _   
                                                 \ \ /\ / /\___ \| |  _ | || |_) / _ \/ _` | | | |/ _ \/ __| __| |_| |/ _` | '_ \ / _` | |/ _ \ '__| |_| | '_ \| / __| '_ \   _| |_ 
                                                  \ V  V /  ___) | |_| || ||  _ <  __/ (_| | |_| |  __/\__ \ |_|  _  | (_| | | | | (_| | |  __/ | _|  _| | | | | \__ \ | | | |_   _|
                                                   \_/\_/  |____/ \____|___|_| \_\___|\__, |\__,_|\___||___/\__|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|_| |_|_|___/_| |_|   |_|  
                                                                                         |_|                                                                                        
                                                
                                                + T0: 332: wsgiref.simple_server.WSGIRequestHandler.finish -> socketserver.StreamRequestHandler.finish => 
                                                                 _____ ___            _______________           ____             _        _   ___ ___    __ _           _             
                                                           _    |_   _/ _ \     _    |___ /___ /___ /     _    / ___|  ___   ___| | _____| |_|_ _/ _ \  / _| |_   _ ___| |__      _   
                                                         _| |_    | || | | |  _| |_    |_ \ |_ \ |_ \   _| |_  \___ \ / _ \ / __| |/ / _ \ __|| | | | || |_| | | | / __| '_ \   _| |_ 
                                                        |_   _|   | || |_| | |_   _|  ___) |__) |__) | |_   _|  ___) | (_) | (__|   <  __/ |_ | | |_| ||  _| | |_| \__ \ | | | |_   _|
                                                          |_|     |_| \___/    |_|   |____/____/____/    |_|   |____/ \___/ \___|_|\_\___|\__|___\___(_)_| |_|\__,_|___/_| |_|   |_|  
                                                                                                                                                                                      
                                                        
                                                        + T0: 333: socket.SocketIO.flush -> _io._IOBase.flush => 
                                                        - T0: 333: socket.SocketIO.flush -> _io._IOBase.flush <= None
                                                                 _____ ___            _______________           ____             _        _   ___ ___    __ _           _             
                                                                |_   _/ _ \          |___ /___ /___ /          / ___|  ___   ___| | _____| |_|_ _/ _ \  / _| |_   _ ___| |__          
                                                         _____    | || | | |  _____    |_ \ |_ \ |_ \   _____  \___ \ / _ \ / __| |/ / _ \ __|| | | | || |_| | | | / __| '_ \   _____ 
                                                        |_____|   | || |_| | |_____|  ___) |__) |__) | |_____|  ___) | (_) | (__|   <  __/ |_ | | |_| ||  _| | |_| \__ \ | | | |_____|
                                                                  |_| \___/          |____/____/____/          |____/ \___/ \___|_|\_\___|\__|___\___(_)_| |_|\__,_|___/_| |_|        
                                                                                                                                                                                      
                                                        
                                                                 _____ ___            __________ _  _             ____             _        _   ___ ___       _                        
                                                           _    |_   _/ _ \     _    |___ /___ /| || |      _    / ___|  ___   ___| | _____| |_|_ _/ _ \  ___| | ___  ___  ___     _   
                                                         _| |_    | || | | |  _| |_    |_ \ |_ \| || |_   _| |_  \___ \ / _ \ / __| |/ / _ \ __|| | | | |/ __| |/ _ \/ __|/ _ \  _| |_ 
                                                        |_   _|   | || |_| | |_   _|  ___) |__) |__   _| |_   _|  ___) | (_) | (__|   <  __/ |_ | | |_| | (__| | (_) \__ \  __/ |_   _|
                                                          |_|     |_| \___/    |_|   |____/____/   |_|     |_|   |____/ \___/ \___|_|\_\___|\__|___\___(_)___|_|\___/|___/\___|   |_|  
                                                                                                                                                                                       
                                                        
                                                        + T0: 334: socket.SocketIO.close => 
                                                                         _____ ___            ______________            ____             _        _   ___ ___    __ _           _             
                                                                   _    |_   _/ _ \     _    |___ /___ / ___|     _    / ___|  ___   ___| | _____| |_|_ _/ _ \  / _| |_   _ ___| |__      _   
                                                                 _| |_    | || | | |  _| |_    |_ \ |_ \___ \   _| |_  \___ \ / _ \ / __| |/ / _ \ __|| | | | || |_| | | | / __| '_ \   _| |_ 
                                                                |_   _|   | || |_| | |_   _|  ___) |__) |__) | |_   _|  ___) | (_) | (__|   <  __/ |_ | | |_| ||  _| | |_| \__ \ | | | |_   _|
                                                                  |_|     |_| \___/    |_|   |____/____/____/    |_|   |____/ \___/ \___|_|\_\___|\__|___\___(_)_| |_|\__,_|___/_| |_|   |_|  
                                                                                                                                                                                              
                                                                
                                                                + T0: 335: socket.SocketIO.flush -> _io._IOBase.flush => 
                                                                - T0: 335: socket.SocketIO.flush -> _io._IOBase.flush <= None
                                                                         _____ ___            ______________            ____             _        _   ___ ___    __ _           _             
                                                                        |_   _/ _ \          |___ /___ / ___|          / ___|  ___   ___| | _____| |_|_ _/ _ \  / _| |_   _ ___| |__          
                                                                 _____    | || | | |  _____    |_ \ |_ \___ \   _____  \___ \ / _ \ / __| |/ / _ \ __|| | | | || |_| | | | / __| '_ \   _____ 
                                                                |_____|   | || |_| | |_____|  ___) |__) |__) | |_____|  ___) | (_) | (__|   <  __/ |_ | | |_| ||  _| | |_| \__ \ | | | |_____|
                                                                          |_| \___/          |____/____/____/          |____/ \___/ \___|_|\_\___|\__|___\___(_)_| |_|\__,_|___/_| |_|        
                                                                                                                                                                                              
                                                                
                                                                + T0: 336: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='__IOBase_closed', value=True )
                                                                - T0: 336: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                         _____ ___            _______________         
                                                                   _    |_   _/ _ \     _    |___ /___ /___  |    _   
                                                                 _| |_    | || | | |  _| |_    |_ \ |_ \  / /   _| |_ 
                                                                |_   _|   | || |_| | |_   _|  ___) |__) |/ /   |_   _|
                                                                  |_|     |_| \___/    |_|   |____/____//_/      |_|  
                                                                                                                      
                                                                                _        _            _                     __                  _        _   _                   
                                                                 ___  ___   ___| | _____| |_       __| | ___  ___ _ __ ___ / _|  ___  ___   ___| | _____| |_(_) ___  ___     _   
                                                                / __|/ _ \ / __| |/ / _ \ __|     / _` |/ _ \/ __| '__/ _ \ |_  / __|/ _ \ / __| |/ / _ \ __| |/ _ \/ __|  _| |_ 
                                                                \__ \ (_) | (__|   <  __/ |_ _   | (_| |  __/ (__| | |  __/  _| \__ \ (_) | (__|   <  __/ |_| | (_) \__ \ |_   _|
                                                                |___/\___/ \___|_|\_\___|\__(_)___\__,_|\___|\___|_|  \___|_|___|___/\___/ \___|_|\_\___|\__|_|\___/|___/   |_|  
                                                                                             |_____|                       |_____|                                               
                                                                
                                                                + T0: 337: socket.socket._decref_socketios => 
                                                                        + T0: 338: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_io_refs', value=1 )
                                                                        - T0: 338: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                                                                - T0: 337: socket.socket._decref_socketios <= None
                                                                         _____ ___            _______________         
                                                                        |_   _/ _ \          |___ /___ /___  |        
                                                                 _____    | || | | |  _____    |_ \ |_ \  / /   _____ 
                                                                |_____|   | || |_| | |_____|  ___) |__) |/ /   |_____|
                                                                          |_| \___/          |____/____//_/           
                                                                                                                      
                                                                                _        _            _                     __                  _        _   _                   
                                                                 ___  ___   ___| | _____| |_       __| | ___  ___ _ __ ___ / _|  ___  ___   ___| | _____| |_(_) ___  ___         
                                                                / __|/ _ \ / __| |/ / _ \ __|     / _` |/ _ \/ __| '__/ _ \ |_  / __|/ _ \ / __| |/ / _ \ __| |/ _ \/ __|  _____ 
                                                                \__ \ (_) | (__|   <  __/ |_ _   | (_| |  __/ (__| | |  __/  _| \__ \ (_) | (__|   <  __/ |_| | (_) \__ \ |_____|
                                                                |___/\___/ \___|_|\_\___|\__(_)___\__,_|\___|\___|_|  \___|_|___|___/\___/ \___|_|\_\___|\__|_|\___/|___/        
                                                                                             |_____|                       |_____|                                               
                                                                
                                                                + T0: 339: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_sock', value=None )
                                                                - T0: 339: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                        - T0: 334: socket.SocketIO.close <= None
                                                                 _____ ___            __________ _  _             ____             _        _   ___ ___       _                        
                                                                |_   _/ _ \          |___ /___ /| || |           / ___|  ___   ___| | _____| |_|_ _/ _ \  ___| | ___  ___  ___         
                                                         _____    | || | | |  _____    |_ \ |_ \| || |_   _____  \___ \ / _ \ / __| |/ / _ \ __|| | | | |/ __| |/ _ \/ __|/ _ \  _____ 
                                                        |_____|   | || |_| | |_____|  ___) |__) |__   _| |_____|  ___) | (_) | (__|   <  __/ |_ | | |_| | (__| | (_) \__ \  __/ |_____|
                                                                  |_| \___/          |____/____/   |_|           |____/ \___/ \___|_|\_\___|\__|___\___(_)___|_|\___/|___/\___|        
                                                                                                                                                                                       
                                                        
                                                                 _____ ___            _____ _  _    ___            ____             _        _   ___ ___    __ _           _             
                                                           _    |_   _/ _ \     _    |___ /| || |  / _ \     _    / ___|  ___   ___| | _____| |_|_ _/ _ \  / _| |_   _ ___| |__      _   
                                                         _| |_    | || | | |  _| |_    |_ \| || |_| | | |  _| |_  \___ \ / _ \ / __| |/ / _ \ __|| | | | || |_| | | | / __| '_ \   _| |_ 
                                                        |_   _|   | || |_| | |_   _|  ___) |__   _| |_| | |_   _|  ___) | (_) | (__|   <  __/ |_ | | |_| ||  _| | |_| \__ \ | | | |_   _|
                                                          |_|     |_| \___/    |_|   |____/   |_|  \___/    |_|   |____/ \___/ \___|_|\_\___|\__|___\___(_)_| |_|\__,_|___/_| |_|   |_|  
                                                                                                                                                                                         
                                                        
                                                        + T0: 340: socket.SocketIO.flush -> _io._IOBase.flush => 
                                                        - T0: 340: socket.SocketIO.flush -> _io._IOBase.flush <= None
                                                                 _____ ___            _____ _  _    ___            ____             _        _   ___ ___    __ _           _             
                                                                |_   _/ _ \          |___ /| || |  / _ \          / ___|  ___   ___| | _____| |_|_ _/ _ \  / _| |_   _ ___| |__          
                                                         _____    | || | | |  _____    |_ \| || |_| | | |  _____  \___ \ / _ \ / __| |/ / _ \ __|| | | | || |_| | | | / __| '_ \   _____ 
                                                        |_____|   | || |_| | |_____|  ___) |__   _| |_| | |_____|  ___) | (_) | (__|   <  __/ |_ | | |_| ||  _| | |_| \__ \ | | | |_____|
                                                                  |_| \___/          |____/   |_|  \___/          |____/ \___/ \___|_|\_\___|\__|___\___(_)_| |_|\__,_|___/_| |_|        
                                                                                                                                                                                         
                                                        
                                                                 _____ ___            _____ _  _   _           ____             _        _   ___ ___       _                        
                                                           _    |_   _/ _ \     _    |___ /| || | / |    _    / ___|  ___   ___| | _____| |_|_ _/ _ \  ___| | ___  ___  ___     _   
                                                         _| |_    | || | | |  _| |_    |_ \| || |_| |  _| |_  \___ \ / _ \ / __| |/ / _ \ __|| | | | |/ __| |/ _ \/ __|/ _ \  _| |_ 
                                                        |_   _|   | || |_| | |_   _|  ___) |__   _| | |_   _|  ___) | (_) | (__|   <  __/ |_ | | |_| | (__| | (_) \__ \  __/ |_   _|
                                                          |_|     |_| \___/    |_|   |____/   |_| |_|   |_|   |____/ \___/ \___|_|\_\___|\__|___\___(_)___|_|\___/|___/\___|   |_|  
                                                                                                                                                                                    
                                                        
                                                        + T0: 341: socket.SocketIO.close => 
                                                                         _____ ___            _____ _  _  ____            ____             _        _   ___ ___    __ _           _             
                                                                   _    |_   _/ _ \     _    |___ /| || ||___ \     _    / ___|  ___   ___| | _____| |_|_ _/ _ \  / _| |_   _ ___| |__      _   
                                                                 _| |_    | || | | |  _| |_    |_ \| || |_ __) |  _| |_  \___ \ / _ \ / __| |/ / _ \ __|| | | | || |_| | | | / __| '_ \   _| |_ 
                                                                |_   _|   | || |_| | |_   _|  ___) |__   _/ __/  |_   _|  ___) | (_) | (__|   <  __/ |_ | | |_| ||  _| | |_| \__ \ | | | |_   _|
                                                                  |_|     |_| \___/    |_|   |____/   |_||_____|   |_|   |____/ \___/ \___|_|\_\___|\__|___\___(_)_| |_|\__,_|___/_| |_|   |_|  
                                                                                                                                                                                                
                                                                
                                                                + T0: 342: socket.SocketIO.flush -> _io._IOBase.flush => 
                                                                - T0: 342: socket.SocketIO.flush -> _io._IOBase.flush <= None
                                                                         _____ ___            _____ _  _  ____            ____             _        _   ___ ___    __ _           _             
                                                                        |_   _/ _ \          |___ /| || ||___ \          / ___|  ___   ___| | _____| |_|_ _/ _ \  / _| |_   _ ___| |__          
                                                                 _____    | || | | |  _____    |_ \| || |_ __) |  _____  \___ \ / _ \ / __| |/ / _ \ __|| | | | || |_| | | | / __| '_ \   _____ 
                                                                |_____|   | || |_| | |_____|  ___) |__   _/ __/  |_____|  ___) | (_) | (__|   <  __/ |_ | | |_| ||  _| | |_| \__ \ | | | |_____|
                                                                          |_| \___/          |____/   |_||_____|         |____/ \___/ \___|_|\_\___|\__|___\___(_)_| |_|\__,_|___/_| |_|        
                                                                                                                                                                                                
                                                                
                                                                + T0: 343: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='__IOBase_closed', value=True )
                                                                - T0: 343: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                         _____ ___            _____ _  _   _  _           
                                                                   _    |_   _/ _ \     _    |___ /| || | | || |      _   
                                                                 _| |_    | || | | |  _| |_    |_ \| || |_| || |_   _| |_ 
                                                                |_   _|   | || |_| | |_   _|  ___) |__   _|__   _| |_   _|
                                                                  |_|     |_| \___/    |_|   |____/   |_|    |_|     |_|  
                                                                                                                          
                                                                                _        _            _                     __                  _        _   _                   
                                                                 ___  ___   ___| | _____| |_       __| | ___  ___ _ __ ___ / _|  ___  ___   ___| | _____| |_(_) ___  ___     _   
                                                                / __|/ _ \ / __| |/ / _ \ __|     / _` |/ _ \/ __| '__/ _ \ |_  / __|/ _ \ / __| |/ / _ \ __| |/ _ \/ __|  _| |_ 
                                                                \__ \ (_) | (__|   <  __/ |_ _   | (_| |  __/ (__| | |  __/  _| \__ \ (_) | (__|   <  __/ |_| | (_) \__ \ |_   _|
                                                                |___/\___/ \___|_|\_\___|\__(_)___\__,_|\___|\___|_|  \___|_|___|___/\___/ \___|_|\_\___|\__|_|\___/|___/   |_|  
                                                                                             |_____|                       |_____|                                               
                                                                
                                                                + T0: 344: socket.socket._decref_socketios => 
                                                                        + T0: 345: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_io_refs', value=0 )
                                                                        - T0: 345: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                                                                - T0: 344: socket.socket._decref_socketios <= None
                                                                         _____ ___            _____ _  _   _  _           
                                                                        |_   _/ _ \          |___ /| || | | || |          
                                                                 _____    | || | | |  _____    |_ \| || |_| || |_   _____ 
                                                                |_____|   | || |_| | |_____|  ___) |__   _|__   _| |_____|
                                                                          |_| \___/          |____/   |_|    |_|          
                                                                                                                          
                                                                                _        _            _                     __                  _        _   _                   
                                                                 ___  ___   ___| | _____| |_       __| | ___  ___ _ __ ___ / _|  ___  ___   ___| | _____| |_(_) ___  ___         
                                                                / __|/ _ \ / __| |/ / _ \ __|     / _` |/ _ \/ __| '__/ _ \ |_  / __|/ _ \ / __| |/ / _ \ __| |/ _ \/ __|  _____ 
                                                                \__ \ (_) | (__|   <  __/ |_ _   | (_| |  __/ (__| | |  __/  _| \__ \ (_) | (__|   <  __/ |_| | (_) \__ \ |_____|
                                                                |___/\___/ \___|_|\_\___|\__(_)___\__,_|\___|\___|_|  \___|_|___|___/\___/ \___|_|\_\___|\__|_|\___/|___/        
                                                                                             |_____|                       |_____|                                               
                                                                
                                                                + T0: 346: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_sock', value=None )
                                                                - T0: 346: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                        - T0: 341: socket.SocketIO.close <= None
                                                                 _____ ___            _____ _  _   _           ____             _        _   ___ ___       _                        
                                                                |_   _/ _ \          |___ /| || | / |         / ___|  ___   ___| | _____| |_|_ _/ _ \  ___| | ___  ___  ___         
                                                         _____    | || | | |  _____    |_ \| || |_| |  _____  \___ \ / _ \ / __| |/ / _ \ __|| | | | |/ __| |/ _ \/ __|/ _ \  _____ 
                                                        |_____|   | || |_| | |_____|  ___) |__   _| | |_____|  ___) | (_) | (__|   <  __/ |_ | | |_| | (__| | (_) \__ \  __/ |_____|
                                                                  |_| \___/          |____/   |_| |_|         |____/ \___/ \___|_|\_\___|\__|___\___(_)___|_|\___/|___/\___|        
                                                                                                                                                                                    
                                                        
                                                - T0: 332: wsgiref.simple_server.WSGIRequestHandler.finish -> socketserver.StreamRequestHandler.finish <= None
                                                         _____ ___            ______________          
                                                        |_   _/ _ \          |___ /___ /___ \         
                                                 _____    | || | | |  _____    |_ \ |_ \ __) |  _____ 
                                                |_____|   | || |_| | |_____|  ___) |__) / __/  |_____|
                                                          |_| \___/          |____/____/_____|        
                                                                                                      
                                                __        ______   ____ ___ ____                            _   _   _                 _ _            __ _       _     _             
                                                \ \      / / ___| / ___|_ _|  _ \ ___  __ _ _   _  ___  ___| |_| | | | __ _ _ __   __| | | ___ _ __ / _(_)_ __ (_)___| |__          
                                                 \ \ /\ / /\___ \| |  _ | || |_) / _ \/ _` | | | |/ _ \/ __| __| |_| |/ _` | '_ \ / _` | |/ _ \ '__| |_| | '_ \| / __| '_ \   _____ 
                                                  \ V  V /  ___) | |_| || ||  _ <  __/ (_| | |_| |  __/\__ \ |_|  _  | (_| | | | | (_| | |  __/ | _|  _| | | | | \__ \ | | | |_____|
                                                   \_/\_/  |____/ \____|___|_| \_\___|\__, |\__,_|\___||___/\__|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|_| |_|_|___/_| |_|        
                                                                                         |_|                                                                                        
                                                
                                        - T0: 54: wsgiref.simple_server.WSGIRequestHandler.__init__ -> socketserver.BaseRequestHandler.__init__ <= None
                                                 _____ ___            ____  _  _           
                                                |_   _/ _ \          | ___|| || |          
                                         _____    | || | | |  _____  |___ \| || |_   _____ 
                                        |_____|   | || |_| | |_____|  ___) |__   _| |_____|
                                                  |_| \___/          |____/   |_|          
                                                                                           
                                         ____                 ____                            _   _   _                 _ _                     _       _ _                      
                                        | __ )  __ _ ___  ___|  _ \ ___  __ _ _   _  ___  ___| |_| | | | __ _ _ __   __| | | ___ _ __          (_)_ __ (_) |_                    
                                        |  _ \ / _` / __|/ _ \ |_) / _ \/ _` | | | |/ _ \/ __| __| |_| |/ _` | '_ \ / _` | |/ _ \ '__|         | | '_ \| | __|             _____ 
                                        | |_) | (_| \__ \  __/  _ <  __/ (_| | |_| |  __/\__ \ |_|  _  | (_| | | | | (_| | |  __/ | _          | | | | | | |_             |_____|
                                        |____/ \__,_|___/\___|_| \_\___|\__, |\__,_|\___||___/\__|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)____ ____|_|_| |_|_|\__|____ _____         
                                                                           |_|                                                      |_____|_____|           |_____|_____|        
                                        
                                - T0: 53: wsgiref.simple_server.WSGIServer.finish_request -> socketserver.BaseServer.finish_request <= None
                                         _____ ___            ____ _____         
                                        |_   _/ _ \          | ___|___ /         
                                 _____    | || | | |  _____  |___ \ |_ \   _____ 
                                |_____|   | || |_| | |_____|  ___) |__) | |_____|
                                          |_| \___/          |____/____/         
                                                                                 
                                __        ______   ____ ___ ____                            __ _       _     _                                        _           
                                \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ / _(_)_ __ (_)___| |__      _ __ ___  __ _ _   _  ___  ___| |_         
                                 \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__| |_| | '_ \| / __| '_ \    | '__/ _ \/ _` | | | |/ _ \/ __| __|  _____ 
                                  \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _|  _| | | | | \__ \ | | |   | | |  __/ (_| | |_| |  __/\__ \ |_  |_____|
                                   \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)_| |_|_| |_|_|___/_| |_|___|_|  \___|\__, |\__,_|\___||___/\__|        
                                                                                                                 |_____|           |_|                            
                                
                                         _____ ___            _____ _  _ _____         
                                   _    |_   _/ _ \     _    |___ /| || |___  |    _   
                                 _| |_    | || | | |  _| |_    |_ \| || |_ / /   _| |_ 
                                |_   _|   | || |_| | |_   _|  ___) |__   _/ /   |_   _|
                                  |_|     |_| \___/    |_|   |____/   |_|/_/      |_|  
                                                                                       
                                __        ______   ____ ___ ____                               _           _      _                                                        _   
                                \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___| |__  _   _| |_ __| | _____      ___ __      _ __ ___  __ _ _   _  ___  ___| |_ 
                                 \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __| '_ \| | | | __/ _` |/ _ \ \ /\ / / '_ \    | '__/ _ \/ _` | | | |/ _ \/ __| __|
                                  \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _\__ \ | | | |_| | || (_| | (_) \ V  V /| | | |   | | |  __/ (_| | |_| |  __/\__ \ |_ 
                                   \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___/_| |_|\__,_|\__\__,_|\___/ \_/\_/ |_| |_|___|_|  \___|\__, |\__,_|\___||___/\__|
                                                                                                                                      |_____|           |_|                    
                                       
                                   _   
                                 _| |_ 
                                |_   _|
                                  |_|  
                                       
                                
                                + T0: 347: wsgiref.simple_server.WSGIServer.shutdown_request -> socketserver.TCPServer.shutdown_request => ( request=<socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)> )
                                                 _____ ___            _____ _  _    ___                           _        _         _           _      _                             
                                           _    |_   _/ _ \     _    |___ /| || |  ( _ )     _     ___  ___   ___| | _____| |_   ___| |__  _   _| |_ __| | _____      ___ __      _   
                                         _| |_    | || | | |  _| |_    |_ \| || |_ / _ \   _| |_  / __|/ _ \ / __| |/ / _ \ __| / __| '_ \| | | | __/ _` |/ _ \ \ /\ / / '_ \   _| |_ 
                                        |_   _|   | || |_| | |_   _|  ___) |__   _| (_) | |_   _| \__ \ (_) | (__|   <  __/ |_ _\__ \ | | | |_| | || (_| | (_) \ V  V /| | | | |_   _|
                                          |_|     |_| \___/    |_|   |____/   |_|  \___/    |_|   |___/\___/ \___|_|\_\___|\__(_)___/_| |_|\__,_|\__\__,_|\___/ \_/\_/ |_| |_|   |_|  
                                                                                                                                                                                      
                                        
                                        + T0: 348: socket.socket.shutdown -> _socket.socket.shutdown => ( <socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)>, 1 )
                                        - T0: 348: socket.socket.shutdown -> _socket.socket.shutdown <= None
                                                 _____ ___            _____ _  _    ___                           _        _         _           _      _                             
                                                |_   _/ _ \          |___ /| || |  ( _ )           ___  ___   ___| | _____| |_   ___| |__  _   _| |_ __| | _____      ___ __          
                                         _____    | || | | |  _____    |_ \| || |_ / _ \   _____  / __|/ _ \ / __| |/ / _ \ __| / __| '_ \| | | | __/ _` |/ _ \ \ /\ / / '_ \   _____ 
                                        |_____|   | || |_| | |_____|  ___) |__   _| (_) | |_____| \__ \ (_) | (__|   <  __/ |_ _\__ \ | | | |_| | || (_| | (_) \ V  V /| | | | |_____|
                                                  |_| \___/          |____/   |_|  \___/          |___/\___/ \___|_|\_\___|\__(_)___/_| |_|\__,_|\__\__,_|\___/ \_/\_/ |_| |_|        
                                                                                                                                                                                      
                                        
                                                 _____ ___            _____ _  _   ___          
                                           _    |_   _/ _ \     _    |___ /| || | / _ \     _   
                                         _| |_    | || | | |  _| |_    |_ \| || || (_) |  _| |_ 
                                        |_   _|   | || |_| | |_   _|  ___) |__   _\__, | |_   _|
                                          |_|     |_| \___/    |_|   |____/   |_|   /_/    |_|  
                                                                                                
                                        __        ______   ____ ___ ____                               _                                                   _           
                                        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___| | ___  ___  ___     _ __ ___  __ _ _   _  ___  ___| |_     _   
                                         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __| |/ _ \/ __|/ _ \   | '__/ _ \/ _` | | | |/ _ \/ __| __|  _| |_ 
                                          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | | (__| | (_) \__ \  __/   | | |  __/ (_| | |_| |  __/\__ \ |_  |_   _|
                                           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___|_|\___/|___/\___|___|_|  \___|\__, |\__,_|\___||___/\__|   |_|  
                                                                                                                      |_____|           |_|                            
                                        
                                        + T0: 349: wsgiref.simple_server.WSGIServer.close_request -> socketserver.TCPServer.close_request => ( request=<socket.socket fd=1252, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 8111)> )
                                                         _____ ___            _________   ___                           _        _         _                        
                                                   _    |_   _/ _ \     _    |___ / ___| / _ \     _     ___  ___   ___| | _____| |_   ___| | ___  ___  ___     _   
                                                 _| |_    | || | | |  _| |_    |_ \___ \| | | |  _| |_  / __|/ _ \ / __| |/ / _ \ __| / __| |/ _ \/ __|/ _ \  _| |_ 
                                                |_   _|   | || |_| | |_   _|  ___) |__) | |_| | |_   _| \__ \ (_) | (__|   <  __/ |_ | (__| | (_) \__ \  __/ |_   _|
                                                  |_|     |_| \___/    |_|   |____/____/ \___/    |_|   |___/\___/ \___|_|\_\___|\__(_)___|_|\___/|___/\___|   |_|  
                                                                                                                                                                    
                                                
                                                + T0: 350: socket.socket.close => 
                                                        + T0: 351: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_closed', value=True )
                                                        - T0: 351: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                                                                 _____ ___            _________ ____                           _        _                        _         _                        
                                                           _    |_   _/ _ \     _    |___ / ___|___ \     _     ___  ___   ___| | _____| |_       _ __ ___  __ _| |    ___| | ___  ___  ___     _   
                                                         _| |_    | || | | |  _| |_    |_ \___ \ __) |  _| |_  / __|/ _ \ / __| |/ / _ \ __|     | '__/ _ \/ _` | |   / __| |/ _ \/ __|/ _ \  _| |_ 
                                                        |_   _|   | || |_| | |_   _|  ___) |__) / __/  |_   _| \__ \ (_) | (__|   <  __/ |_ _    | | |  __/ (_| | |  | (__| | (_) \__ \  __/ |_   _|
                                                          |_|     |_| \___/    |_|   |____/____/_____|   |_|   |___/\___/ \___|_|\_\___|\__(_)___|_|  \___|\__,_|_|___\___|_|\___/|___/\___|   |_|  
                                                                                                                                            |_____|              |_____|                            
                                                        
                                                        + T0: 352: socket.socket._real_close => ( _ss=<class '_socket.socket'> )
                                                        - T0: 352: socket.socket._real_close <= None
                                                                 _____ ___            _________ ____                           _        _                        _         _                        
                                                                |_   _/ _ \          |___ / ___|___ \           ___  ___   ___| | _____| |_       _ __ ___  __ _| |    ___| | ___  ___  ___         
                                                         _____    | || | | |  _____    |_ \___ \ __) |  _____  / __|/ _ \ / __| |/ / _ \ __|     | '__/ _ \/ _` | |   / __| |/ _ \/ __|/ _ \  _____ 
                                                        |_____|   | || |_| | |_____|  ___) |__) / __/  |_____| \__ \ (_) | (__|   <  __/ |_ _    | | |  __/ (_| | |  | (__| | (_) \__ \  __/ |_____|
                                                                  |_| \___/          |____/____/_____|         |___/\___/ \___|_|\_\___|\__(_)___|_|  \___|\__,_|_|___\___|_|\___/|___/\___|        
                                                                                                                                            |_____|              |_____|                            
                                                        
                                                - T0: 350: socket.socket.close <= None
                                                         _____ ___            _________   ___                           _        _         _                        
                                                        |_   _/ _ \          |___ / ___| / _ \           ___  ___   ___| | _____| |_   ___| | ___  ___  ___         
                                                 _____    | || | | |  _____    |_ \___ \| | | |  _____  / __|/ _ \ / __| |/ / _ \ __| / __| |/ _ \/ __|/ _ \  _____ 
                                                |_____|   | || |_| | |_____|  ___) |__) | |_| | |_____| \__ \ (_) | (__|   <  __/ |_ | (__| | (_) \__ \  __/ |_____|
                                                          |_| \___/          |____/____/ \___/          |___/\___/ \___|_|\_\___|\__(_)___|_|\___/|___/\___|        
                                                                                                                                                                    
                                                
                                        - T0: 349: wsgiref.simple_server.WSGIServer.close_request -> socketserver.TCPServer.close_request <= None
                                                 _____ ___            _____ _  _   ___          
                                                |_   _/ _ \          |___ /| || | / _ \         
                                         _____    | || | | |  _____    |_ \| || || (_) |  _____ 
                                        |_____|   | || |_| | |_____|  ___) |__   _\__, | |_____|
                                                  |_| \___/          |____/   |_|   /_/         
                                                                                                
                                        __        ______   ____ ___ ____                               _                                                   _           
                                        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___| | ___  ___  ___     _ __ ___  __ _ _   _  ___  ___| |_         
                                         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __| |/ _ \/ __|/ _ \   | '__/ _ \/ _` | | | |/ _ \/ __| __|  _____ 
                                          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | | (__| | (_) \__ \  __/   | | |  __/ (_| | |_| |  __/\__ \ |_  |_____|
                                           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___|_|\___/|___/\___|___|_|  \___|\__, |\__,_|\___||___/\__|        
                                                                                                                      |_____|           |_|                            
                                        
                                - T0: 347: wsgiref.simple_server.WSGIServer.shutdown_request -> socketserver.TCPServer.shutdown_request <= None
                                         _____ ___            _____ _  _ _____         
                                        |_   _/ _ \          |___ /| || |___  |        
                                 _____    | || | | |  _____    |_ \| || |_ / /   _____ 
                                |_____|   | || |_| | |_____|  ___) |__   _/ /   |_____|
                                          |_| \___/          |____/   |_|/_/           
                                                                                       
                                __        ______   ____ ___ ____                               _           _      _                                                        _   
                                \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ ___| |__  _   _| |_ __| | _____      ___ __      _ __ ___  __ _ _   _  ___  ___| |_ 
                                 \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__/ __| '_ \| | | | __/ _` |/ _ \ \ /\ / / '_ \    | '__/ _ \/ _` | | | |/ _ \/ __| __|
                                  \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _\__ \ | | | |_| | || (_| | (_) \ V  V /| | | |   | | |  __/ (_| | |_| |  __/\__ \ |_ 
                                   \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___/_| |_|\__,_|\__\__,_|\___/ \_/\_/ |_| |_|___|_|  \___|\__, |\__,_|\___||___/\__|
                                                                                                                                      |_____|           |_|                    
                                       
                                       
                                 _____ 
                                |_____|
                                       
                                       
                                
                        - T0: 52: wsgiref.simple_server.WSGIServer.process_request -> socketserver.BaseServer.process_request <= None
                                 _____ ___            ____ ____          
                                |_   _/ _ \          | ___|___ \         
                         _____    | || | | |  _____  |___ \ __) |  _____ 
                        |_____|   | || |_| | |_____|  ___) / __/  |_____|
                                  |_| \___/          |____/_____|        
                                                                         
                        __        ______   ____ ___ ____                                                                                                _           
                        \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __ _ __  _ __ ___   ___ ___  ___ ___     _ __ ___  __ _ _   _  ___  ___| |_         
                         \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__| '_ \| '__/ _ \ / __/ _ \/ __/ __|   | '__/ _ \/ _` | | | |/ _ \/ __| __|  _____ 
                          \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _| |_) | | | (_) | (_|  __/\__ \__ \   | | |  __/ (_| | |_| |  __/\__ \ |_  |_____|
                           \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_) .__/|_|  \___/ \___\___||___/___/___|_|  \___|\__, |\__,_|\___||___/\__|        
                                                                                  |_|                              |_____|           |_|                            
                        
                - T0: 43: wsgiref.simple_server.WSGIServer._handle_request_noblock -> socketserver.BaseServer._handle_request_noblock <= None
                         _____ ___            _  _  _____         
                        |_   _/ _ \          | || ||___ /         
                 _____    | || | | |  _____  | || |_ |_ \   _____ 
                |_____|   | || |_| | |_____| |__   _|__) | |_____|
                          |_| \___/             |_||____/         
                                                                  
                __        ______   ____ ___ ____                               _                     _ _                                         _                   
                \ \      / / ___| / ___|_ _/ ___|  ___ _ ____   _____ _ __    | |__   __ _ _ __   __| | | ___     _ __ ___  __ _ _   _  ___  ___| |_     _ __   ___  
                 \ \ /\ / /\___ \| |  _ | |\___ \ / _ \ '__\ \ / / _ \ '__|   | '_ \ / _` | '_ \ / _` | |/ _ \   | '__/ _ \/ _` | | | |/ _ \/ __| __|   | '_ \ / _ \ 
                  \ V  V /  ___) | |_| || | ___) |  __/ |   \ V /  __/ | _    | | | | (_| | | | | (_| | |  __/   | | |  __/ (_| | |_| |  __/\__ \ |_    | | | | (_) |
                   \_/\_/  |____/ \____|___|____/ \___|_|    \_/ \___|_|(_)___|_| |_|\__,_|_| |_|\__,_|_|\___|___|_|  \___|\__, |\__,_|\___||___/\__|___|_| |_|\___/ 
                                                                         |_____|                            |_____|           |_|                  |_____|           
                 _     _            _            
                | |__ | | ___   ___| | __        
                | '_ \| |/ _ \ / __| |/ /  _____ 
                | |_) | | (_) | (__|   <  |_____|
                |_.__/|_|\___/ \___|_|\_\        
                                                 
                